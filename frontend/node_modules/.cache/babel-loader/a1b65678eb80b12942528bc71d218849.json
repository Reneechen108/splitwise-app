{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/loginActions.js';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    var _s = $RefreshSig$();\n\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = _s(e => {\n      _s();\n\n      this.setState({\n        error: {}\n      });\n      e.preventDefault();\n      const history = useHistory();\n      this.props.login(this.state).then(res => history.push('/home'), err => this.setState({\n        errors: err.response.data.errors\n      }));\n    }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n      return [useHistory];\n    });\n    this.state = {\n      email: '',\n      psswd: '',\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n\n    if (errors.form) {\n      alert(errors.form);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email 123@gmail.com\",\n          value: this.state.email,\n          onChange: this.onChange,\n          required: true,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your info with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: this.state.password,\n          onChange: this.onChange,\n          required: true,\n          name: \"psswd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: [\"Haven't have account?\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: \"Sign me in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired\n};\nLoginForm.contextType = {\n  router: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  login\n})(LoginForm);","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js"],"names":["React","Component","Button","Form","Col","Row","PropTypes","connect","login","useHistory","LoginForm","constructor","props","onChange","e","setState","target","name","value","onSubmit","error","preventDefault","history","state","then","res","push","err","errors","response","data","email","psswd","render","form","alert","password","propTypes","func","isRequired","contextType","router","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,+BAApB;AACA,SAASC,UAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAC9BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAA;;AACd,UAAMA,KAAN;;AADc,SAiBlBC,QAjBkB,GAiBNC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AAAC,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AACH,KAnBiB;;AAAA,SAqBlBC,QArBkB,MAqBNL,CAAD,IAAO;AAAA;;AACd,WAAKC,QAAL,CAAc;AAACK,QAAAA,KAAK,EAAE;AAAR,OAAd;AACAN,MAAAA,CAAC,CAACO,cAAF;AACA,YAAMC,OAAO,GAAGb,UAAU,EAA1B;AACA,WAAKG,KAAL,CAAWJ,KAAX,CAAiB,KAAKe,KAAtB,EAA6BC,IAA7B,CACKC,GAAD,IAASH,OAAO,CAACI,IAAR,CAAa,OAAb,CADb,EAEKC,GAAD,IAAS,KAAKZ,QAAL,CAAc;AAACa,QAAAA,MAAM,EAAED,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBF;AAA3B,OAAd,CAFb;AAIH,KA7BiB;AAAA,cAwBEnB,UAxBF;AAAA;AAEd,SAAKc,KAAL,GAAY;AACRQ,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,KAAK,EAAE,EAFC;AAGRJ,MAAAA,MAAM,EAAE;AAHA,KAAZ;AAKH;;AAuBDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA;AAAD,QAAW,KAAKL,KAAtB;;AACA,QAAGK,MAAM,CAACM,IAAV,EAAe;AACXC,MAAAA,KAAK,CAACP,MAAM,CAACM,IAAR,CAAL;AACH;;AACD,wBACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKf,QAArB;AAA+B,MAAA,MAAM,EAAC,MAAtC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,WAAW,EAAC,qBAAvC;AAA6D,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWQ,KAA/E;AAAsF,UAAA,QAAQ,EAAE,KAAKlB,QAArG;AAA+G,UAAA,QAAQ,MAAvH;AAAwH,UAAA,IAAI,EAAC;AAA7H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,WAAW,EAAC,UAA1C;AAAqD,UAAA,KAAK,EAAE,KAAKU,KAAL,CAAWa,QAAvE;AAAiF,UAAA,QAAQ,EAAE,KAAKvB,QAAhG;AAA0G,UAAA,QAAQ,MAAlH;AAAmH,UAAA,IAAI,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,yDACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAkBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AA5D6B;;AAA5BH,S,CAUK2B,S,GAAY;AACf7B,EAAAA,KAAK,EAAGF,SAAS,CAACgC,IAAV,CAAeC;AADR,C;AAVjB7B,S,CAcK8B,W,GAAc;AACjBC,EAAAA,MAAM,EAAEnC,SAAS,CAACoC,MAAV,CAAiBH;AADR,C;AAgDzB,eAAgBhC,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAAuBE,SAAvB,CAAhB","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {login} from '../../actions/loginActions.js'\nimport { useHistory} from 'react-router-dom';\n\nclass LoginForm extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            email: '',\n            psswd: '',\n            errors: {}\n        }\n    }\n    \n    static propTypes = {\n        login : PropTypes.func.isRequired\n    }\n\n    static contextType = {\n        router: PropTypes.object.isRequired\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        this.setState({error: {}})\n        e.preventDefault();\n        const history = useHistory();\n        this.props.login(this.state).then(\n            (res) => history.push('/home'),\n            (err) => this.setState({errors: err.response.data.errors})\n        )\n    }\n    render() {\n        const {errors} = this.state\n        if(errors.form){\n            alert(errors.form)\n        }\n        return (\n            <Form onSubmit={this.onSubmit} method=\"POST\">\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email: </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={this.state.email} onChange={this.onChange} required name=\"email\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">\n                We'll never share your info with anyone else.\n                </Form.Text>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange} required name=\"psswd\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">Haven't have account? \n                    <Button variant=\"link\">\n                            Sign me in!\n                    </Button>\n                </Form.Text>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        )\n    }\n}\nexport default  connect(null, {login})(LoginForm)"]},"metadata":{},"sourceType":"module"}