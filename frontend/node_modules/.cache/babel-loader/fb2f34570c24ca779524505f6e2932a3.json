{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userSignupRequest } from '../../actions/signupActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      this.setState({\n        error: ''\n      });\n      e.preventDefault();\n      this.props.userSignupRequest(this.state).then(res => {}, ({\n        response\n      }) => {\n        console.log(response.data);\n        this.setState({\n          errors: response.data\n        });\n        if (this.state.error.msg) alert(this.state.error.msg);\n      });\n    };\n\n    this.state = {\n      username: '',\n      psswd: '',\n      email: '',\n      phone: '',\n      errors: ''\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    console.log(\"errors:\", errors);\n    return /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"50vw\",\n        padding: \"4rem\"\n      },\n      onSubmit: this.onSubmit,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Hi there! My name is\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: this.state.username,\n          onChange: this.onChange,\n          required: true,\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Here\\u2019s my password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: this.state.password,\n          onChange: this.onChange,\n          required: true,\n          name: \"psswd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Here\\u2019s my email address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email 123@gmail.com\",\n          value: this.state.email,\n          onChange: this.onChange,\n          required: true,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridPhone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"And here\\u2019s my phone number: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"tel\",\n          placeholder: \"123-456-7890\",\n          value: this.state.phone,\n          onChange: this.onChange,\n          pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n          required: true,\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: [\"Already had account? \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: \"Sign me in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"By signing up, you accept the Splitwise Terms of Service.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nSignupForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    msg: state.username\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignupRequest\n})(SignupForm);","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupForm.js"],"names":["React","Component","Button","Form","Col","Row","PropTypes","connect","userSignupRequest","SignupForm","constructor","props","onChange","e","setState","target","name","value","onSubmit","error","preventDefault","state","then","res","response","console","log","data","errors","msg","alert","username","psswd","email","phone","render","width","padding","password","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {userSignupRequest} from '../../actions/signupActions'\n\nclass SignupForm extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            username: '',\n            psswd: '',\n            email: '',\n            phone: '',\n            errors: ''\n        }\n    }\n\n    static propTypes = {\n        userSignupRequest : PropTypes.func.isRequired\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    \n    onSubmit = (e) => {\n        this.setState({error: ''})\n        e.preventDefault();\n        this.props.userSignupRequest(this.state).then(\n            (res)=>{},\n            ({response}) => {\n                console.log(response.data);\n                this.setState({errors: response.data})\n                if(this.state.error.msg)\n                    alert(this.state.error.msg)\n            }\n        )\n    }\n\n    render(){\n        const {errors} = this.state;\n        console.log(\"errors:\", errors);\n        return (\n        <Form style={{width: \"50vw\", padding: \"4rem\"}} onSubmit={this.onSubmit} method=\"POST\">\n\n            <Form.Group controlId=\"formGridUsername\">\n                <Form.Label>Hi there! My name is</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.onChange} required name=\"username\"/>\n                {errors.username && <span>{errors.username}</span>}\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridPassword\">\n                <Form.Label>Here’s my password: </Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange} required name=\"psswd\"/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridEmail\">\n                <Form.Label>Here’s my email address: </Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={this.state.email} onChange={this.onChange} required name=\"email\"/>\n                {errors.email && <span>{errors.email}</span>}\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridPhone\">\n                <Form.Label>And here’s my phone number: </Form.Label>\n                <Form.Control type=\"tel\" placeholder=\"123-456-7890\" value={this.state.phone} onChange={this.onChange} pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required name=\"phone\"/>\n            </Form.Group>\n\n\n            <Form.Text className=\"text-muted\">Already had account? <Button variant=\"link\">\n                    Sign me in!\n            </Button></Form.Text>\n\n            <Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form.Group>\n            <h6>By signing up, you accept the Splitwise Terms of Service.</h6>\n        </Form>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(\"state\", state);\n    return {\n        msg: state.username\n    }\n}\n\nexport default connect(mapStateToProps, {userSignupRequest})(SignupForm)"]},"metadata":{},"sourceType":"module"}