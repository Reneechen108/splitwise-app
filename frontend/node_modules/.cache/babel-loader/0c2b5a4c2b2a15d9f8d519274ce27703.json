{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Button, Form, Col, Row, Image, Dropdown, Jumbotron, Container } from 'react-bootstrap';\nimport DashNav from '../pages/Dashboard/dashNav';\nimport ExpenseInput from '../components/ExpenseInput';\nimport ActivityInput from '../components/ActivityInput';\nimport Balance from '../components/Balance';\nimport SingleExpense from '../pages/SingleExpense';\nimport logo from '../images/signup.png';\nimport { DB } from '../constants/DB';\nimport { ActivityContext } from '../contexts/activityContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const {\n    activities\n  } = useContext(ActivityContext);\n  const leave_URL = `${DB}/reject`;\n  const calculate_URL = `${DB}/calculate`;\n  let expenseList = [];\n  useEffect(() => {\n    try {\n      fetch(calculate_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: parseInt(props.expense[0].G_ID),\n          name: localStorage.getItem('authID')\n        })\n      }).then(res => res.json()).then(result => {\n        // setUser(result.dataset)\n        console.log(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  console.log(\"expense\");\n\n  if (props.expense) {\n    let after = props.expense.filter(p => p.role !== 1);\n    console.log(\"after\", after);\n    after.map((item, index) => {\n      expenseList.push( /*#__PURE__*/_jsxDEV(ExpenseInput, {\n        value: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this));\n    });\n  }\n\n  expenseList.sort((a, b) => a.props.value.date > b.props.value.date ? -1 : 1);\n\n  function leave() {\n    let allExpense = props.expense.filter(p => p.user === localStorage.getItem('authID') && p.role !== 1 && p.amount !== 0);\n    console.log(\"allExpense\", allExpense);\n\n    if (allExpense.length > 0) {\n      alert(\"You should pay off all the expenses before you leave the group!\");\n    } else {\n      fetch(leave_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: parseInt(props.expense[0].G_ID),\n          member: localStorage.getItem('authID')\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(result.dataset);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 6,\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        style: {\n          padding: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: logo,\n              style: {\n                width: \"50px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Home Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SingleExpense, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"ml-3\",\n              onClick: leave,\n              children: \"Leave Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [monthNames[new Date().getMonth()], \" \", new Date().getFullYear()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: expenseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"GROUP BALANCES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"View details ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Expenses, \"Eku3qfLUAjeH4QKJ7S9C1QLzU2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/Expenses.js"],"names":["React","useState","useContext","useEffect","Button","Form","Col","Row","Image","Dropdown","Jumbotron","Container","DashNav","ExpenseInput","ActivityInput","Balance","SingleExpense","logo","DB","ActivityContext","Expenses","props","monthNames","activities","leave_URL","calculate_URL","expenseList","fetch","method","headers","body","JSON","stringify","id","parseInt","expense","G_ID","name","localStorage","getItem","then","res","json","result","console","log","dataset","e","after","filter","p","role","map","item","index","push","sort","a","b","value","date","leave","allExpense","user","amount","length","alert","member","padding","width","Date","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React, {useState,useContext, useEffect}from 'react'\nimport { Button, Form, Col, Row, Image, Dropdown, Jumbotron, Container } from 'react-bootstrap';\nimport DashNav from '../pages/Dashboard/dashNav'\nimport ExpenseInput from '../components/ExpenseInput'\nimport ActivityInput from '../components/ActivityInput'\nimport Balance from '../components/Balance'\nimport SingleExpense from '../pages/SingleExpense'\nimport logo from '../images/signup.png'\nimport {DB} from '../constants/DB'\nimport {ActivityContext} from '../contexts/activityContext'\n\nfunction Expenses(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const {activities} = useContext(ActivityContext)\n    const leave_URL = `${DB}/reject`\n    const calculate_URL = `${DB}/calculate`\n    let expenseList = [];\n\n    useEffect( ()=>{\n        try{\n            fetch(calculate_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: parseInt(props.expense[0].G_ID),\n                    name: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                // setUser(result.dataset)\n                console.log(result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    console.log(\"expense\");\n    if(props.expense){\n        let after = props.expense.filter(p => p.role !== 1)\n        console.log(\"after\", after);\n        after.map((item, index) => {\n            expenseList.push(<ExpenseInput value={item} key={index} />)\n        });\n    }\n\n    expenseList.sort((a, b) => (a.props.value.date > b.props.value.date) ? -1 : 1)\n    \n    function leave(){\n        let allExpense = props.expense.filter(p => (p.user===localStorage.getItem('authID') && p.role !== 1 && p.amount !== 0))\n        console.log(\"allExpense\", allExpense);\n        if(allExpense.length > 0){\n            alert(\"You should pay off all the expenses before you leave the group!\")\n        }else{\n            fetch(leave_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: parseInt(props.expense[0].G_ID),\n                    member: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(result.dataset);\n            })\n        }\n    }\n\n    return (\n        <>\n        <Col md={6}>\n                <Jumbotron style={{padding: \"10px\"}}>\n                        <Container>\n                            <Row>   \n                                <Image src={logo} style={{width: \"50px\"}}></Image>\n                                <h3>Home Expenses</h3>\n                                <SingleExpense />\n                                <Button variant=\"secondary\" className=\"ml-3\" onClick={leave}>\n                                    Leave Group\n                                </Button>\n                            </Row>\n                            <Row>\n                                <h6>{monthNames[new Date().getMonth()]} {new Date().getFullYear()}</h6>\n                            </Row>\n                        </Container>\n                    </Jumbotron>\n                <Row>\n                    {expenseList}\n                </Row>\n            </Col>\n            <Col md={3}>\n                <h4>GROUP BALANCES</h4>\n                <Balance />\n                <a href=\"#\">View details ...</a>\n            </Col>\n        </>\n    )\n}\n\nexport default Expenses"]},"metadata":{},"sourceType":"module"}