{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { DB } from '../../constants/DB';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signin() {\n  _s();\n\n  const [display, setDisplay] = useState(\"none\");\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const Login_URL = `${DB}/signin`;\n  const history = useHistory();\n\n  function toggleDisplay() {\n    if (display === \"none\") setDisplay(\"display\");else setDisplay(\"none\");\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  async function handleSignin(event) {\n    event.preventDefault();\n\n    if (!email) {\n      return;\n    }\n\n    if (!password) {\n      return;\n    }\n\n    console.log(email, password);\n\n    try {\n      let res = await fetch(Login_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        console.log(result);\n\n        if (result) {\n          localStorage.setItem('authUser', result.username);\n          localStorage.setItem('authEmail', result.email);\n          localStorage.setItem('authID', result.ID);\n          toggleDisplay();\n          history.push('/home');\n          refreshPage();\n        }\n\n        console.log(\"login success\");\n      } else if (result && result.success === false) {\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleDisplay,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n      display: display,\n      children: /*#__PURE__*/_jsxDEV(Application.Close, {\n        toggleDisplay: toggleDisplay,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signin, \"YQmfCjFAmx7N841skYe9YFyhX3w=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signin.js"],"names":["React","useState","Button","Form","Application","FontAwesomeIcon","faTimes","DB","jwt_decode","useHistory","Signin","display","setDisplay","email","setEmail","password","setPassword","Login_URL","history","toggleDisplay","refreshPage","window","location","reload","handleSignin","event","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","result","json","success","localStorage","setItem","username","ID","push","alert","msg","e"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {DB} from '../../constants/DB'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory} from 'react-router-dom';\n\nfunction Signin() {\n    const [display,setDisplay] = useState(\"none\")\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const Login_URL = `${DB}/signin`\n    const history = useHistory();\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    async function handleSignin(event){\n        event.preventDefault();\n        if(!email){\n            return;\n        }\n        if(!password){\n            return;\n        }\n        console.log(email, password);\n        try{\n            let res = await fetch(Login_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            });\n            let result = await res.json();\n            \n            if(result && result.success){\n                console.log(result);\n                if(result){\n                    localStorage.setItem('authUser', result.username);\n                    localStorage.setItem('authEmail', result.email);localStorage.setItem('authID', result.ID);\n                    toggleDisplay();\n                    history.push('/home');\n                    refreshPage()\n                }\n                console.log(\"login success\");\n            }else if(result && result.success === false){\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    \n    return (    \n        <>\n        <Button variant=\"primary\" onClick={toggleDisplay}>Sign In</Button>\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            \n        </Application.Base>  \n        </>\n    )\n}\n\nexport default Signin"]},"metadata":{},"sourceType":"module"}