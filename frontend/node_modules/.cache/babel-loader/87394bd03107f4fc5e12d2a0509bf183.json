{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Picture from '../../components/Picture';\nimport { DB } from '../../constants/DB';\nimport Application from '../../components/application/applicaiton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [picture, setPicture] = useState();\n  const [currency, setCurrency] = useState();\n  const [time, setTime] = useState();\n  const [language, setLanguage] = useState();\n  const [display, setDisplay] = useState(\"none\");\n  const getAll_URL = `${DB}/getUser`;\n  const update_URL = `${DB}/update`;\n  const emailID = localStorage.getItem('authEmail');\n  console.log(\"this is email\", emailID);\n\n  function toggleDisplay() {\n    if (display === \"none\") {\n      setDisplay(\"display\");\n      console.log(\"this is user: \", user);\n      setUsername(user[0].username);\n      setEmail(user[0].email);\n      setPhone(user[0].phone);\n    } else setDisplay(\"none\");\n  }\n\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailID\n        })\n      }).then(res => res.json()).then(result => {\n        setUser(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  if (user) {\n    if (user[0].picture) setPicture(user[0].picture);\n    if (user[0].currency) setCurrency(user[0].currency);\n    if (user[0].time) setTime(user[0].time);\n    if (user[0].language) setLanguage(user[0].language);\n    console.log(\"BEFORE INFO: \", username, email, phone, currency, time, language);\n  }\n\n  function handleUpdate() {\n    toggleDisplay();\n    console.log(username, email, phone);\n    let newInfo = {\n      username: username,\n      email: email,\n      phone: phone\n    };\n    console.log(\"user[0]\", user[0]);\n    console.log(\"newInfo\", newInfo);\n    Object.assign(user[0], newInfo);\n  }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(value, name);\n\n    if (name === \"currency\") {\n      setCurrency(value);\n    }\n\n    if (name === \"time\") {\n      setTime(value);\n    }\n\n    if (name === \"language\") {\n      setLanguage(value);\n    }\n  }\n\n  async function updateAll() {\n    try {\n      let res = await fetch(update_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          username,\n          email: email,\n          phone: phone,\n          currency: currency,\n          time: time,\n          language: language\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        console.log(result);\n      } else if (result && result.success === false) {\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  let title = [\"username\", \"email\", \"phone\"];\n  let items = [];\n\n  if (user) {\n    for (let number = 0; number < 3; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: ['Your ' + title[number], /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: toggleDisplay,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 68\n          }, this), \"Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 113\n        }, this), user[0][title[number]]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 24\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  let currencies = [];\n  let times = [];\n  let languages = [];\n  currencies = ['USD', 'CNY'];\n  currencies = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 16\n    }, this);\n  });\n  times = ['GMT-1', 'GMT-2'];\n  times = times.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 16\n    }, this);\n  });\n  languages = ['English', 'Chinese'];\n  languages = languages.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Picture, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"currency\",\n            children: \"Your default currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"currency\",\n            id: \"currency\",\n            value: currency,\n            className: \"form-control\",\n            onChange: handleChange,\n            children: currencies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"Your time zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"time\",\n            id: \"time\",\n            value: time,\n            className: \"form-control\",\n            onChange: handleChange,\n            children: times\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"language\",\n            id: \"language\",\n            value: language,\n            className: \"form-control\",\n            onChange: handleChange,\n            children: languages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      style: {\n        float: \"right\"\n      },\n      onClick: updateAll,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n      display: display,\n      children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n        toggleDisplay: toggleDisplay,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: username,\n            onChange: ({\n              target\n            }) => setUsername(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: ({\n              target\n            }) => setEmail(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"tel\",\n            value: phone,\n            onChange: ({\n              target\n            }) => setPhone(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"zrH0uVeD8WVoeQvNSWUmknsY26I=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js"],"names":["React","useEffect","useState","Button","Form","Col","Row","faPen","faTimes","FontAwesomeIcon","Picture","DB","Application","Profile","user","setUser","username","setUsername","email","setEmail","phone","setPhone","picture","setPicture","currency","setCurrency","time","setTime","language","setLanguage","display","setDisplay","getAll_URL","update_URL","emailID","localStorage","getItem","console","log","toggleDisplay","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","handleUpdate","newInfo","Object","assign","handleChange","event","value","target","name","updateAll","success","alert","msg","title","items","number","push","currencies","times","languages","map","item","index","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\nimport Application from '../../components/application/applicaiton'\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState();\n    const [time, setTime] = useState();\n    const [language, setLanguage] = useState();\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    function toggleDisplay(){\n        if(display === \"none\"){\n            setDisplay(\"display\")\n            console.log(\"this is user: \", user);\n            setUsername(user[0].username)\n            setEmail(user[0].email)\n            setPhone(user[0].phone)\n        }\n        else\n            setDisplay(\"none\")\n    }\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n    if(user){\n        if(user[0].picture)\n            setPicture(user[0].picture)\n        if(user[0].currency)\n            setCurrency(user[0].currency)\n        if(user[0].time)\n            setTime(user[0].time)\n        if(user[0].language)\n            setLanguage(user[0].language)\n        console.log(\"BEFORE INFO: \", username, email, phone, currency, time, language);\n    }\n    function handleUpdate(){\n        toggleDisplay();\n        console.log(username, email, phone);\n        let newInfo = {\n            username: username,\n            email: email,\n            phone: phone\n        }\n        console.log(\"user[0]\", user[0]);\n        console.log(\"newInfo\", newInfo);\n        Object.assign(user[0], newInfo)\n    }\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        if(name === \"currency\"){\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            setTime(value);\n\n        }\n        if(name === \"language\"){\n            setLanguage(value);\n        }\n    }\n    async function updateAll(){\n        try{\n            let res = await fetch(update_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username, username,\n                    email: email,\n                    phone: phone,\n                    currency: currency,\n                    time: time,\n                    language: language\n                })\n            });\n            let result = await res.json();\n            \n            if(result && result.success){\n                console.log(result);\n            }else if(result && result.success === false){\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n        }\n    \n    }\n        \n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <Form.Label>\n                    {'Your ' +title[number]}\n                    <Button variant=\"link\" onClick={toggleDisplay}><FontAwesomeIcon icon={faPen} />Edit</Button><br />\n                    {user[0][title[number]]}\n                </Form.Label>\n            );\n            items.push(<br />)\n            items.push(<br />)\n        }\n    }\n    \n\n    let currencies = []\n    let times = []\n    let languages= []\n    currencies = ['USD', 'CNY'];\n    currencies = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    times = ['GMT-1', 'GMT-2'];\n    times = times.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    languages = ['English', 'Chinese'];\n    languages = languages.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    return (\n        <>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                <Picture />\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"currency\">Your default currency</label>\n                    <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        value={currency}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {currencies}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"time\">Your time zone</label>\n                    <select\n                        name=\"time\"\n                        id=\"time\"\n                        value={time}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {times}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"language\">Language</label>\n                    <select\n                        name=\"language\"\n                        id=\"language\"\n                        value={language}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {languages}\n                    </select>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}} onClick={updateAll}>Save</Button>\n\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPhone(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}