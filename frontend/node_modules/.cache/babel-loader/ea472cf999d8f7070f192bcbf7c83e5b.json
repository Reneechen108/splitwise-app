{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Picture from '../../components/Picture';\nimport { DB } from '../../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [picture, setPicture] = useState();\n  const [currency, setCurrency] = useState();\n  const [time, setTime] = useState();\n  const [language, setLanguage] = useState();\n  const [display, setDisplay] = useState(\"none\");\n  const getAll_URL = `${DB}/getUser`;\n  const emailID = localStorage.getItem('authEmail');\n  console.log(\"this is email\", emailID);\n\n  function toggleDisplay() {\n    if (display === \"none\") setDisplay(\"display\");else setDisplay(\"none\");\n  }\n\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailID\n        })\n      }).then(res => res.json()).then(result => {\n        setUser(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  let title = [\"username\", \"email\", \"phone\"];\n  let items = [];\n\n  if (user) {\n    for (let number = 0; number < 3; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: ['Your ' + title[number], /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), \"Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 73\n        }, this), user[0][title[number]]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  let others = [\"Your default currency\", \"Your zome time\", \"Language\"];\n  let options = [['USD', 'CNY'], ['GMT-1', 'GMT-2'], ['English', 'Chinese']];\n  let other_items = [];\n\n  for (let number = 0; number < 3; number++) {\n    other_items.push( /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: others[number]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        children: options[number].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Picture, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Your default currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: options[0].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Your time zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: options[1].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: options[2].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      style: {\n        float: \"right\"\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n      display: display,\n      children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n        toggleDisplay: toggleDisplay,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSignin,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: username,\n            onChange: ({\n              target\n            }) => setUsername(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: ({\n              target\n            }) => setEmail(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"tel\",\n            value: phone,\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"zrH0uVeD8WVoeQvNSWUmknsY26I=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js"],"names":["React","useEffect","useState","Button","Form","Col","Row","faPen","FontAwesomeIcon","Picture","DB","Profile","user","setUser","username","setUsername","email","setEmail","phone","setPhone","picture","setPicture","currency","setCurrency","time","setTime","language","setLanguage","display","setDisplay","getAll_URL","emailID","localStorage","getItem","console","log","toggleDisplay","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","title","items","number","push","others","options","other_items","map","item","index","float","faTimes","handleSignin","target","value","setPassword"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState();\n    const [time, setTime] = useState();\n    const [language, setLanguage] = useState();\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <Form.Label>\n                    {'Your ' +title[number]}\n                    <a href=\"#\"><FontAwesomeIcon icon={faPen} />Edit</a><br />\n                    {user[0][title[number]]}\n                </Form.Label>\n            );\n            items.push(<br />)\n            items.push(<br />)\n        }\n    }\n    \n\n    let others = [\"Your default currency\", \"Your zome time\", \"Language\"]\n    let options = [['USD', 'CNY'], ['GMT-1', 'GMT-2'], ['English', 'Chinese']];\n    let other_items = [];\n    for (let number = 0; number < 3; number++) {\n        other_items.push(\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>{others[number]}</Form.Label>\n                <Form.Control as=\"select\">\n                    {\n                        options[number].map((item, index) => (\n                            <option key={index} >{item}</option>\n                        ))\n                    }\n                </Form.Control>\n            </Form.Group>\n        );\n    }\n\n    return (\n        <>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                <Picture />\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Your default currency</Form.Label>\n                    <Form.Control as=\"select\">\n                        {\n                            options[0].map((item, index) => (\n                                <option key={index} >{item}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Your time zone</Form.Label>\n                    <Form.Control as=\"select\">\n                        {\n                            options[1].map((item, index) => (\n                                <option key={index} >{item}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Language</Form.Label>\n                    <Form.Control as=\"select\">\n                        {\n                            options[2].map((item, index) => (\n                                <option key={index} >{item}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}}>Save</Button>\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form onSubmit={handleSignin} method=\"POST\">\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPassword(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}