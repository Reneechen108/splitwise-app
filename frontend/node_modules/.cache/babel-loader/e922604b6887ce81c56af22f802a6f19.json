{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Picture from '../../components/Picture';\nimport { DB } from '../../constants/DB';\nimport Application from '../../components/application/applicaiton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [picture, setPicture] = useState();\n  const [currency, setCurrency] = useState();\n  const [time, setTime] = useState();\n  const [language, setLanguage] = useState();\n  const [display, setDisplay] = useState(\"none\");\n  const getAll_URL = `${DB}/getUser`;\n  const update_URL = `${DB}/update`;\n  const emailID = localStorage.getItem('authEmail');\n  console.log(\"this is email\", emailID);\n\n  function toggleDisplay() {\n    if (display === \"none\") {\n      setDisplay(\"display\");\n      console.log(\"this is user: \", user);\n      setUsername(user[0].username);\n      setEmail(user[0].email);\n      setPhone(user[0].phone);\n    } else setDisplay(\"none\");\n  }\n\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailID\n        })\n      }).then(res => res.json()).then(result => {\n        setUser(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  function handleUpdate() {\n    toggleDisplay();\n    console.log(username, email, phone);\n    let newInfo = {\n      username: username,\n      email: email,\n      phone: phone\n    };\n    console.log(\"user[0]\", user[0]);\n    console.log(\"newInfo\", newInfo);\n    Object.assign(user[0], newInfo);\n  }\n\n  function hangleChange(event) {\n    const value = event.value;\n    const name = event.target.name;\n\n    if (name === \"currency\") {\n      setCurrency(value);\n    } // if(name === \"bed\"){\n    //     setBed(value);\n    // }\n    // if(name === \"bath\"){\n    //     setBath(value);\n    // }\n\n  }\n\n  function updateAll() {\n    // fetch(update_URL, {\n    //     method: 'post',\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //         email: email,\n    //     })\n    // })\n    console.log(\"ALL INFO: \", username, email, phone, currency, time, language);\n  }\n\n  let title = [\"username\", \"email\", \"phone\"];\n  let items = [];\n\n  if (user) {\n    // Object.assign(displayInfo, user[0])\n    for (let number = 0; number < 3; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: ['Your ' + title[number], /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: toggleDisplay,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 68\n          }, this), \"Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 113\n        }, this), user[0][title[number]]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  let others = [\"Your default currency\", \"Your zome time\", \"Language\"];\n  let options = [['USD', 'CNY'], ['GMT-1', 'GMT-2'], ['English', 'Chinese']];\n  let other_items = [];\n\n  for (let number = 0; number < 3; number++) {\n    other_items.push( /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: others[number]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        children: options[number].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Picture, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Your default currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"currency\",\n            onChange: hangleChange,\n            children: options[0].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Your time zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: options[1].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              onChange: ({\n                target\n              }) => setTime(target.value),\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: options[2].map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item,\n              onChange: ({\n                target\n              }) => setLanguage(target.value),\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      style: {\n        float: \"right\"\n      },\n      onClick: updateAll,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n      display: display,\n      children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n        toggleDisplay: toggleDisplay,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: username,\n            onChange: ({\n              target\n            }) => setUsername(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: ({\n              target\n            }) => setEmail(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"tel\",\n            value: phone,\n            onChange: ({\n              target\n            }) => setPhone(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"zrH0uVeD8WVoeQvNSWUmknsY26I=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js"],"names":["React","useEffect","useState","Button","Form","Col","Row","faPen","faTimes","FontAwesomeIcon","Picture","DB","Application","Profile","user","setUser","username","setUsername","email","setEmail","phone","setPhone","picture","setPicture","currency","setCurrency","time","setTime","language","setLanguage","display","setDisplay","getAll_URL","update_URL","emailID","localStorage","getItem","console","log","toggleDisplay","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","handleUpdate","newInfo","Object","assign","hangleChange","event","value","name","target","updateAll","title","items","number","push","others","options","other_items","map","item","index","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\nimport Application from '../../components/application/applicaiton'\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState();\n    const [time, setTime] = useState();\n    const [language, setLanguage] = useState();\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    function toggleDisplay(){\n        if(display === \"none\"){\n            setDisplay(\"display\")\n            console.log(\"this is user: \", user);\n            setUsername(user[0].username)\n            setEmail(user[0].email)\n            setPhone(user[0].phone)\n        }\n        else\n            setDisplay(\"none\")\n    }\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    function handleUpdate(){\n        toggleDisplay();\n        console.log(username, email, phone);\n        let newInfo = {\n            username: username,\n            email: email,\n            phone: phone\n        }\n        console.log(\"user[0]\", user[0]);\n        console.log(\"newInfo\", newInfo);\n        Object.assign(user[0], newInfo)\n    }\n\n    function hangleChange(event){\n        const value = event.value;\n        const name = event.target.name;\n        if(name === \"currency\"){\n            setCurrency(value);\n        }\n        // if(name === \"bed\"){\n        //     setBed(value);\n\n        // }\n        // if(name === \"bath\"){\n        //     setBath(value);\n        // }\n    }\n    function updateAll(){\n        // fetch(update_URL, {\n        //     method: 'post',\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         email: email,\n\n        //     })\n        // })\n        console.log(\"ALL INFO: \", username, email, phone, currency, time, language);\n    }\n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        // Object.assign(displayInfo, user[0])\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <Form.Label>\n                    {'Your ' +title[number]}\n                    <Button variant=\"link\" onClick={toggleDisplay}><FontAwesomeIcon icon={faPen} />Edit</Button><br />\n                    {user[0][title[number]]}\n                </Form.Label>\n            );\n            items.push(<br />)\n            items.push(<br />)\n        }\n    }\n    \n\n    let others = [\"Your default currency\", \"Your zome time\", \"Language\"]\n    let options = [['USD', 'CNY'], ['GMT-1', 'GMT-2'], ['English', 'Chinese']];\n    let other_items = [];\n    for (let number = 0; number < 3; number++) {\n        other_items.push(\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>{others[number]}</Form.Label>\n                <Form.Control as=\"select\">\n                    {\n                        options[number].map((item, index) => (\n                            <option key={index} >{item}</option>\n                        ))\n                    }\n                </Form.Control>\n            </Form.Group>\n        );\n    }\n\n    return (\n        <>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                <Picture />\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Your default currency</Form.Label>\n                    <Form.Control as=\"select\" name=\"currency\" onChange={hangleChange}>\n                        {\n                            options[0].map((item, index) => (\n                                <option key={index}>{item}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Your time zone</Form.Label>\n                    <Form.Control as=\"select\">\n                        {\n                            options[1].map((item, index) => (\n                                <option key={index} onChange={({ target }) => setTime(target.value)}>{item}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Language</Form.Label>\n                    <Form.Control as=\"select\">\n                        {\n                            options[2].map((item, index) => (\n                                <option key={index} value={item} onChange={({ target }) => setLanguage(target.value)}>{item}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}} onClick={updateAll}>Save</Button>\n\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPhone(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}