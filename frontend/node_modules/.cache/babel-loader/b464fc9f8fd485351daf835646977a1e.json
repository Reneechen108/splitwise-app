{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/components/CreateInput.js\";\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png';\nimport { DB } from '../constants/DB';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst React = require('react');\n\nclass CreateInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      users: ''\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  componentDidMount() {\n    let Search_URL = `${DB}/searchUser`;\n    axios.get(Search_URL).then(response => {\n      this.setState({\n        users: response.data.dataset\n      });\n    });\n  }\n\n  handleSearch(event) {\n    event.preventDefault();\n    let target = event.target;\n\n    if (target.name === \"username\") {\n      this.setState({\n        username: target.value\n      });\n    }\n\n    if (target.name === \"email\") {\n      this.setState({\n        email: target.value\n      });\n    } // console.log(\"value: \", target.value)\n    // let Search_URL = `${DB}/searchUser`\n    // try{\n    //     let res = fetch(Search_URL, {\n    //         method: 'post',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             email: this.state.email,\n    //             username: this.state.username\n    //         })\n    //     });\n    //     let result = res.json();\n    //     if(result && result.success){\n    //         console.log(result);\n    //         console.log(\"get one user\");\n    //     }else if(result && result.success === false){\n    //         alert(result.msg);\n    //     }\n    // }catch(e){\n    //     console.log(e);\n    // }\n\n  }\n\n  render() {\n    let user = '';\n    let pic = logo;\n\n    let form = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          onChange: this.handleSearch,\n          value: this.state.username,\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 5,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: this.handleSearch,\n          value: this.state.email,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), this.state.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n\n    if (this.state.users) {\n      user = this.state.users.filter(u => u.username === this.state.username);\n    }\n\n    if (user[0]) {\n      document.getElementById('display').innerHTML = user[0].username;\n      pic = user[0].picture;\n      form = '';\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: pic,\n            roundedCircle: true,\n            style: {\n              width: \"30px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), form]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default CreateInput;","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/components/CreateInput.js"],"names":["Row","Image","Form","Col","logo","DB","axios","React","require","CreateInput","Component","constructor","props","state","username","email","users","handleSearch","bind","componentDidMount","Search_URL","get","then","response","setState","data","dataset","event","preventDefault","target","name","value","render","user","pic","form","filter","u","document","getElementById","innerHTML","picture","width"],"mappings":"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","sourcesContent":["import { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png'\nimport {DB} from '../constants/DB'\nimport axios from 'axios';\n\nconst React = require('react')\n\nclass CreateInput extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username: '',\n            email: '',\n            users: ''\n        }\n        this.handleSearch = this.handleSearch.bind(this)\n    }\n\n    componentDidMount(){\n        let Search_URL = `${DB}/searchUser`\n        axios.get(Search_URL)\n            .then((response) => {\n            this.setState({\n                users: response.data.dataset\n            })\n        });\n    }\n    \n    handleSearch(event){\n        event.preventDefault();\n        let target = event.target;\n        if(target.name === \"username\"){\n            this.setState(\n                {username: target.value}\n            )\n        }\n        if(target.name === \"email\"){\n            this.setState(\n                {email: target.value}\n            )\n        }\n        \n        // console.log(\"value: \", target.value)\n        // let Search_URL = `${DB}/searchUser`\n        // try{\n        //     let res = fetch(Search_URL, {\n        //         method: 'post',\n        //         headers: {\n        //             'Accept': 'application/json',\n        //             'Content-Type': 'application/json'\n        //         },\n        //         body: JSON.stringify({\n        //             email: this.state.email,\n        //             username: this.state.username\n        //         })\n        //     });\n        //     let result = res.json();\n            \n        //     if(result && result.success){\n        //         console.log(result);\n                \n        //         console.log(\"get one user\");\n        //     }else if(result && result.success === false){\n        //         alert(result.msg);\n        //     }\n        // }catch(e){\n        //     console.log(e);\n        // }\n    }\n\n    render(){\n        let user = '';\n        let pic = logo\n        let form = <>\n                <Col sm={4}>\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={this.handleSearch} value={this.state.username} name=\"username\"/>\n                    {/* {displayUser} */}\n                </Col>\n                <Col sm={5}>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.handleSearch} value={this.state.email} name=\"email\"/>\n                    {this.state.email}\n                </Col>\n                </>\n        if(this.state.users){\n            user = this.state.users.filter(u => u.username === this.state.username)\n        }\n        if(user[0]){\n            document.getElementById('display').innerHTML = user[0].username\n            pic = user[0].picture\n            form = ''\n        }\n        return (\n        <>\n            <p id=\"display\"></p><br />\n            <Row>\n                <Col sm={2}>\n                    <Image src={pic} roundedCircle style={{width: \"30px\"}}/>\n                </Col>\n                {form}\n            </Row>\n        </>\n    );\n  }\n}\n\nexport default CreateInput"]},"metadata":{},"sourceType":"module"}