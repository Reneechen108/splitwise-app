{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      this.setState({\n        error: ''\n      });\n      e.preventDefault();\n      this.props.userSignupRequest(this.state).then(() => {}, ({\n        response\n      }) => {\n        console.log(response.data);\n        this.setState({\n          errors: response.data\n        });\n        if (this.state.error.msg) alert(this.state.error.msg);\n      });\n    };\n\n    this.state = {\n      email: '',\n      psswd: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGridEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email 123@gmail.com\",\n          value: this.state.email,\n          onChange: this.onChange,\n          required: true,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your info with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: this.state.password,\n          onChange: this.onChange,\n          required: true,\n          name: \"psswd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: [\"Haven't have account?\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: \"Sign me in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nLoginForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js"],"names":["React","Component","Button","Form","Col","Row","PropTypes","LoginForm","constructor","props","onChange","e","setState","target","name","value","onSubmit","error","preventDefault","userSignupRequest","state","then","response","console","log","data","errors","msg","alert","email","psswd","render","password","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\n\nexport default class LoginForm extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            email: '',\n            psswd: ''\n        }\n    }\n\n    static propTypes = {\n        userSignupRequest : PropTypes.func.isRequired\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        this.setState({error: ''})\n        e.preventDefault();\n        this.props.userSignupRequest(this.state).then(\n            ()=>{},\n            ({response}) => {\n                console.log(response.data);\n                this.setState({errors: response.data})\n                if(this.state.error.msg)\n                    alert(this.state.error.msg)\n            }\n        )\n    }\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit} method=\"POST\">\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email: </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={this.state.email} onChange={this.onChange} required name=\"email\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">\n                We'll never share your info with anyone else.\n                </Form.Text>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange} required name=\"psswd\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">Haven't have account? \n                    <Button variant=\"link\">\n                            Sign me in!\n                    </Button>\n                </Form.Text>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}