{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard/dashNav.js\";\nimport { Modal, Button, Form, InputGroup, FormControl, Row } from 'react-bootstrap';\nimport { faFlag, faList, faTag, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport logo from '../../images/signup.png';\nimport Create from '../Create';\nimport { DB } from '../../constants/DB';\nimport { Application } from '../../components/export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst React = require('react');\n\nclass DashNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: '',\n      currentGroup: '',\n      show: true\n    };\n    this.getGroup = this.getGroup.bind(this); // this.handleCancel = this.handleCancel.bind(this)\n\n    this.handleAccept = this.handleAccept.bind(this);\n  }\n\n  componentDidMount() {\n    let group_URL = `${DB}/getGroup`;\n    const expense = '/expense';\n    fetch(group_URL, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: localStorage.getItem('authID')\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(\"result.dataset: \", result.dataset);\n      this.setState({\n        groups: result.dataset\n      });\n    });\n  }\n\n  getGroup(event) {\n    let text = event.target.innerText;\n    let currentGroup = this.state.groups.filter(g => g.name === text);\n    this.props.createItem({\n      ID: currentGroup[0].id,\n      allGroup: this.state.groups\n    });\n    console.log(\"inside getGroup\", currentGroup[0].id);\n  }\n\n  handleAccept(e) {\n    console.log(e.target.id);\n    console.log(\"accpet this invitation\");\n    let accept_URL = `${DB}/accpet`;\n    fetch(accept_URL, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: e.target.id,\n        user: parseInt(localStorage.getItem('authID'))\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result.dataset: \", result.dataset);\n      if (result.success) {\n        alert(\"Accept invitation from \", e.target.id);\n        window.location.reload(false);\n      } // this.setState({\n      //     groups: result.dataset\n      // })\n\n    });\n    this.setState({\n      show: false\n    });\n  }\n\n  render() {\n    let displayGroup = this.state.groups ? this.state.groups.map((item, index) => item.invitation === 1 ? /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        style: {\n          padding: \"0px\"\n        },\n        onClick: this.getGroup,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 113\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : null) : /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n    let invitation = [];\n    let itemList = [];\n    console.log(\"this.state.groups\", this.state.groups);\n    invitation = this.state.groups ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Invitation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          style: {\n            height: \"300px\"\n          },\n          children: [this.state.groups.forEach((item, index) => {\n            if (item.invitation !== 1) {\n              itemList.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [\"Having a invitation from \\\"\", item.name, \"\\\"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"ml-3\",\n                    id: item.name,\n                    onClick: this.handleAccept,\n                    children: \"accpet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true));\n            }\n          }), itemList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.handleSubmit,\n            children: \"Accpet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) : null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            style: {\n              width: \"30px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: \"green\"\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Recent activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" All expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), displayGroup, invitation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default DashNav;","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard/dashNav.js"],"names":["Modal","Button","Form","InputGroup","FormControl","Row","faFlag","faList","faTag","faUser","FontAwesomeIcon","axios","logo","Create","DB","Application","React","require","DashNav","Component","constructor","props","state","groups","currentGroup","show","getGroup","bind","handleAccept","componentDidMount","group_URL","expense","fetch","method","headers","body","JSON","stringify","id","localStorage","getItem","then","res","json","result","console","log","dataset","setState","event","text","target","innerText","filter","g","name","createItem","ID","allGroup","e","accept_URL","user","parseInt","success","alert","window","location","reload","render","displayGroup","map","item","index","invitation","padding","itemList","handleClose","height","forEach","push","handleSubmit","width","color"],"mappings":"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","sourcesContent":["import { Modal, Button, Form, InputGroup, FormControl,Row } from 'react-bootstrap';\nimport { faFlag, faList, faTag, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios';\nimport logo from '../../images/signup.png'\nimport Create from '../Create'\nimport {DB} from '../../constants/DB'\nimport {Application} from '../../components/export'\n\nconst React = require('react')\n\nclass DashNav extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            groups: '',\n            currentGroup: '',\n            show: true\n        }\n        this.getGroup = this.getGroup.bind(this)\n        // this.handleCancel = this.handleCancel.bind(this)\n        this.handleAccept = this.handleAccept.bind(this)\n    }\n    \n    componentDidMount(){\n        let group_URL = `${DB}/getGroup`\n        const expense = '/expense'\n        fetch(group_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: localStorage.getItem('authID')\n            })\n        }).then(res => res.json()).then(result=>{\n            console.log(\"result.dataset: \", result.dataset);\n            this.setState({\n                groups: result.dataset\n            })\n        })\n    }\n    getGroup(event) {\n        let text = event.target.innerText;\n        let currentGroup = this.state.groups.filter((g) => g.name === text)\n        this.props.createItem({\n            ID: currentGroup[0].id,\n            allGroup: this.state.groups\n        });\n        console.log(\"inside getGroup\", currentGroup[0].id,);\n    }   \n\n    handleAccept(e){\n        console.log(e.target.id);\n        console.log(\"accpet this invitation\");\n        let accept_URL = `${DB}/accpet`\n        fetch(accept_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: e.target.id,\n                user: parseInt(localStorage.getItem('authID'))\n            })\n        }).then(res => res.json()).then(result=>{\n            // console.log(\"result.dataset: \", result.dataset);\n            if(result.success){\n                alert(\"Accept invitation from \", e.target.id)\n                window.location.reload(false);\n            }\n            // this.setState({\n            //     groups: result.dataset\n            // })\n        })\n        this.setState({show: false})\n    }\n\n    render(){\n        let displayGroup = this.state.groups ? this.state.groups.map((item, index) => \n        item.invitation === 1 ?\n        <li className=\"list-group-item\" key={index}>\n        <Button variant=\"link\" style={{padding: \"0px\"}} onClick={this.getGroup}><FontAwesomeIcon icon={faTag} /><strong>{item.name}</strong></Button>\n        </li> : null) \n        : \n        <li className=\"list-group-item\"></li>\n        let invitation =[]\n        let itemList = []\n        console.log(\"this.state.groups\", this.state.groups);\n        invitation = this.state.groups ? \n            <>\n        <Modal show={this.state.show} onHide={this.handleClose} >\n            <Modal.Header closeButton>\n            <Modal.Title>Invitation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ height: \"300px\" }}>\n                {\n                this.state.groups.forEach((item, index) => {\n                    if(item.invitation!==1){\n                        itemList.push(\n                            <>\n                            <Row key={index}>\n                                <h5>Having a invitation from \"{item.name}\"</h5>\n                                <Button variant=\"success\" className=\"ml-3\" id={item.name} onClick={this.handleAccept}>accpet</Button >\n                            </Row>\n                            <p></p>\n                            </>\n                            )\n                    }\n                })\n                }\n                {itemList}\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n                Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleSubmit}>\n                Accpet\n            </Button>\n            </Modal.Footer>\n        </Modal>\n            </> : null;\n        return (\n        <>\n        <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\"><img src={logo} style={{width: \"30px\"}}/><strong style={{color: \"green\"}}>Dashboard</strong></li>\n            <li className=\"list-group-item\"><FontAwesomeIcon icon={faFlag} /><strong> Recent activity</strong></li>\n            <li className=\"list-group-item\"><FontAwesomeIcon icon={faList} /><strong> All expenses</strong></li>\n            <Create />\n            {displayGroup}\n            {invitation}\n        </ul>\n        </>\n    );\n  }\n}\n\nexport default DashNav"]},"metadata":{},"sourceType":"module"}