{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../../images/signup.png';\nimport { DB } from '../../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error] = useState('');\n  const [phone, setPhone] = useState('');\n  const Register_URL = `${DB}/signup`;\n\n  async function handleSignup(event) {\n    event.preventDefault();\n\n    try {\n      console.log(username, email, password, phone);\n      let res = await fetch(Register_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          psswd: password,\n          phone: phone\n        })\n      });\n      let result = await res.json();\n      console.log(result);\n\n      if (result && result.success) {\n        console.log(\"successful signup\");\n      } else if (result && result.success === false) {\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          style: {\n            width: \"50%\",\n            margin: \"auto\",\n            display: \"block\",\n            marginTop: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            width: \"50vw\",\n            padding: \"4rem\"\n          },\n          onSubmit: handleSignup,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Hi there! My name is\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: ({\n                target\n              }) => setUsername(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Here\\u2019s my password: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: ({\n                target\n              }) => setPassword(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Here\\u2019s my email address: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email 123@gmail.com\",\n              value: email,\n              onChange: ({\n                target\n              }) => setEmail(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"And here\\u2019s my phone number: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"123-456-7890\",\n              value: phone,\n              onChange: ({\n                target\n              }) => setPhone(target.value),\n              pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: [\"Already had account? \", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              children: \"Sign me in!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"By signing up, you accept the Splitwise Terms of Service.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Signup, \"WFPM8UhhyPG+Z11nju6d2t9QQk0=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signup.js"],"names":["React","useState","useContext","Button","Form","Col","Row","logo","DB","Signup","username","setUsername","email","setEmail","password","setPassword","error","phone","setPhone","Register_URL","handleSignup","event","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","psswd","result","json","success","alert","msg","e","width","margin","display","marginTop","padding","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useContext}from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../../images/signup.png'\nimport {DB} from '../../constants/DB'\n\n\nfunction Signup() {\n\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const Register_URL = `${DB}/signup`\n    async function handleSignup (event){\n        event.preventDefault();\n        try{\n            console.log(username, email, password, phone);\n            let res = await fetch(Register_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username,\n                    email: email,\n                    psswd: password,\n                    phone: phone\n                })\n            });\n            let result = await res.json();\n            console.log(result);\n            if(result && result.success){\n                console.log(\"successful signup\");\n            }else if(result && result.success === false){\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    return (\n        <>\n        <Row>\n            <Col>\n                <img src={logo} style={{width: \"50%\", margin: \"auto\", display: \"block\", marginTop: \"100px\"}}/>\n            </Col>\n            <Col>\n                <Form style={{width: \"50vw\", padding: \"4rem\"}} onSubmit={handleSignup} method=\"POST\">\n\n                    <Form.Group controlId=\"formGridUsername\">\n                        <Form.Label>Hi there! My name is</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridPassword\">\n                        <Form.Label>Here’s my password: </Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={({ target }) => setPassword(target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridEmail\">\n                        <Form.Label>Here’s my email address: </Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridPhone\">\n                        <Form.Label>And here’s my phone number: </Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"123-456-7890\" value={phone} onChange={({ target }) => setPhone(target.value)} pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"/>\n                    </Form.Group>\n\n                    <Form.Text className=\"text-muted\">Already had account? <Button variant=\"link\">\n                            Sign me in!\n                    </Button></Form.Text>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form.Group>\n                    <h6>By signing up, you accept the Splitwise Terms of Service.</h6>\n                </Form>\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}