{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/components/Picture.js\";\nimport React from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Picture extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      current: 0,\n      image: [],\n      imagePreviewUrl: []\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let form = document.forms.itemAdd;\n    this.props.createItem({\n      name: form.name.value,\n      image: [...this.state.image]\n    }); // Clear the form and state for the next input.\n\n    this.state.image = null;\n    this.state.imagePreviewUrl = null;\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n    const maxCount = this.props.maxCount;\n    this.state.current = this.state.image.length;\n    this.state.current += 1;\n    console.log(this.state.current);\n\n    if (this.state.current < maxCount) {\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState({\n          image: [...this.state.image, file],\n          imagePreviewUrl: [...this.state.imagePreviewUrl, reader.result]\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      alert(this.state.current + \" pictures limit.\");\n    }\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = imagePreviewUrl.map(imgUrl => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl,\n        style: {\n          height: \"200px\",\n          width: \"200px\"\n        }\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 60\n      }, this));\n    } else {\n      $imagePreview = null;\n    }\n\n    const isInvalid = this.state.current === 0;\n    console.log(isInvalid);\n    const conditionalText = this.props.type === \"Rent\" ? /*#__PURE__*/_jsxDEV(Form.Title, {\n      children: \"Add picture For Rent by Owner Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 62\n    }, this) : /*#__PURE__*/_jsxDEV(Form.Title, {\n      children: \"Add picture For Sale by Owner Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 127\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        backgroundColor: \"grey\"\n      },\n      children: [conditionalText, /*#__PURE__*/_jsxDEV(Form.Base, {\n        name: \"itemAdd\",\n        onSubmit: this.handleSubmit,\n        children: [\"Add image for your listing, the first image will be the primary picture.\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: e => this.handleImageChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: $imagePreview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Submit, {\n          type: \"submit\",\n          disabled: isInvalid,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/components/Picture.js"],"names":["React","Button","Form","Col","Row","Picture","Component","constructor","handleSubmit","bind","state","current","image","imagePreviewUrl","e","preventDefault","form","document","forms","itemAdd","props","createItem","name","value","handleImageChange","maxCount","length","console","log","reader","FileReader","file","target","files","onloadend","setState","result","readAsDataURL","alert","render","$imagePreview","map","imgUrl","height","width","isInvalid","conditionalText","type","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\n\nexport default class Picture extends React.Component {\n\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            current: 0,\n            image: [],\n            imagePreviewUrl: []\n        }\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        \n        let form = document.forms.itemAdd;\n        this.props.createItem({\n            name: form.name.value,\n            image: [...this.state.image]\n        });\n        // Clear the form and state for the next input.\n\n        this.state.image = null;\n        this.state.imagePreviewUrl = null;\n    }\n\n    handleImageChange(e) {\n        e.preventDefault();\n        const maxCount = this.props.maxCount;\n        this.state.current = this.state.image.length;\n        this.state.current += 1;\n        console.log(this.state.current);\n        if(this.state.current < maxCount){\n            let reader = new FileReader();\n            let file = e.target.files[0];\n            reader.onloadend = () => {\n                this.setState({\n                    image: [...this.state.image, file],\n                    imagePreviewUrl: [...this.state.imagePreviewUrl, reader.result]\n                });\n            }\n            reader.readAsDataURL(file)\n        }else{\n            alert(this.state.current + \" pictures limit.\");\n        }\n    }\n\n    render() {\n        let { imagePreviewUrl } = this.state;\n        let $imagePreview = null;\n        if (imagePreviewUrl) {\n            $imagePreview = (imagePreviewUrl.map(imgUrl => <img key=\"1\" src={imgUrl} style={{height: \"200px\", width: \"200px\"}}/>));\n        } else {\n            $imagePreview = null;\n        }\n        const isInvalid = this.state.current === 0;\n        console.log(isInvalid)\n        const conditionalText = this.props.type === \"Rent\" ? <Form.Title>Add picture For Rent by Owner Listing</Form.Title> : <Form.Title>Add picture For Sale by Owner Listing</Form.Title>;\n        return (\n            <Form style={{backgroundColor: \"grey\"}}>\n                {conditionalText}\n                <Form.Base name=\"itemAdd\" onSubmit={this.handleSubmit}>\n                    Add image for your listing, the first image will be the primary picture.\n                    <p></p>\n                    <table>\n                        <tbody>\n                        <tr>\n                            <td>\n                                <input type=\"file\" onChange={(e) => this.handleImageChange(e) } />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {$imagePreview}\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <p></p>\n                    <Form.Submit type=\"submit\" disabled={isInvalid}>\n                    Add\n                    </Form.Submit>\n                </Form.Base>\n            </Form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}