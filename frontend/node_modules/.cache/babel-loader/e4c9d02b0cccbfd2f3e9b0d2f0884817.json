{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/components/ExpenseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png';\nimport category1 from '../images/shopping.png';\nimport category2 from '../images/daliy.png';\nimport category3 from '../images/form.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport { UserContext } from '../contexts/userContext';\nimport { ActivityContext } from '../contexts/activityContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseInput(props) {\n  _s();\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    activities\n  } = useContext(ActivityContext);\n  console.log(\"inside expenseInput: \", props.value);\n  let date;\n  let currentUser;\n  let content;\n  let month;\n  let data;\n  let desc;\n  let userInfo;\n  let paid;\n\n  if (props.value && user) {\n    let u1 = user.filter(u => u.ID === parseInt(props.value.user)); // console.log(u1);\n\n    if (props.value.amount > 0) {\n      month = monthNames[parseInt(props.value.date.substring(5, 7)) - 1].substring(0, 3);\n      data = props.value.date.substring(8, 10);\n      userInfo = /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: u1[0].username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this);\n      paid = /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"USD$\", props.value.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    } else {\n      console.log(\"all activity\", activities);\n      let filterData = activities.filter(a => a.E_ID === props.value.E_ID);\n      console.log(\"filterData\", filterData);\n      month = monthNames[parseInt(filterData[0].date.substring(5, 7)) - 1].substring(0, 3);\n      data = filterData[0].date.substring(8, 10);\n      userInfo = /*#__PURE__*/_jsxDEV(\"h6\", {\n        style: {\n          color: \"red\"\n        },\n        children: [u1[0].username, \" Paid\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }, this);\n      paid = /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"USD$\", filterData[0].action]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this);\n    }\n\n    desc = props.value.description;\n    currentUser = u1[0] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [userInfo, paid]\n    }, void 0, true) : null; // content = \n    // <>\n    // </>\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 7,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: category1,\n          style: {\n            width: \"50px\"\n          },\n          rounded: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            paddingTop: \"6px\",\n            marginLeft: \"10px\"\n          },\n          children: [desc, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCamera\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        border: \"1px solid black\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ExpenseInput, \"ljvQKdvStLmoPCKHngjf23WtnBc=\");\n\n_c = ExpenseInput;\nexport default ExpenseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseInput\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/components/ExpenseInput.js"],"names":["React","useContext","useEffect","Row","Image","Form","Col","logo","category1","category2","category3","FontAwesomeIcon","faCamera","UserContext","ActivityContext","ExpenseInput","props","monthNames","user","activities","console","log","value","date","currentUser","content","month","data","desc","userInfo","paid","u1","filter","u","ID","parseInt","amount","substring","username","filterData","a","E_ID","color","action","description","width","paddingTop","marginLeft","border"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png'\nimport category1 from '../images/shopping.png'\nimport category2 from '../images/daliy.png'\nimport category3 from '../images/form.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport { UserContext } from '../contexts/userContext'\nimport { ActivityContext } from '../contexts/activityContext'\n\nfunction ExpenseInput(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const {user} = useContext(UserContext)\n    const {activities} = useContext(ActivityContext)\n\n    console.log(\"inside expenseInput: \", props.value);\n    let date;\n    let currentUser\n    let content;\n     let month\n    let data\n    let desc\n    let userInfo\n    let paid\n    if(props.value && user){\n        let u1 = user.filter(u => u.ID === parseInt(props.value.user))\n            // console.log(u1);\n        if(props.value.amount > 0){\n            month = monthNames[parseInt(props.value.date.substring(5, 7))-1].substring(0,3)\n            data = props.value.date.substring(8, 10)\n            userInfo = <h6>{u1[0].username}</h6>\n            paid = <h4>USD${props.value.amount}</h4>\n        }else{\n            console.log(\"all activity\", activities)\n            let filterData = activities.filter(a => a.E_ID === props.value.E_ID)\n            console.log(\"filterData\", filterData);\n            month = monthNames[parseInt(filterData[0].date.substring(5, 7))-1].substring(0,3)\n            data = filterData[0].date.substring(8, 10)\n            userInfo = <h6 style={{color: \"red\"}}>{u1[0].username} Paid</h6>\n            paid = <h4>USD${filterData[0].action}</h4>\n        }\n        desc = props.value.description\n        currentUser = u1[0] ? \n        <>\n        {userInfo}\n        {paid}\n        </> : null;\n        // content = \n        // <>\n        \n        // </>\n    }\n    return (\n        <>\n          <Col md={1}>\n            <h6>{month}</h6>\n            <h4>{data}</h4>\n        </Col>\n        <Col md={7}>\n            <Row>\n                <Image src={category1} style={{width: \"50px\"}} rounded />\n                <h4 style={{paddingTop: \"6px\", marginLeft: \"10px\"}}>{desc}<FontAwesomeIcon icon={faCamera} /></h4>\n            </Row>\n        </Col>\n        <Col md={4}>\n            {currentUser}\n        </Col>\n        <p style={{border: \"1px solid black\", width: \"100%\"}}></p>\n        </>\n    )\n}\n\nexport default ExpenseInput"]},"metadata":{},"sourceType":"module"}