{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/contexts/activityContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DB } from '../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActivityContext = /*#__PURE__*/React.createContext();\n\nfunction ActivityProvider({\n  children\n}) {\n  _s();\n\n  const [activities, setActivities] = useState();\n  const getAll_URL = `${DB}/allActivity`; // const update_URL= `${DB}/update`\n  // const emailID = localStorage.getItem('authEmail');\n  // console.log(\"this is email\", emailID);\n\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ID: localStorage.getItem(\"authID\")\n        })\n      }).then(res => res.json()).then(result => {\n        setActivities(result.dataset);\n        console.log(\"this is a activity context\", result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ActivityContext.Provider, {\n      value: {\n        activities\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ActivityProvider, \"1F2cFjeXEAcqtnXRupaUdcqpqWI=\");\n\n_c = ActivityProvider;\nexport { ActivityProvider, ActivityContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityProvider\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/contexts/activityContext.js"],"names":["React","useState","useEffect","DB","ActivityContext","createContext","ActivityProvider","children","activities","setActivities","getAll_URL","fetch","method","headers","body","JSON","stringify","ID","localStorage","getItem","then","res","json","result","dataset","console","log","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,EAAR,QAAiB,iBAAjB;;;AACA,MAAMC,eAAe,gBAAGJ,KAAK,CAACK,aAAN,EAAxB;;AAEA,SAASC,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAsC;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AAEA,QAAMS,UAAU,GAAG,GAAEP,EAAG,cAAxB,CAHkC,CAIlC;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAE,MAAI;AACX,QAAG;AACCS,MAAAA,KAAK,CAACD,UAAD,EAAa;AACdE,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFK;AAMdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,EAAE,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB;AADa,SAAf;AANQ,OAAb,CAAL,CASGC,IATH,CASQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATf,EAS2BF,IAT3B,CASgCG,MAAM,IAAE;AACpCd,QAAAA,aAAa,CAACc,MAAM,CAACC,OAAR,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,MAAM,CAACC,OAAjD;AACH,OAZD;AAaH,KAdD,CAcC,OAAMG,CAAN,EAAQ;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AACJ,GAlBQ,EAkBP,EAlBO,CAAT;AAoBA,sBACI;AAAA,2BACA,QAAC,eAAD,CAAiB,QAAjB;AAA2B,MAAA,KAAK,EAAE;AAC9BnB,QAAAA;AAD8B,OAAlC;AAAA,gBAGKD;AAHL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AASH;;GArCQD,gB;;KAAAA,gB;AAyCT,SAAOA,gBAAP,EAAyBF,eAAzB","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst ActivityContext = React.createContext()\n\nfunction ActivityProvider({children}) {\n    const [activities, setActivities] = useState()\n\n    const getAll_URL= `${DB}/allActivity`\n    // const update_URL= `${DB}/update`\n    // const emailID = localStorage.getItem('authEmail');\n    // console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ID: localStorage.getItem(\"authID\")\n                })\n            }).then(res => res.json()).then(result=>{\n                setActivities(result.dataset)\n                console.log(\"this is a activity context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    return (\n        <>\n        <ActivityContext.Provider  value={{\n            activities\n            }}>\n            {children}\n        </ActivityContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{ActivityProvider, ActivityContext}"]},"metadata":{},"sourceType":"module"}