{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DB } from '../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\n\nfunction UserProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [currency, setCurrency] = useState(\"USD($)\");\n  const [time, setTime] = useState(\"GMT\");\n  const [language, setLanguage] = useState(\"English\");\n  const getAll_URL = `${DB}/getUser`;\n  const update_URL = `${DB}/update`;\n  const emailID = localStorage.getItem('authEmail');\n  console.log(\"this is email\", emailID);\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  useEffect(() => {\n    fetch(getAll_URL).then(response => response.json()).then(result => setUser(result.dataset));\n  }, [username, email, phone, picture, currency, time, language]); // function handleChange(event){\n  //     // const target = event.target;\n  //     // const value = target.type === 'checkbox' ? target.checked : target.value;\n  //     // const name = event.target.name;\n  // }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(value, name);\n\n    if (name === \"currency\") {\n      setCurrency(value);\n    }\n\n    if (name === \"time\") {\n      setTime(value);\n    }\n\n    if (name === \"language\") {\n      setLanguage(value);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        handleChange\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserProvider, \"0idrXNCjrzUL2EvkB3FCwwleSDo=\");\n\n_c = UserProvider;\nexport { UserProvider, UserContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js"],"names":["React","useState","useEffect","DB","UserContext","createContext","UserProvider","children","user","setUser","username","setUsername","email","setEmail","phone","setPhone","currency","setCurrency","time","setTime","language","setLanguage","getAll_URL","update_URL","emailID","localStorage","getItem","console","log","refreshPage","window","location","reload","fetch","then","response","json","result","dataset","picture","handleChange","event","value","target","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,EAAR,QAAiB,iBAAjB;;;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AACA,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,EAAvC;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,EAAjC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAACe,QAAD,EAAUC,WAAV,IAAyBhB,QAAQ,CAAC,QAAD,CAAvC;AACA,QAAM,CAACiB,IAAD,EAAMC,OAAN,IAAiBlB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACmB,QAAD,EAAUC,WAAV,IAAyBpB,QAAQ,CAAC,SAAD,CAAvC;AAEA,QAAMqB,UAAU,GAAG,GAAEnB,EAAG,UAAxB;AACA,QAAMoB,UAAU,GAAG,GAAEpB,EAAG,SAAxB;AACA,QAAMqB,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,OAA7B;;AAEA,WAASK,WAAT,GAAuB;AACnBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH;;AAED9B,EAAAA,SAAS,CAAE,MAAI;AACX+B,IAAAA,KAAK,CAACX,UAAD,CAAL,CAAkBY,IAAlB,CAAuBC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAAjC,EAAkDF,IAAlD,CAAuDG,MAAM,IAAE5B,OAAO,CAAC4B,MAAM,CAACC,OAAR,CAAtE;AACH,GAFQ,EAEP,CAAC5B,QAAD,EAAWE,KAAX,EAAkBE,KAAlB,EAAyByB,OAAzB,EAAkCvB,QAAlC,EAA4CE,IAA5C,EAAkDE,QAAlD,CAFO,CAAT,CAlB8B,CAsB9B;AACA;AACA;AACA;AAEA;;AAEA,WAASoB,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,UAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmBE,IAAnB;;AACA,QAAGA,IAAI,KAAK,UAAZ,EAAuB;AACnB3B,MAAAA,WAAW,CAACyB,KAAD,CAAX;AACH;;AACD,QAAGE,IAAI,KAAK,MAAZ,EAAmB;AACfzB,MAAAA,OAAO,CAACuB,KAAD,CAAP;AACH;;AACD,QAAGE,IAAI,KAAK,UAAZ,EAAuB;AACnBvB,MAAAA,WAAW,CAACqB,KAAD,CAAX;AACH;AACJ;;AAED,sBACI;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAuB,MAAA,KAAK,EAAE;AAC1BlC,QAAAA,IAD0B;AACpBgC,QAAAA;AADoB,OAA9B;AAAA,gBAGKjC;AAHL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AASH;;GArDQD,Y;;KAAAA,Y;AAyDT,SAAOA,YAAP,EAAqBF,WAArB","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst UserContext = React.createContext()\nfunction UserProvider({children}) {\n    const [user, setUser] = useState()\n    const [username,setUsername] = useState()\n    const [email,setEmail] = useState()\n    const [phone, setPhone] = useState()\n    const [currency,setCurrency] = useState(\"USD($)\")\n    const [time,setTime] = useState(\"GMT\")\n    const [language,setLanguage] = useState(\"English\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    useEffect( ()=>{\n        fetch(getAll_URL).then(response=>response.json()).then(result=>setUser(result.dataset))\n    },[username, email, phone, picture, currency, time, language])\n\n    // function handleChange(event){\n    //     // const target = event.target;\n    //     // const value = target.type === 'checkbox' ? target.checked : target.value;\n    //     // const name = event.target.name;\n        \n    // }\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        if(name === \"currency\"){\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            setTime(value);\n        }\n        if(name === \"language\"){\n            setLanguage(value);\n        }\n    }\n\n    return (\n        <>\n        <UserContext.Provider  value={{\n            user, handleChange,\n            }}>\n            {children}\n        </UserContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{UserProvider, UserContext}"]},"metadata":{},"sourceType":"module"}