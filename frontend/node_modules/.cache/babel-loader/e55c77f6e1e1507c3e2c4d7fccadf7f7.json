{"ast":null,"code":"import { DB } from '../constants/DB';\nimport axios from 'axios';\nimport { SET_CURRENT_USER } from '../constants/constant';\nimport setAuthorizationToken from '../utils/validations/setAuthorizationToken';\nimport jwtDecode from 'jwt-decode';\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};\nexport const login = userData => {\n  return dispatch => {\n    return axios.post(`${DB}/signin`, userData).then(res => {\n      const token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(token);\n      console.log(jwtDecode(token)); // localStorage.setItem('authUser', res.data.username);\n      // localStorage.setItem('authEmail', res.data.email);\n      // localStorage.setItem('authID', res.data.ID);\n\n      dispatch(setCurrentUser(jwtDecode(token)));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/actions/loginActions.js"],"names":["DB","axios","SET_CURRENT_USER","setAuthorizationToken","jwtDecode","setCurrentUser","user","type","logout","dispatch","localStorage","removeItem","login","userData","post","then","res","token","data","setItem","console","log"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAM;AACFC,IAAAA,IAAI,EAAEL,gBADJ;AAEFI,IAAAA;AAFE,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AACxB,SAAOC,QAAQ,IAAI;AACfC,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAR,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAM,IAAAA,QAAQ,CAACJ,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMO,KAAK,GAAIC,QAAD,IAAa;AAC9B,SAAOJ,QAAQ,IAAI;AACf,WAAOR,KAAK,CAACa,IAAN,CAAY,GAAEd,EAAG,SAAjB,EAA2Ba,QAA3B,EAAqCE,IAArC,CACHC,GAAG,IAAE;AACD,YAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB;AACAP,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAd,MAAAA,qBAAqB,CAACc,KAAD,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACa,KAAD,CAArB,EAJC,CAKD;AACA;AACA;;AACAR,MAAAA,QAAQ,CAACJ,cAAc,CAACD,SAAS,CAACa,KAAD,CAAV,CAAf,CAAR;AACP,KAVM,CAAP;AAWH,GAZD;AAaH,CAdM","sourcesContent":["import {DB} from '../constants/DB'\nimport axios from 'axios'\nimport {SET_CURRENT_USER} from '../constants/constant'\nimport setAuthorizationToken from '../utils/validations/setAuthorizationToken'\nimport jwtDecode from 'jwt-decode'\n\nexport const setCurrentUser = (user) => {\n    return{\n        type: SET_CURRENT_USER,\n        user\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        localStorage.removeItem('jwtToken')\n        setAuthorizationToken(false)\n        dispatch(setCurrentUser({}))\n    }\n}\n\nexport const login = (userData) =>{\n    return dispatch => {\n        return axios.post(`${DB}/signin`, userData).then(\n            res=>{\n                const token = res.data.token;\n                localStorage.setItem('jwtToken', token)\n                setAuthorizationToken(token)\n                console.log(jwtDecode(token));\n                // localStorage.setItem('authUser', res.data.username);\n                // localStorage.setItem('authEmail', res.data.email);\n                // localStorage.setItem('authID', res.data.ID);\n                dispatch(setCurrentUser(jwtDecode(token)))\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}