{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Picture from '../../components/Picture';\nimport { DB } from '../../constants/DB';\nimport Application from '../../components/application/applicaiton';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [picture, setPicture] = useState();\n  const [currency, setCurrency] = useState('USD');\n  const [time, setTime] = useState('GMT-1');\n  const [language, setLanguage] = useState('English');\n  const [display, setDisplay] = useState(\"none\");\n  const getAll_URL = `${DB}/getUser`;\n  const update_URL = `${DB}/update`;\n  const emailID = localStorage.getItem('authEmail');\n  const history = useHistory();\n\n  function setup() {\n    setUsername(user[0].username); // localStorage.setItem('authUser', user[0].username);\n\n    setEmail(user[0].email);\n    setPhone(user[0].phone);\n  }\n\n  function toggleDisplay() {\n    if (display === \"none\") {\n      setDisplay(\"display\");\n      console.log(\"this is user: \", user);\n      setup();\n    } else setDisplay(\"none\");\n  }\n\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailID\n        })\n      }).then(res => res.json()).then(result => {\n        setUser(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [picture]);\n\n  function handleUpdate() {\n    toggleDisplay();\n    console.log(username, email, phone);\n    let newInfo = {\n      username: username,\n      email: email,\n      phone: phone\n    };\n    console.log(\"user[0]\", user[0]);\n    console.log(\"newInfo\", newInfo);\n    Object.assign(user[0], newInfo);\n  }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(value, name);\n    setup();\n\n    if (name === \"currency\") {\n      user[0].currency = value;\n      setCurrency(value);\n    }\n\n    if (name === \"time\") {\n      user[0].time = value;\n      setTime(value);\n    }\n\n    if (name === \"language\") {\n      user[0].language = value;\n      setLanguage(value);\n    }\n  }\n\n  async function updateAll() {\n    console.log(\"ALL INFO: \", username, email, picture, phone, currency, time, language);\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('email', email);\n    formData.append('picture', picture);\n    formData.append('phone', phone);\n    formData.append('currency', currency);\n    formData.append('time', time);\n    formData.append('language', language);\n    formData.append('emailID', emailID);\n    formData.append('upload', 'user');\n    axios({\n      method: \"POST\",\n      url: update_URL,\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }); // history.push('/home')\n    // refreshPage();\n\n    setTimeout(refreshPage, 1000);\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  let title = [\"username\", \"email\", \"phone\"];\n  let items = [];\n\n  if (user) {\n    for (let number = 0; number < 3; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: ['Your ' + title[number], /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            onClick: toggleDisplay,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 68\n            }, this), \"Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 113\n          }, this), user[0][title[number]]]\n        }, number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true));\n    }\n  }\n\n  let currencies = [];\n  let times = [];\n  let languages = [];\n  currencies = ['USD', 'CNY', 'KWD', 'BHD', 'GBP', 'EUR', 'CAD'];\n  currencies = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 16\n    }, this);\n  });\n  times = [\"(GMT-08:00) Pacific Time (US & Canada)\", \"(GMT-09:00) Alaska\", \"(GMT-10:00) Hawaii\", '(GMT-11:00) Midway Island, Samoa', '(GMT-12:00) International Date Line West'];\n  times = times.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 16\n    }, this);\n  });\n  languages = ['English', 'Chinese', 'Cambodian', 'Basque', 'French'];\n  languages = languages.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }, this);\n  });\n\n  const createItem = async newItem => {\n    setPicture(newItem.image);\n    setEmail(emailID);\n    setup();\n    console.log(newItem.image);\n    console.log(\"inside createItem\");\n  };\n\n  if (user) {\n    console.log(\"user[0].picture\", user[0].picture);\n    const Oldpicture = user[0].picture ? /*#__PURE__*/_jsxDEV(Picture, {\n      createItem: createItem,\n      old: user[0].picture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(Picture, {\n      createItem: createItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 105\n    }, this);\n    localStorage.setItem('authUser', user[0].username);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: Oldpicture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currency\",\n              children: \"Your default currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"currency\",\n              id: \"currency\",\n              value: user[0].currency,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: currencies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"time\",\n              children: \"Your time zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"time\",\n              id: \"time\",\n              value: user[0].time,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: times\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"language\",\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"language\",\n              id: \"language\",\n              value: user[0].language,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: languages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        style: {\n          float: \"right\"\n        },\n        onClick: updateAll,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n        display: display,\n        children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n          toggleDisplay: toggleDisplay,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: username,\n              onChange: ({\n                target\n              }) => setUsername(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              onChange: ({\n                target\n              }) => setEmail(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              value: phone,\n              onChange: ({\n                target\n              }) => setPhone(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleUpdate,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Profile, \"92aEurRB5UE0XBLHsdZzQ+7HN6Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js"],"names":["React","useEffect","useState","Button","Form","Col","Row","faPen","faTimes","FontAwesomeIcon","Picture","DB","Application","axios","useHistory","Profile","user","setUser","username","setUsername","email","setEmail","phone","setPhone","picture","setPicture","currency","setCurrency","time","setTime","language","setLanguage","display","setDisplay","getAll_URL","update_URL","emailID","localStorage","getItem","history","setup","toggleDisplay","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","handleUpdate","newInfo","Object","assign","handleChange","event","value","target","name","updateAll","formData","FormData","append","url","data","setTimeout","refreshPage","window","location","reload","title","items","number","push","currencies","times","languages","map","item","index","createItem","newItem","image","Oldpicture","setItem","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\nimport Application from '../../components/application/applicaiton'\nimport axios from 'axios';\nimport { useHistory} from 'react-router-dom';\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState('USD');\n    const [time, setTime] = useState('GMT-1');\n    const [language, setLanguage] = useState('English');\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    const history = useHistory();\n\n    function setup() {\n        setUsername(user[0].username)\n        // localStorage.setItem('authUser', user[0].username);\n        setEmail(user[0].email)\n        setPhone(user[0].phone)\n    }\n\n    function toggleDisplay(){\n        if(display === \"none\"){\n            setDisplay(\"display\")\n            console.log(\"this is user: \", user);\n            setup()\n        }\n        else\n            setDisplay(\"none\")\n    }\n\n    \n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[picture])\n\n    function handleUpdate(){\n        toggleDisplay();\n        console.log(username, email, phone);\n        let newInfo = {\n            username: username,\n            email: email,\n            phone: phone\n        }\n        console.log(\"user[0]\", user[0]);\n        console.log(\"newInfo\", newInfo);\n        Object.assign(user[0], newInfo)\n    }\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        setup()\n        if(name === \"currency\"){\n            user[0].currency = value\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            user[0].time = value\n            setTime(value);\n        }\n        if(name === \"language\"){\n            user[0].language = value\n            setLanguage(value);\n        }\n    }\n    async function updateAll(){\n        console.log(\"ALL INFO: \", username, email, picture, phone, currency, time, language);\n        const formData = new FormData();\n        formData.append('username', username);\n        formData.append('email', email);\n        formData.append('picture', picture);\n        formData.append('phone', phone);\n        formData.append('currency', currency);\n        formData.append('time', time);\n        formData.append('language', language);\n        formData.append('emailID', emailID);\n        formData.append('upload','user');\n        axios({\n            method: \"POST\",\n            url: update_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        // history.push('/home')\n        // refreshPage();\n        setTimeout(refreshPage, 1000);\n    }\n        \n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <>\n                <Form.Label key={number}>\n                    {'Your ' +title[number]}\n                    <Button variant=\"link\" onClick={toggleDisplay}><FontAwesomeIcon icon={faPen} />Edit</Button><br />\n                    {user[0][title[number]]}\n                </Form.Label>\n                <br />\n                <br />\n                </>\n            );\n        }\n    }\n    \n\n    let currencies = []\n    let times = []\n    let languages= []\n    currencies = ['USD', 'CNY', 'KWD', 'BHD', 'GBP', 'EUR', 'CAD'];\n    currencies = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    times = [\"(GMT-08:00) Pacific Time (US & Canada)\", \"(GMT-09:00) Alaska\", \"(GMT-10:00) Hawaii\", '(GMT-11:00) Midway Island, Samoa', '(GMT-12:00) International Date Line West'];\n    times = times.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    languages = ['English', 'Chinese', 'Cambodian', 'Basque', 'French' ];\n    languages = languages.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        setEmail(emailID)\n        setup()\n        console.log(newItem.image);\n        console.log(\"inside createItem\");\n    }\n    \n    if(user){\n        console.log(\"user[0].picture\",user[0].picture);\n        const Oldpicture = user[0].picture ? <Picture createItem={createItem} old={user[0].picture}/> : <Picture createItem={createItem} />\n        localStorage.setItem('authUser', user[0].username);\n        return (\n        <>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                {Oldpicture}\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"currency\">Your default currency</label>\n                    <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        value={user[0].currency}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {currencies}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"time\">Your time zone</label>\n                    <select\n                        name=\"time\"\n                        id=\"time\"\n                        value={user[0].time}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {times}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"language\">Language</label>\n                    <select\n                        name=\"language\"\n                        id=\"language\"\n                        value={user[0].language}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {languages}\n                    </select>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}} onClick={updateAll}>Save</Button>\n\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPhone(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n    }else{\n        return <div>Loading...</div>\n    }\n    \n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}