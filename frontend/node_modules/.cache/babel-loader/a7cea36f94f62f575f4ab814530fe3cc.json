{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { DB } from '../../constants/DB';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signin() {\n  _s();\n\n  const [display, setDisplay] = useState(\"none\");\n  const [username, setuUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const Login_URL = `${DB}/signin`;\n\n  function toggleDisplay() {\n    if (display === \"none\") setDisplay(\"display\");else setDisplay(\"none\");\n  }\n\n  async function handleSignin(event) {\n    event.preventDefault();\n\n    if (!username) {\n      return;\n    }\n\n    if (!password) {\n      return;\n    }\n\n    try {\n      let res = await fetch(Login_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        if (result && result.token) {\n          var token = result.token;\n          var decoded = jwt_decode(token);\n          localStorage.setItem('authUser', JSON.stringify(decoded.user)); // setUser(JSON.parse(localStorage.getItem('authUser')));\n          // const U = JSON.parse(localStorage.getItem('authUser'))\n\n          if (U.role === \"A\") {\n            history.push(ROUTES.HELP);\n          } else {\n            history.push(ROUTES.HOME);\n          }\n\n          refreshPage();\n        }\n\n        console.log(\"login success\");\n      } else if (result && result.success === false) {\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleDisplay,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n      display: display,\n      children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n        toggleDisplay: toggleDisplay,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSignin,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter username\",\n            onChange: ({\n              target\n            }) => setuUsername(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your info with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: [\"Haven't have account?\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            children: \"Sign me in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signin, \"6iu6EpMrSeLms/NAgRddLfWQgLg=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signin.js"],"names":["React","useState","Button","Form","Application","FontAwesomeIcon","faTimes","DB","jwt_decode","Signin","display","setDisplay","username","setuUsername","password","setPassword","Login_URL","toggleDisplay","handleSignin","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","result","json","success","token","decoded","localStorage","setItem","user","U","role","history","push","ROUTES","HELP","HOME","refreshPage","console","log","alert","msg","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {DB} from '../../constants/DB'\nimport jwt_decode from \"jwt-decode\";\n\nfunction Signin() {\n    const [display,setDisplay] = useState(\"none\")\n    const [username, setuUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const Login_URL = `${DB}/signin`\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    async function handleSignin(event){\n        event.preventDefault();\n        if(!username){\n            return;\n        }\n        if(!password){\n            return;\n        }\n        try{\n            let res = await fetch(Login_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username,\n                    password: password\n                })\n            });\n            let result = await res.json();\n            \n            if(result && result.success){\n                if(result && result.token ){\n                    var token = result.token;\n                    var decoded = jwt_decode(token);\n                    localStorage.setItem('authUser', JSON.stringify(decoded.user));\n                    // setUser(JSON.parse(localStorage.getItem('authUser')));\n                    // const U = JSON.parse(localStorage.getItem('authUser'))\n                 \n                    if(U.role === \"A\"){\n                        history.push(ROUTES.HELP);\n                      \n                    }\n                    else{\n                        history.push(ROUTES.HOME);\n        \n                    }\n                    refreshPage()\n                }\n                \n                console.log(\"login success\");\n            }else if(result && result.success === false){\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    \n    return (    \n        <>\n        <Button variant=\"primary\" onClick={toggleDisplay}>Sign In</Button>\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form onSubmit={handleSignin}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={({ target }) => setuUsername(target.value)}/>\n                    <Form.Text className=\"text-muted\">\n                    We'll never share your info with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={({ target }) => setPassword(target.value)}/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">Haven't have account? \n                    <Button variant=\"link\">\n                            Sign me in!\n                    </Button>\n                </Form.Text>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </Application.Base>  \n        </>\n    )\n}\n\nexport default Signin"]},"metadata":{},"sourceType":"module"}