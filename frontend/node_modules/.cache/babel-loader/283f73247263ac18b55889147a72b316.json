{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DB } from '../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\n\nfunction UserProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [picture, setPicture] = useState();\n  const [currency, setCurrency] = useState();\n  const [time, setTime] = useState();\n  const [language, setLanguage] = useState();\n  const getAll_URL = `${DB}/getUser`;\n  const update_URL = `${DB}/update`;\n  const emailID = localStorage.getItem('authEmail');\n  console.log(\"this is email\", emailID);\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailID\n        })\n      }).then(res => res.json()).then(result => {\n        setUser(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [username, email, phone, picture, currency, time, language]);\n\n  function handleChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(value, name);\n\n    if (name === \"username\") {\n      setUsername(value);\n    }\n\n    if (name === \"email\") {\n      setEmail(value);\n    }\n\n    if (name === \"phone\") {\n      setPhone(value);\n    }\n\n    if (name === \"currency\") {\n      setCurrency(value);\n    }\n\n    if (name === \"time\") {\n      setTime(value);\n    }\n\n    if (name === \"language\") {\n      setLanguage(value);\n    }\n  }\n\n  function handleUpdate() {\n    fetch(update_URL, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        phone: phone,\n        emailID: emailID\n      })\n    }).then(res => res.json()).then(result => {\n      setUser(result.dataset);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        handleChange,\n        handleUpdate,\n        username,\n        email,\n        phone,\n        picture,\n        currency,\n        time,\n        language\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserProvider, \"IfvhqRaRvEIQm+5/oUqfQvd7c9E=\");\n\n_c = UserProvider;\nexport { UserProvider, UserContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js"],"names":["React","useState","useEffect","DB","UserContext","createContext","UserProvider","children","user","setUser","username","setUsername","email","setEmail","phone","setPhone","picture","setPicture","currency","setCurrency","time","setTime","language","setLanguage","getAll_URL","update_URL","emailID","localStorage","getItem","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","handleChange","event","value","target","name","handleUpdate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst UserContext = React.createContext()\n\nfunction UserProvider({children}) {\n    const [user, setUser] = useState()\n    const [username,setUsername] = useState()\n    const [email,setEmail] = useState()\n    const [phone, setPhone] = useState()\n    const [picture, setPicture] = useState();\n    const [currency,setCurrency] = useState()\n    const [time,setTime] = useState()\n    const [language,setLanguage] = useState()\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[username, email, phone, picture, currency, time, language])\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        if(name === \"username\"){\n            setUsername(value);\n        }\n        if(name === \"email\"){\n            setEmail(value);\n        }\n        if(name === \"phone\"){\n            setPhone(value);\n        }\n        if(name === \"currency\"){\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            setTime(value);\n        }\n        if(name === \"language\"){\n            setLanguage(value);\n        }\n    }\n    function handleUpdate() {\n        fetch(update_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                phone: phone,\n                emailID: emailID\n            })\n        }).then(res => res.json()).then(result=>{\n            setUser(result.dataset)\n        })\n    }\n    return (\n        <>\n        <UserContext.Provider  value={{\n            user, handleChange, handleUpdate, username, email, phone, picture, currency, time, language\n            }}>\n            {children}\n        </UserContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{UserProvider, UserContext}"]},"metadata":{},"sourceType":"module"}