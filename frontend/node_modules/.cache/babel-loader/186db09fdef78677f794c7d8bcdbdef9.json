{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/Activity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Button, Col, Row, Image, Jumbotron, Container } from 'react-bootstrap';\nimport ActivityInput from '../components/ActivityInput';\nimport { DB } from '../constants/DB';\nimport { ActivityContext } from '../contexts/activityContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Activity() {\n  _s();\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let expenseList = [];\n  const {\n    activities\n  } = useContext(ActivityContext);\n\n  if (activities) {\n    activities.map((item, index) => {\n      expenseList.push( /*#__PURE__*/_jsxDEV(ActivityInput, {\n        value: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 30\n      }, this));\n    });\n  }\n\n  console.log(\"expenseList\", expenseList);\n  expenseList.sort((a, b) => a.props.value.date > b.props.value.date ? -1 : 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: 6,\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        style: {\n          padding: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [monthNames[new Date().getMonth()], \" \", new Date().getFullYear()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: expenseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Activity, \"Cx+K6LxUiIyE14klo/MGwmfrk3U=\");\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/Activity.js"],"names":["React","useState","useContext","useEffect","Button","Col","Row","Image","Jumbotron","Container","ActivityInput","DB","ActivityContext","Activity","monthNames","expenseList","activities","map","item","index","push","console","log","sort","a","b","props","value","date","padding","Date","getMonth","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,QAAkD,OAAlD;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,SAAlC,EAA6CC,SAA7C,QAA8D,iBAA9D;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,EAAR,QAAiB,iBAAjB;AACA,SAAQC,eAAR,QAA8B,6BAA9B;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACnB,MADmB,EACX,QADW,EACD,WADC,EACY,SADZ,EACuB,UADvB,EACmC,UADnC,CAAnB;AAIA,MAAIC,WAAW,GAAG,EAAlB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAed,UAAU,CAACU,eAAD,CAA/B;;AAEA,MAAGI,UAAH,EAAc;AACVA,IAAAA,UAAU,CAACC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BJ,MAAAA,WAAW,CAACK,IAAZ,eAAiB,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEF;AAAtB,SAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA,cAAjB;AACH,KAFD;AAGH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,WAA3B;AACAA,EAAAA,WAAW,CAACQ,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,CAAQC,KAAR,CAAcC,IAAd,GAAqBH,CAAC,CAACC,KAAF,CAAQC,KAAR,CAAcC,IAApC,GAA4C,CAAC,CAA7C,GAAiD,CAA5E;AAEA,sBACI;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAlB;AAAA,+BACI,QAAC,SAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAA,mCACI;AAAA,yBAAKf,UAAU,CAAC,IAAIgB,IAAJ,GAAWC,QAAX,EAAD,CAAf,OAAyC,IAAID,IAAJ,GAAWE,WAAX,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,GAAD;AAAA,kBACKjB;AADL;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAmBH;;GArCQF,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, {useState,useContext,useEffect}from 'react'\nimport { Button, Col, Row, Image, Jumbotron, Container } from 'react-bootstrap';\nimport ActivityInput from '../components/ActivityInput'\nimport {DB} from '../constants/DB'\nimport {ActivityContext} from '../contexts/activityContext'\n\nfunction Activity() {\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    \n    let expenseList = [];\n    const {activities} = useContext(ActivityContext)\n\n    if(activities){\n        activities.map((item, index) => {\n            expenseList.push(<ActivityInput value={item} key={index} />)\n        });\n    }\n\n    console.log(\"expenseList\", expenseList);\n    expenseList.sort((a, b) => (a.props.value.date > b.props.value.date) ? -1 : 1)\n\n    return (\n        <>\n        <Col sm={6}>\n            <Jumbotron style={{padding: \"10px\"}}>\n                <Container>\n                    <Row>   \n                        <h3>Recent Activity</h3>\n                    </Row>\n                    <Row>\n                        <h6>{monthNames[new Date().getMonth()]} {new Date().getFullYear()}</h6>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <Row>\n                {expenseList}\n            </Row>\n        </Col>\n        </>\n    )\n}\n\nexport default Activity"]},"metadata":{},"sourceType":"module"}