{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/components/Balance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/form.png';\nimport { DB } from '../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Balance(props) {\n  _s();\n\n  console.log(\"balance\", props.id);\n  const [userInfo, setUserInfo] = useState();\n  const calculate_URL = `${DB}/calculate`;\n  useEffect(() => {\n    try {\n      fetch(calculate_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: props.id\n        })\n      }).then(res => res.json()).then(result => {\n        // setUser(result.dataset)\n        setUserInfo(result.dataset);\n        console.log(\"calculate: \", result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.id]);\n  let userTotal;\n  if (userInfo) userTotal = userInfo.map((info, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: info.picture,\n          roundedCircle: true,\n          style: {\n            width: \"40px\",\n            height: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: info.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: info.total > 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"owes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), \" USD $\", Number(info.total).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"gets back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 91\n            }, this), \" USD $\", Number(-info.total).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userTotal\n  }, void 0, false);\n}\n\n_s(Balance, \"QaFF8threzXByS0Wmi/aLwo+tuQ=\");\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/components/Balance.js"],"names":["React","useState","useEffect","Row","Image","Form","Col","logo","DB","Balance","props","console","log","id","userInfo","setUserInfo","calculate_URL","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","userTotal","map","info","index","picture","width","height","username","total","Number","toFixed"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/form.png'\nimport {DB} from '../constants/DB'\n\nfunction Balance(props) {\n    console.log(\"balance\", props.id);\n    const [userInfo, setUserInfo] = useState()\n\n    const calculate_URL = `${DB}/calculate`\n\n    useEffect( ()=>{\n        try{\n            fetch(calculate_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: props.id\n                })\n            }).then(res => res.json()).then(result=>{\n                // setUser(result.dataset)\n                setUserInfo(result.dataset)\n                console.log(\"calculate: \",result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[props.id])\n\n    let userTotal;\n    if(userInfo)\n        userTotal = userInfo.map((info, index) => <>\n        <Row key={index}>\n            <Col md={3}>\n            <Image src={info.picture} roundedCircle style={{width: \"40px\", height: \"40px\"}}/>\n            </Col>\n            <Col>\n                <Row>\n                    <h5>{info.username}</h5>\n                </Row>\n                <Row>\n                    {\n                    info.total > 0 ?\n                    <h6><span>owes</span> USD ${Number(info.total).toFixed(2)}</h6> : <h6><span>gets back</span> USD ${Number(-info.total).toFixed(2)}</h6>\n                    }\n                </Row>\n            </Col>\n        </Row>\n        </>)\n    return (\n        <>    \n        {userTotal}\n        </>\n    )\n}\n\nexport default Balance"]},"metadata":{},"sourceType":"module"}