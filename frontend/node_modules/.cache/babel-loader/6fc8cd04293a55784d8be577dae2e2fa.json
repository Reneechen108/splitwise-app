{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/contexts/groupContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DB } from '../constants/DB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupContext = /*#__PURE__*/React.createContext();\n\nfunction GroupProvider({\n  children\n}) {\n  _s();\n\n  const [groups, setGroups] = useState();\n  const getAll_URL = `${DB}/allGroup`;\n  const update_URL = `${DB}/update`;\n  const emailID = localStorage.getItem('authEmail');\n  console.log(\"this is email\", emailID);\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(result => {\n        setGroups(result.dataset);\n        console.log(\"this is a user context\", result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []); // function handleUpdate() {\n  //     fetch(update_URL, {\n  //         method: 'post',\n  //         headers: {\n  //             'Accept': 'application/json',\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify({\n  //             username: username,\n  //             email: email,\n  //             phone: phone,\n  //             emailID: emailID\n  //         })\n  //     }).then(res => res.json()).then(result=>{\n  //         setUser(result.dataset)\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GroupContext.Provider, {\n      value: {\n        groups\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(GroupProvider, \"dAzsNFrbjdBdgAtylA1f1nBMQ5U=\");\n\n_c = GroupProvider;\nexport { GroupProvider, GroupContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupProvider\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/contexts/groupContext.js"],"names":["React","useState","useEffect","DB","GroupContext","createContext","GroupProvider","children","groups","setGroups","getAll_URL","update_URL","emailID","localStorage","getItem","console","log","fetch","method","headers","then","res","json","result","dataset","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,EAAR,QAAiB,iBAAjB;;;AACA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,EAArB;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAmC;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AAEA,QAAMS,UAAU,GAAG,GAAEP,EAAG,WAAxB;AACA,QAAMQ,UAAU,GAAG,GAAER,EAAG,SAAxB;AACA,QAAMS,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,OAA7B;AAEAV,EAAAA,SAAS,CAAE,MAAI;AACX,QAAG;AACCe,MAAAA,KAAK,CAACP,UAAD,EAAa;AACdQ,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAFK,OAAb,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAM2BF,IAN3B,CAMgCG,MAAM,IAAE;AACpCd,QAAAA,SAAS,CAACc,MAAM,CAACC,OAAR,CAAT;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCO,MAAM,CAACC,OAA7C;AACH,OATD;AAUH,KAXD,CAWC,OAAMC,CAAN,EAAQ;AACLV,MAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACH;AACJ,GAfQ,EAeP,EAfO,CAAT,CAR+B,CA0B/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAA,2BACA,QAAC,YAAD,CAAc,QAAd;AAAwB,MAAA,KAAK,EAAE;AAC3BjB,QAAAA;AAD2B,OAA/B;AAAA,gBAGKD;AAHL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AASH;;GApDQD,a;;KAAAA,a;AAwDT,SAAOA,aAAP,EAAsBF,YAAtB","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst GroupContext = React.createContext()\n\nfunction GroupProvider({children}) {\n    const [groups, setGroups] = useState()\n\n    const getAll_URL= `${DB}/allGroup`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n            }).then(res => res.json()).then(result=>{\n                setGroups(result.dataset)\n                console.log(\"this is a user context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n\n    // function handleUpdate() {\n    //     fetch(update_URL, {\n    //         method: 'post',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             username: username,\n    //             email: email,\n    //             phone: phone,\n    //             emailID: emailID\n    //         })\n    //     }).then(res => res.json()).then(result=>{\n    //         setUser(result.dataset)\n    //     })\n    // }\n    return (\n        <>\n        <GroupContext.Provider  value={{\n            groups\n            }}>\n            {children}\n        </GroupContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{GroupProvider, GroupContext}"]},"metadata":{},"sourceType":"module"}