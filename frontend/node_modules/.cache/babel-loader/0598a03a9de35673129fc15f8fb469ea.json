{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Picture from '../../components/Picture';\nimport { DB } from '../../constants/DB';\nimport Application from '../../components/application/applicaiton';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [picture, setPicture] = useState();\n  const [currency, setCurrency] = useState();\n  const [time, setTime] = useState();\n  const [language, setLanguage] = useState();\n  const [display, setDisplay] = useState(\"none\");\n  const getAll_URL = `${DB}/getUser`;\n  const update_URL = `${DB}/updateUser`;\n  const emailID = localStorage.getItem('authEmail');\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  function toggleDisplay() {\n    if (display === \"none\") {\n      setDisplay(\"display\");\n      console.log(\"this is user: \", user);\n      setUsername(user[0].username);\n      setEmail(user[0].email);\n      setPhone(user[0].phone);\n      setPicture(user[0].picture);\n      setCurrency(user[0].currency);\n      setTime(user[0].time);\n      setLanguage(user[0].language);\n    } else setDisplay(\"none\");\n  }\n\n  useEffect(() => {\n    try {\n      fetch(getAll_URL, {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailID\n        })\n      }).then(res => res.json()).then(result => {\n        setUser(result.dataset);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  function handleUpdate() {\n    toggleDisplay();\n    console.log(username, email, phone);\n    let newInfo = {\n      username: username,\n      email: email,\n      phone: phone\n    };\n    console.log(\"user[0]\", user[0]);\n    console.log(\"newInfo\", newInfo);\n    Object.assign(user[0], newInfo);\n  }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(value, name);\n\n    if (name === \"currency\") {\n      user[0].currency = value;\n      setCurrency(value);\n    }\n\n    if (name === \"time\") {\n      user[0].time = value;\n      setTime(value);\n    }\n\n    if (name === \"language\") {\n      user[0].language = value;\n      setLanguage(value);\n    }\n  }\n\n  async function updateAll() {\n    console.log(\"ALL INFO: \", username, email, picture, phone, currency, time, language);\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('email', email);\n    formData.append('picture', picture);\n    formData.append('phone', phone);\n    formData.append('currency', currency);\n    formData.append('time', time);\n    formData.append('language', language);\n    formData.append('emailID', emailID);\n    axios({\n      method: \"POST\",\n      url: update_URL,\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }); // try{\n    //     let res = await fetch(update_URL, {\n    //         method: 'post',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             username, username,\n    //             email: email,\n    //             phone: phone,\n    //             picture: picture,\n    //             currency: currency,\n    //             time: time,\n    //             language: language,\n    //             emailID: emailID\n    //         })\n    //     });\n    //     let result = await res.json();\n    //     if(result && result.success){\n    //         console.log(result);\n    //         // refreshPage();\n    //     }else if(result && result.success === false){\n    //         alert(result.msg);\n    //     }\n    // }catch(e){\n    //     console.log(e);\n    // }\n  }\n\n  let title = [\"username\", \"email\", \"phone\"];\n  let items = [];\n\n  if (user) {\n    for (let number = 0; number < 3; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: ['Your ' + title[number], /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: toggleDisplay,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 68\n          }, this), \"Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 113\n        }, this), user[0][title[number]]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 24\n      }, this));\n      items.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  let currencies = [];\n  let times = [];\n  let languages = [];\n  currencies = ['USD', 'CNY'];\n  currencies = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 16\n    }, this);\n  });\n  times = ['GMT-1', 'GMT-2'];\n  times = times.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 16\n    }, this);\n  });\n  languages = ['English', 'Chinese'];\n  languages = languages.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 16\n    }, this);\n  });\n\n  const createItem = async newItem => {\n    setPicture(newItem.image);\n    console.log(newItem.image);\n    console.log(\"inside createItem\");\n  };\n\n  if (user) {\n    setPicture(user[0].picture);\n  }\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [console.log(\"picture, \", picture), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picture + '/profile.png',\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Picture, {\n            createItem: createItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currency\",\n              children: \"Your default currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"currency\",\n              id: \"currency\",\n              value: user[0].currency,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: currencies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"time\",\n              children: \"Your time zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"time\",\n              id: \"time\",\n              value: user[0].time,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: times\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"language\",\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"language\",\n              id: \"language\",\n              value: user[0].language,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: languages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        style: {\n          float: \"right\"\n        },\n        onClick: updateAll,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n        display: display,\n        children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n          toggleDisplay: toggleDisplay,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: username,\n              onChange: ({\n                target\n              }) => setUsername(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              onChange: ({\n                target\n              }) => setEmail(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              value: phone,\n              onChange: ({\n                target\n              }) => setPhone(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleUpdate,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Profile, \"zrH0uVeD8WVoeQvNSWUmknsY26I=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js"],"names":["React","useEffect","useState","Button","Form","Col","Row","faPen","faTimes","FontAwesomeIcon","Picture","DB","Application","axios","Profile","user","setUser","username","setUsername","email","setEmail","phone","setPhone","picture","setPicture","currency","setCurrency","time","setTime","language","setLanguage","display","setDisplay","getAll_URL","update_URL","emailID","localStorage","getItem","refreshPage","window","location","reload","toggleDisplay","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","result","dataset","e","handleUpdate","newInfo","Object","assign","handleChange","event","value","target","name","updateAll","formData","FormData","append","url","data","title","items","number","push","currencies","times","languages","map","item","index","createItem","newItem","image","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\nimport Application from '../../components/application/applicaiton'\nimport axios from 'axios';\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState();\n    const [time, setTime] = useState();\n    const [language, setLanguage] = useState();\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/updateUser`\n    const emailID = localStorage.getItem('authEmail');\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    function toggleDisplay(){\n        if(display === \"none\"){\n            setDisplay(\"display\")\n            console.log(\"this is user: \", user);\n            setUsername(user[0].username)\n            setEmail(user[0].email)\n            setPhone(user[0].phone)\n            setPicture(user[0].picture)\n            setCurrency(user[0].currency)\n            setTime(user[0].time)\n            setLanguage(user[0].language)\n        }\n        else\n            setDisplay(\"none\")\n    }\n\n    \n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    function handleUpdate(){\n        toggleDisplay();\n        console.log(username, email, phone);\n        let newInfo = {\n            username: username,\n            email: email,\n            phone: phone\n        }\n        console.log(\"user[0]\", user[0]);\n        console.log(\"newInfo\", newInfo);\n        Object.assign(user[0], newInfo)\n    }\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        if(name === \"currency\"){\n            user[0].currency = value\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            user[0].time = value\n            setTime(value);\n        }\n        if(name === \"language\"){\n            user[0].language = value\n            setLanguage(value);\n        }\n    }\n    async function updateAll(){\n        console.log(\"ALL INFO: \", username, email, picture, phone, currency, time, language);\n        const formData = new FormData();\n        formData.append('username', username);\n        formData.append('email', email);\n        formData.append('picture', picture);\n        formData.append('phone', phone);\n        formData.append('currency', currency);\n        formData.append('time', time);\n        formData.append('language', language);\n        formData.append('emailID', emailID);\n        \n        axios({\n            method: \"POST\",\n            url: update_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        // try{\n        //     let res = await fetch(update_URL, {\n        //         method: 'post',\n        //         headers: {\n        //             'Accept': 'application/json',\n        //             'Content-Type': 'application/json'\n        //         },\n        //         body: JSON.stringify({\n        //             username, username,\n        //             email: email,\n        //             phone: phone,\n        //             picture: picture,\n        //             currency: currency,\n        //             time: time,\n        //             language: language,\n        //             emailID: emailID\n        //         })\n        //     });\n        //     let result = await res.json();\n            \n        //     if(result && result.success){\n        //         console.log(result);\n        //         // refreshPage();\n        //     }else if(result && result.success === false){\n        //         alert(result.msg);\n        //     }\n        // }catch(e){\n        //     console.log(e);\n        // }\n    \n    }\n        \n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <Form.Label>\n                    {'Your ' +title[number]}\n                    <Button variant=\"link\" onClick={toggleDisplay}><FontAwesomeIcon icon={faPen} />Edit</Button><br />\n                    {user[0][title[number]]}\n                </Form.Label>\n            );\n            items.push(<br />)\n            items.push(<br />)\n        }\n    }\n    \n\n    let currencies = []\n    let times = []\n    let languages= []\n    currencies = ['USD', 'CNY'];\n    currencies = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    times = ['GMT-1', 'GMT-2'];\n    times = times.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    languages = ['English', 'Chinese'];\n    languages = languages.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        console.log(newItem.image);\n        console.log(\"inside createItem\");\n    }\n\n    if(user){\n        setPicture(user[0].picture)\n    }\n    if(user){\n        return (\n        <>\n        {console.log(\"picture, \", picture)}\n        <img src={picture+'/profile.png'} alt=\"\"/>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                <Picture createItem={createItem}/>\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"currency\">Your default currency</label>\n                    <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        value={user[0].currency}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {currencies}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"time\">Your time zone</label>\n                    <select\n                        name=\"time\"\n                        id=\"time\"\n                        value={user[0].time}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {times}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"language\">Language</label>\n                    <select\n                        name=\"language\"\n                        id=\"language\"\n                        value={user[0].language}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {languages}\n                    </select>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}} onClick={updateAll}>Save</Button>\n\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPhone(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n    }else{\n        return <div>Loading...</div>\n    }\n    \n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}