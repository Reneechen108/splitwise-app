{"ast":null,"code":"import { DB } from '../constants/DB';\nimport axios from 'axios';\nimport { SIGNUP_USER_FAIL, SIGNUP_USER } from '../constants/constant';\nexport const signUpUserFail = msg => {\n  return {\n    type: SIGNUP_USER_FAIL,\n    msg\n  };\n};\nexport const signUpUser = msg => {\n  return {\n    type: SIGNUP_USER,\n    msg\n  };\n};\nexport const userSignupRequest = userData => {\n  return dispatch => {\n    return axios.post(`${DB}/signup`, userData).then(({\n      res\n    }) => dispatch(signUpUser({\n      success: \"Signup successfully!\"\n    })), ({\n      response\n    }) => {\n      dispatch(signUpUser(response.data));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ruichunchen/splitwise-app/frontend/src/actions/signupActions.js"],"names":["DB","axios","SIGNUP_USER_FAIL","SIGNUP_USER","signUpUserFail","msg","type","signUpUser","userSignupRequest","userData","dispatch","post","then","res","success","response","data"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,WAA1B,QAA4C,uBAA5C;AAGA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAAS;AACnC,SAAM;AACFC,IAAAA,IAAI,EAAEJ,gBADJ;AAEFG,IAAAA;AAFE,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAIF,GAAD,IAAS;AAC/B,SAAM;AACFC,IAAAA,IAAI,EAAEH,WADJ;AAEFE,IAAAA;AAFE,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAIC,QAAD,IAAa;AAC1C,SAAOC,QAAQ,IAAI;AACf,WAAOT,KAAK,CAACU,IAAN,CAAY,GAAEX,EAAG,SAAjB,EAA2BS,QAA3B,EAAqCG,IAArC,CACH,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAUH,QAAQ,CAACH,UAAU,CAAC;AAACO,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAX,CADf,EAEH,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAgB;AACZL,MAAAA,QAAQ,CAACH,UAAU,CAACQ,QAAQ,CAACC,IAAV,CAAX,CAAR;AACH,KAJE,CAAP;AAMH,GAPD;AAQH,CATM","sourcesContent":["import {DB} from '../constants/DB'\nimport axios from 'axios'\nimport {SIGNUP_USER_FAIL, SIGNUP_USER} from '../constants/constant'\n\n\nexport const signUpUserFail = (msg) => {\n    return{\n        type: SIGNUP_USER_FAIL,\n        msg\n    }\n}\n\nexport const signUpUser = (msg) => {\n    return{\n        type: SIGNUP_USER,\n        msg\n    }\n}\n\nexport const userSignupRequest = (userData) =>{\n    return dispatch => {\n        return axios.post(`${DB}/signup`, userData).then(\n            ({res})=> dispatch(signUpUser({success: \"Signup successfully!\"})),\n            ({response}) => {\n                dispatch(signUpUser(response.data))\n            }\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}