[{"/Users/ruichunchen/splitwise-app/frontend/src/index.js":"1","/Users/ruichunchen/splitwise-app/frontend/src/App.js":"2","/Users/ruichunchen/splitwise-app/frontend/src/components/Header.js":"3","/Users/ruichunchen/splitwise-app/frontend/src/Routers/Routers.js":"4","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginNav.js":"5","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signin.js":"6","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signup.js":"7","/Users/ruichunchen/splitwise-app/frontend/src/pages/Home.js":"8","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard.js":"9","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js":"10","/Users/ruichunchen/splitwise-app/frontend/src/pages/Create.js":"11","/Users/ruichunchen/splitwise-app/frontend/src/pages/Activity.js":"12","/Users/ruichunchen/splitwise-app/frontend/src/pages/Expenses.js":"13","/Users/ruichunchen/splitwise-app/frontend/src/components/export.js":"14","/Users/ruichunchen/splitwise-app/frontend/src/components/Footer.js":"15","/Users/ruichunchen/splitwise-app/frontend/src/components/Picture.js":"16","/Users/ruichunchen/splitwise-app/frontend/src/components/CreateInput.js":"17","/Users/ruichunchen/splitwise-app/frontend/src/components/ActivityInput.js":"18","/Users/ruichunchen/splitwise-app/frontend/src/components/ExpenseInput.js":"19","/Users/ruichunchen/splitwise-app/frontend/src/pages/SingleExpense.js":"20","/Users/ruichunchen/splitwise-app/frontend/src/components/Balance.js":"21","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard/dashNav.js":"22","/Users/ruichunchen/splitwise-app/frontend/src/constants/DB.js":"23","/Users/ruichunchen/splitwise-app/frontend/src/components/application/applicaiton.js":"24","/Users/ruichunchen/splitwise-app/frontend/src/components/application/styles/style.js":"25","/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js":"26","/Users/ruichunchen/splitwise-app/frontend/src/contexts/groupContext.js":"27","/Users/ruichunchen/splitwise-app/frontend/src/contexts/activityContext.js":"28","/Users/ruichunchen/splitwise-app/frontend/src/reducers/index.js":"29","/Users/ruichunchen/splitwise-app/frontend/src/reducers/auth.js":"30","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupPage.js":"31","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupForm.js":"32","/Users/ruichunchen/splitwise-app/frontend/src/actions/signupActions.js":"33","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginPage.js":"34","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js":"35","/Users/ruichunchen/splitwise-app/frontend/src/actions/loginActions.js":"36","/Users/ruichunchen/splitwise-app/frontend/src/constants/constant.js":"37","/Users/ruichunchen/splitwise-app/frontend/src/utils/validations/setAuthorizationToken.js":"38"},{"size":1339,"mtime":1614763977615,"results":"39","hashOfConfig":"40"},{"size":769,"mtime":1614766929757,"results":"41","hashOfConfig":"40"},{"size":1507,"mtime":1614763695923,"results":"42","hashOfConfig":"40"},{"size":1476,"mtime":1614766881489,"results":"43","hashOfConfig":"40"},{"size":1896,"mtime":1614829537415,"results":"44","hashOfConfig":"40"},{"size":2498,"mtime":1614752772012,"results":"45","hashOfConfig":"40"},{"size":4100,"mtime":1614697517452,"results":"46","hashOfConfig":"40"},{"size":1424,"mtime":1613989021292,"results":"47","hashOfConfig":"40"},{"size":8904,"mtime":1614667153831,"results":"48","hashOfConfig":"40"},{"size":8649,"mtime":1614767391911,"results":"49","hashOfConfig":"40"},{"size":4312,"mtime":1614667486453,"results":"50","hashOfConfig":"40"},{"size":2338,"mtime":1614666782345,"results":"51","hashOfConfig":"40"},{"size":3240,"mtime":1614666746699,"results":"52","hashOfConfig":"40"},{"size":65,"mtime":1613654470195,"results":"53","hashOfConfig":"40"},{"size":1700,"mtime":1613737572553,"results":"54","hashOfConfig":"40"},{"size":963,"mtime":1614147338676,"results":"55","hashOfConfig":"40"},{"size":2717,"mtime":1614260970065,"results":"56","hashOfConfig":"40"},{"size":2058,"mtime":1614665415336,"results":"57","hashOfConfig":"40"},{"size":2614,"mtime":1614604522513,"results":"58","hashOfConfig":"40"},{"size":5315,"mtime":1614573056082,"results":"59","hashOfConfig":"40"},{"size":1731,"mtime":1614612107690,"results":"60","hashOfConfig":"40"},{"size":6887,"mtime":1614668314753,"results":"61","hashOfConfig":"40"},{"size":41,"mtime":1614760332580,"results":"62","hashOfConfig":"40"},{"size":2522,"mtime":1614135919746,"results":"63","hashOfConfig":"40"},{"size":4316,"mtime":1614135892460,"results":"64","hashOfConfig":"40"},{"size":2916,"mtime":1614501083867,"results":"65","hashOfConfig":"40"},{"size":1768,"mtime":1614333618261,"results":"66","hashOfConfig":"40"},{"size":1264,"mtime":1614613297847,"results":"67","hashOfConfig":"40"},{"size":111,"mtime":1614739332300,"results":"68","hashOfConfig":"40"},{"size":825,"mtime":1614838604609,"results":"69","hashOfConfig":"40"},{"size":963,"mtime":1614744868678,"results":"70","hashOfConfig":"40"},{"size":3686,"mtime":1614838757049,"results":"71","hashOfConfig":"40"},{"size":661,"mtime":1614829820166,"results":"72","hashOfConfig":"40"},{"size":1163,"mtime":1614753730963,"results":"73","hashOfConfig":"40"},{"size":2306,"mtime":1614760974289,"results":"74","hashOfConfig":"40"},{"size":1181,"mtime":1614764225020,"results":"75","hashOfConfig":"40"},{"size":143,"mtime":1614829809449,"results":"76","hashOfConfig":"40"},{"size":281,"mtime":1614763957504,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1tstxf3",{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"81"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"81"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"81"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"/Users/ruichunchen/splitwise-app/frontend/src/index.js",["178"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducers'\nimport logger from 'redux-logger'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport setAuthorizationToken from './utils/validations/setAuthorizationToken'\nimport jwtDecode from 'jwt-decode';\nimport {setCurrentUser} from './actions/loginActions'\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(thunk, logger))\n);\n\nif(localStorage.jwtToken){\n  setAuthorizationToken(localStorage.jwtToken)\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)))\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  \n  ,\n  document.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["179","180"],"/Users/ruichunchen/splitwise-app/frontend/src/App.js",["181","182","183"],"import React, {useState, useEffect} from 'react'\nimport Routers from \"./Routers/Routers\"\nimport './App.css';\nimport Header from '../src/components/Header'\nimport LoginNav from '../src/pages/userauth/LoginNav'\nimport {UserProvider} from './contexts/userContext'\nimport {GroupProvider} from './contexts/groupContext'\nimport {ActivityProvider} from './contexts/activityContext'\n\nfunction App() {\n  // const logged = localStorage.getItem('authUser');\n  // const user = logged ? <LoginNav /> : <Header />;\n  // useEffect(()=>{}, [user])\n  \n  return (\n    <>\n    <ActivityProvider>\n      <GroupProvider>\n        <UserProvider>\n          <Header />\n          <Routers />\n        </UserProvider>\n      </GroupProvider>\n    </ActivityProvider>\n    </>\n  )\n}\n\nexport default App\n","/Users/ruichunchen/splitwise-app/frontend/src/components/Header.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/Routers/Routers.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginNav.js",["184","185"],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signin.js",["186","187","188","189","190"],"import React, {useState} from 'react'\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {DB} from '../../constants/DB'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory} from 'react-router-dom';\n\nfunction Signin() {\n    const [display,setDisplay] = useState(\"none\")\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const Login_URL = `${DB}/signin`\n    const history = useHistory();\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    async function handleSignin(event){\n        event.preventDefault();\n        if(!email){\n            return;\n        }\n        if(!password){\n            return;\n        }\n        console.log(email, password);\n        try{\n            let res = await fetch(Login_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            });\n            let result = await res.json();\n            \n            if(result && result.success){\n                console.log(result);\n                if(result){\n                    localStorage.setItem('authUser', result.username);\n                    localStorage.setItem('authEmail', result.email);localStorage.setItem('authID', result.ID);\n                    toggleDisplay();\n                    history.push('/home');\n                    refreshPage()\n                }\n                console.log(\"login success\");\n            }else if(result && result.success === false){\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    \n    return (    \n        <>\n        <Button variant=\"primary\" onClick={toggleDisplay}>Sign In</Button>\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            \n        </Application.Base>  \n        </>\n    )\n}\n\nexport default Signin","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Signup.js",["191","192","193","194","195"],"import React, {useState,useContext}from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../../images/signup.png'\nimport {DB} from '../../constants/DB'\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup() {\n\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error] = useState('');\n    const [phone, setPhone] = useState('');\n    const [disable,setDisable] = useState(\"none\")\n\n    const Register_URL = `${DB}/signup`\n    const history = useHistory();\n    async function handleSignup (event){\n        event.preventDefault();\n        try{\n            console.log(username, email, password, phone);\n            let res = await fetch(Register_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username,\n                    email: email,\n                    psswd: password,\n                    phone: phone\n                })\n            });\n            let result = await res.json();\n            console.log(result);\n            if(result && result.success){\n                console.log(\"successful signup\");\n                history.push('/home');\n            }else if(result && result.success === false){\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    return (\n        <>\n        <Row>\n            <Col>\n                <img src={logo} style={{width: \"50%\", margin: \"auto\", display: \"block\", marginTop: \"100px\"}}/>\n            </Col>\n            <Col>\n                <Form style={{width: \"50vw\", padding: \"4rem\"}} onSubmit={handleSignup} method=\"POST\">\n\n                    <Form.Group controlId=\"formGridUsername\">\n                        <Form.Label>Hi there! My name is</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={({ target }) => setUsername(target.value)} required/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridPassword\">\n                        <Form.Label>Here’s my password: </Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={({ target }) => setPassword(target.value)} required/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridEmail\">\n                        <Form.Label>Here’s my email address: </Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={email} onChange={({ target }) => setEmail(target.value)} required/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridPhone\">\n                        <Form.Label>And here’s my phone number: </Form.Label>\n                        <Form.Control type=\"tel\" placeholder=\"123-456-7890\" value={phone} onChange={({ target }) => setPhone(target.value)} pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required/>\n                    </Form.Group>\n\n\n                    <Form.Text className=\"text-muted\">Already had account? <Button variant=\"link\">\n                            Sign me in!\n                    </Button></Form.Text>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form.Group>\n                    <h6>By signing up, you accept the Splitwise Terms of Service.</h6>\n                </Form>\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default Signup\n\n/**\n * \nImplement Redux in following screens of your Splitwise Application :\n\nUser Signup\nLogin (implement Redux on Logout action as well\n(optional) User Profile - includes updating and displaying all the information in Profile page using Redux\nRedux Devtools needs to be installed in the browser.\n */",["196","197"],"/Users/ruichunchen/splitwise-app/frontend/src/pages/Home.js",["198","199","200","201","202","203"],"import React, {useState} from 'react'\nimport { Navbar, Jumbotron, Button, Row, Col } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Footer from '../components/Footer'\nimport img from '../images/home.png'\nimport { Application } from '../components/export';\nimport Signin from './userauth/Signin'\nimport '../App.css'\n\nfunction Home() {\n\n    return (\n        <>\n        <Jumbotron style={{minHeight: \"450px\"}}>\n            <Row>\n                <Col sm={4}>\n                    <h1>Less stress when sharing expenses</h1>\n                    <p style={{paddingTop: \"4rem\", paddingBottom: \"4rem\"}}>\n                        Keep track of your shared expenses and balances with housemates, trips, groups, friends, and family.\n                    </p>\n                    <Button variant=\"primary\"><a href=\"/signup\" style={{textDecoration: \"none\", color: \"white\"}}>Sign Up</a></Button>\n                    <p></p>\n                    <h6>Free for iPhone <FontAwesomeIcon icon={faApple} />,Android <FontAwesomeIcon icon={faAndroid} />, and web.</h6>\n                </Col>\n                <Col sm={8}><img src={img} style={{width: \"100%\"}}></img></Col>\n            </Row>\n        </Jumbotron>\n        <Footer />\n        </>\n    )\n}\n\nexport default Home","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, {useState,useEffect,useContext}from 'react'\nimport { Button, Form, Col, Row, Jumbotron, Container, Pagination, Tooltip, OverlayTrigger, Popover } from 'react-bootstrap';\nimport DashNav from '../pages/Dashboard/dashNav'\nimport {DB} from '../constants/DB'\nimport Expenses from './Expenses'\nimport {UserContext} from '../contexts/userContext'\nimport {GroupContext} from '../contexts/groupContext'\nimport Activity from '../pages/Activity'\n\nfunction Dashboard() {\n    let title = [\"total balance\", \"you owe\", \"you are owed\"]\n    const [group, setGroup] = useState()\n    const [expense, setExpense] = useState()\n    const [userInfo, setUserInfo] = useState()\n    const [userOwe, setUserOwe] = useState()\n    const {user} = useContext(UserContext);\n    const {groups} = useContext(GroupContext);\n    const [displayWin,setDisplayWin] = useState(\"none\")\n    const [one,setOne] = useState(0)\n    const [two,setTwo] = useState(0)\n    const [three,setThree] = useState(0)\n    const [display,setDisplay] = useState(\"display\")\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n\n    let user_URL = `${DB}/getInfo`\n    let userOwe_URL = `${DB}/getOweInfo`\n    let update_URL = `${DB}/updateExpenses`\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n    useEffect( ()=>{\n        try{\n            fetch(user_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ID: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(\"userInfo: \", result.dataset);\n                setUserInfo(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n        try{\n            fetch(userOwe_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ID: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(\"userInfo: \", result.dataset);\n                setUserOwe(result.dataset)\n                console.log(\"userOwe\", userOwe);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h3\">Popover right</Popover.Title>\n            <Popover.Content>\n            And here's some <strong>amazing</strong> content. It's very engaging.\n            right?\n            </Popover.Content>\n        </Popover>\n    );\n\n    const createItem= async(newItem) => {\n        console.log(\"this is newItem\", newItem.ID);\n        console.log(\"this is recent\", newItem.recent);\n        setDisplay(\"none\")\n        if(newItem.ID){\n            const getExpense_URL = `${DB}/expense/${newItem.ID}`\n            await fetch(getExpense_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ID: newItem.ID\n                })\n            }).then(res => res.json()).then(result=>{\n                // console.log(\"result.dataset\", result.dataset);\n                setExpense(result.dataset)\n            })\n        }\n        if(newItem.recent){\n            setExpense('')\n        }\n    }\n\n    function settleUp(){\n\n        if(displayWin === \"none\")\n            setDisplayWin(\"display\")\n        else\n            setDisplayWin(\"none\")\n    }\n\n    let groupInfoTwo = []\n    let groupInfoThree = []\n    let twoGroup = []\n    let threeGroup = []\n    let totalOwed = []\n\n    if(userInfo&&user&&groups&&userOwe){\n        console.log(\"inside\", userInfo);\n        let two = 0\n        let three = 0\n        // let groupCost = 0\n        for(let i = 0; i < userInfo.length; i++){\n            let eachOwed = userInfo[i].amount\n            // let groupName = groups.filter(g=>g.G_ID===userInfo[i].G_ID)\n            let userName = user.filter(u=>u.ID===parseInt(userInfo[i].user))\n            let sep = (i+1 != userInfo.length && userInfo[i].description !== userInfo[i+1].description) ? \n            <p style={{borderBottom: \"1px solid black\", padding: \"3px\"}}></p> : <p></p>  \n            let num = Math.floor(Math.random() * 200)\n            threeGroup.push(\n                <>\n                <div key={num}>\n                    <img src={userName[0].picture} alt=\"\" style={{width:\"30px\", height: \"30px\"}}/>    \n                    {userName[0].username} owes you {eachOwed} for \"{userInfo[i].description}\"\n                </div>\n                {sep}\n                </>\n            )\n            three += eachOwed\n        }\n        \n        for(let i = 0; i < userOwe.length; i++){\n            let eachOwed = userOwe[i].amount\n            let userName = user.filter(u=>u.ID===parseInt(userOwe[i].user))\n            let userOwedName = user.filter(u=>u.ID===parseInt(userOwe[i].host))\n            let sep = (i+1 != userOwe.length && userOwe[i].description !== userOwe[i+1].description) ? \n            <p style={{borderBottom: \"1px solid black\", padding: \"3px\"}}></p> : <p></p>     \n            let num = Math.floor(Math.random() * 200) \n            twoGroup.push(\n                <>\n                <div key={num}>\n                    <img src={userName[0].picture} alt=\"\" style={{width:\"30px\", height: \"30px\"}}/>    \n                    You owe {userOwedName[0].username} {userOwe[i].amount} for \"{userOwe[i].description}\"\n                </div>\n                {sep}\n                </>\n            )\n            two += eachOwed\n        }\n        groupInfoTwo.push(twoGroup)\n        groupInfoThree.push(threeGroup);\n        if(displayWin===\"none\"){\n            two = 0\n            three = 0 \n        }\n        totalOwed.push(\n            <>\n                <Pagination.Item key={title[0]} style={{width: \"250px\"}}>\n                    {title[0]}<br />{Number(three-two).toFixed(2)}\n                </Pagination.Item>\n                <Pagination.Item key={title[1]} style={{width: \"250px\"}}>\n                    {title[1]}<br />{Number(two).toFixed(2)}\n                </Pagination.Item>\n                <Pagination.Item key={title[2]} style={{width: \"250px\"}}>\n                    {title[2]}<br />{three}\n                </Pagination.Item>\n            </>\n        )\n    }\n\n    console.log(\"expense\",expense);\n    let dashContent = expense ? <Expenses expense={expense}/> : <Activity />\n\n    let content = display===\"display\" ? <>\n        <Col sm={9} style={{display:display}}>\n            <Row style={{height: \"194px\"}}>\n                <Jumbotron style={{padding: \"10px\", width: \"100%\"}}>\n                    <Container>\n                        <Row>   \n                            <Col sm={8} key=\"1\">\n                                <h1>Dashboard</h1>\n                            </Col>\n                            <Col key=\"2\">\n                                <Button variant=\"danger\" onClick={settleUp}>Settle up</Button>\n                            </Col>\n                            <Pagination size=\"lg\" style={{margin: \"0 auto\"}}>\n                                {totalOwed}\n                            </Pagination>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            </Row>\n            <Row style={{margin: \"0 auto\"}} className=\"justify-content-md-center\">\n                <h3>You owe</h3>\n                <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                <Button variant=\"secondary\" className=\"ml-3\">Click me to see</Button>\n                </OverlayTrigger>\n                <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                    <Button variant=\"secondary\" className=\"ml-3\">Click me to see</Button>\n                </OverlayTrigger>{' '}\n                    <h3>You are owed</h3>\n            </Row>\n            <Row className=\"justify-content-md-center\" style={{height: \"100%\"}}>\n                <Col style={{borderRight: \"1px solid black\", padding: 0}}>\n                    {groupInfoTwo}\n                </Col>\n                <Col className=\"ml-3\">\n                    <p></p>\n                    {groupInfoThree}\n                </Col>\n            </Row>\n        </Col>\n    </> : dashContent\n    return (\n        <>\n        <Row>\n            <Col sm={3}>\n                <DashNav createItem={createItem} />\n            </Col>\n            {content}\n        </Row>\n         \n        </>\n    )\n}\n\nexport default Dashboard","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js",["220","221"],"import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\nimport Application from '../../components/application/applicaiton'\nimport axios from 'axios';\nimport { useHistory} from 'react-router-dom';\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState('USD');\n    const [time, setTime] = useState('GMT-1');\n    const [language, setLanguage] = useState('English');\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    const history = useHistory();\n\n    function setup() {\n        setUsername(user[0].username)\n        // localStorage.setItem('authUser', user[0].username);\n        setEmail(user[0].email)\n        setPhone(user[0].phone)\n    }\n\n    function toggleDisplay(){\n        if(display === \"none\"){\n            setDisplay(\"display\")\n            console.log(\"this is user: \", user);\n            setup()\n        }\n        else\n            setDisplay(\"none\")\n    }\n\n    \n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[picture])\n\n    function handleUpdate(){\n        toggleDisplay();\n        console.log(username, email, phone);\n        let newInfo = {\n            username: username,\n            email: email,\n            phone: phone\n        }\n        console.log(\"user[0]\", user[0]);\n        console.log(\"newInfo\", newInfo);\n        Object.assign(user[0], newInfo)\n    }\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        setup()\n        if(name === \"currency\"){\n            user[0].currency = value\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            user[0].time = value\n            setTime(value);\n        }\n        if(name === \"language\"){\n            user[0].language = value\n            setLanguage(value);\n        }\n    }\n    async function updateAll(){\n        console.log(\"ALL INFO: \", username, email, picture, phone, currency, time, language);\n        const formData = new FormData();\n        formData.append('username', username);\n        formData.append('email', email);\n        formData.append('picture', picture);\n        formData.append('phone', phone);\n        formData.append('currency', currency);\n        formData.append('time', time);\n        formData.append('language', language);\n        formData.append('emailID', emailID);\n        formData.append('upload','user');\n        axios({\n            method: \"POST\",\n            url: update_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        // history.push('/home')\n        // refreshPage();\n        setTimeout(refreshPage, 1000);\n    }\n        \n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <Form.Label>\n                    {'Your ' +title[number]}\n                    <Button variant=\"link\" onClick={toggleDisplay}><FontAwesomeIcon icon={faPen} />Edit</Button><br />\n                    {user[0][title[number]]}\n                </Form.Label>\n            );\n            items.push(<br />)\n            items.push(<br />)\n        }\n    }\n    \n\n    let currencies = []\n    let times = []\n    let languages= []\n    currencies = ['USD', 'CNY', 'KWD', 'BHD', 'GBP', 'EUR', 'CAD'];\n    currencies = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    times = [\"(GMT-08:00) Pacific Time (US & Canada)\", \"(GMT-09:00) Alaska\", \"(GMT-10:00) Hawaii\", '(GMT-11:00) Midway Island, Samoa', '(GMT-12:00) International Date Line West'];\n    times = times.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    languages = ['English', 'Chinese', 'Cambodian', 'Basque', 'French' ];\n    languages = languages.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        setEmail(emailID)\n        setup()\n        console.log(newItem.image);\n        console.log(\"inside createItem\");\n    }\n    \n    if(user){\n        console.log(\"user[0].picture\",user[0].picture);\n        const Oldpicture = user[0].picture ? <Picture createItem={createItem} old={user[0].picture}/> : <Picture createItem={createItem} />\n        localStorage.setItem('authUser', user[0].username);\n        return (\n        <>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                {Oldpicture}\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"currency\">Your default currency</label>\n                    <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        value={user[0].currency}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {currencies}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"time\">Your time zone</label>\n                    <select\n                        name=\"time\"\n                        id=\"time\"\n                        value={user[0].time}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {times}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <label htmlFor=\"language\">Language</label>\n                    <select\n                        name=\"language\"\n                        id=\"language\"\n                        value={user[0].language}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {languages}\n                    </select>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}} onClick={updateAll}>Save</Button>\n\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPhone(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n    }else{\n        return <div>Loading...</div>\n    }\n    \n}\n\nexport default Profile","/Users/ruichunchen/splitwise-app/frontend/src/pages/Create.js",["222","223","224","225","226"],"import React, {useState, useEffect} from 'react'\nimport { Button, Form, Col, Row, InputGroup, FormControl } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../components/Picture'\nimport CreateInput from '../components/CreateInput'\nimport { Application } from '../components/export';\nimport {DB} from '../constants/DB'\nimport axios from 'axios';\n\nfunction Create(props) {\n   \n    const [display,setDisplay] = useState(\"none\")\n    const [picture,setPicture] = useState()\n    const [group, setGroup] = useState()\n    const [number, setNumber] = useState(0)\n    const [users, setUsers] = useState()\n    const [input, setInput] = useState()\n\n    const create_URL = `${DB}/update`\n\n    let items = []\n    let userList = []\n    const handleSearch = (newItem) => {\n        console.log(\"newItem\", newItem);\n        userList.push(newItem)\n    }\n\n    for (let i = 0; i < number; i++) {\n        items.push(\n            <>\n            <div style={{display: \"flex\"}}>\n                <CreateInput createItem={handleSearch}/>\n                <FontAwesomeIcon icon={faTimes} onClick={() => setNumber(number-1)}></FontAwesomeIcon>\n            </div>\n            </>\n        );\n    }\n    if(document.getElementById('display'))\n        console.log(\"html: \", document.getElementById('display').innerHTML);\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        console.log(\"inside createItem\");\n    }\n\n    async function allUser(){\n        let current = localStorage.getItem('authID')\n        let allUser = []\n        userList.map(u => allUser.push(u.ID))\n        allUser.push(parseInt(current))\n        setUsers(allUser)\n        console.log(picture, group, users);\n        const formData = new FormData();\n        formData.append('name', group);\n        formData.append('users', allUser);\n        formData.append('upload','group');\n        formData.append('picture', picture);\n        axios({\n            method: \"POST\",\n            url: create_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        }).then(response => {\n            // console.log(\"this is response:\", response);\n            if(!response.data.success)\n                alert(response.data.msg)\n            // else\n            //     setTimeout(refreshPage, 1000);\n        });\n    }\n\n    function search(e){\n        props.search({value: e.target.value})\n    }\n\n    return (\n        <>\n        <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Search for group\"\n                aria-label=\"groups\"\n                aria-describedby=\"basic-addon2\"\n                onChange={search}\n                />\n                <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={toggleDisplay}>+ add</Button>\n                </InputGroup.Append>\n        </InputGroup>\n        <Application.Group display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Row className=\"justify-content-md-center\">\n                <Col sm={4}>\n                    <Picture createItem={createItem}/>\n                </Col>\n                <Col sm={8}>\n                    <h4>START A NEW GROUP</h4>\n                    <h6>My group shall be called...</h6>\n                    <Form.Control type=\"text\" placeholder=\"Enter group name\" onChange={({target}) => setGroup(target.value)} />\n                    <h4>GROUP MEMBERS</h4>\n                    {items}\n                    {/* {console.log(\"here\", items)} */}\n                    <Button variant=\"link\" onClick={() => setNumber(number+1)}>+ Add a person</Button>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Button variant=\"danger\" onClick={allUser}>Save</Button>\n            </Row>\n        </Application.Group>  \n        </>\n    )\n}\n\nexport default Create","/Users/ruichunchen/splitwise-app/frontend/src/pages/Activity.js",["227","228","229","230","231","232","233"],"import React, {useState,useContext,useEffect}from 'react'\nimport { Button, Col, Row, Image, Jumbotron, Container } from 'react-bootstrap';\nimport DashNav from '../pages/Dashboard/dashNav'\nimport ActivityInput from '../components/ActivityInput'\nimport {DB} from '../constants/DB'\n// import ExpenseInput from '../components/ExpenseInput'\nfunction Activity() {\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const recent_URL= `${DB}/recent`\n    const [posts, setPosts] = useState()\n    const [owns, setOwns] = useState()\n    // const [expenses, setExpenses] = useState()\n\n    let expenseList = [];\n\n    useEffect( ()=>{\n        try{\n            fetch(recent_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: localStorage.getItem(\"authID\")\n                })\n            }).then(res => res.json()).then(result=>{\n                setPosts(result.posts)\n                setOwns(result.owns)\n                console.log(\"this is a posts\", result.posts);\n                console.log(\"this is a owns\", result.owns);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    if(posts){\n        posts.map((item, index) => {\n            expenseList.push(<ActivityInput value={item} key={index} />)\n        });\n    }\n    if(owns){\n        owns.map((item, index) => {\n            expenseList.push(<ActivityInput value={item} key={index+50} />)\n        });\n    }\n\n    expenseList.sort((a, b) => (a.props.value.date > b.props.value.date) ? -1 : 1)\n\n    return (\n        <>\n        <Col sm={6}>\n            <Jumbotron style={{padding: \"10px\"}}>\n                <Container>\n                    <Row>   \n                        <h3>Recent Activity</h3>\n                    </Row>\n                    <Row>\n                        <h6>{monthNames[new Date().getMonth()]} {new Date().getFullYear()}</h6>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <Row>\n                {expenseList}\n            </Row>\n        </Col>\n        </>\n    )\n}\n\nexport default Activity","/Users/ruichunchen/splitwise-app/frontend/src/pages/Expenses.js",["234","235","236","237","238","239","240","241","242","243"],"import React, {useState,useContext, useEffect}from 'react'\nimport { Button, Form, Col, Row, Image, Dropdown, Jumbotron, Container } from 'react-bootstrap';\nimport DashNav from '../pages/Dashboard/dashNav'\nimport ExpenseInput from '../components/ExpenseInput'\nimport ActivityInput from '../components/ActivityInput'\nimport Balance from '../components/Balance'\nimport SingleExpense from '../pages/SingleExpense'\nimport logo from '../images/signup.png'\nimport {DB} from '../constants/DB'\nimport {ActivityContext} from '../contexts/activityContext'\n\nfunction Expenses(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n\n    const [userInfo, setUserInfo] = useState()\n\n    const {activities} = useContext(ActivityContext)\n    const leave_URL = `${DB}/reject`\n\n    let expenseList = [];\n\n    // console.log(\"props.expense[0].G_ID\", props.expense[0].G_ID);\n    \n\n    console.log(\"expense\");\n    if(props.expense){\n        let after = props.expense.filter(p => p.role !== 1)\n        console.log(\"after\", after);\n        after.map((item, index) => {\n            expenseList.push(<ExpenseInput value={item} key={index} />)\n        });\n    }\n\n    expenseList.sort((a, b) => (a.props.value.date > b.props.value.date) ? -1 : 1)\n    \n    function leave(){\n        let allExpense = props.expense.filter(p => (p.user===localStorage.getItem('authID') && p.role !== 1 && p.amount !== 0))\n        console.log(\"allExpense\", allExpense);\n        if(allExpense.length > 0){\n            alert(\"You should pay off all the expenses before you leave the group!\")\n        }else{\n            fetch(leave_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: parseInt(props.expense[0].G_ID),\n                    member: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(result.dataset);\n            })\n        }\n    }\n\n    return (\n        <>\n        <Col sm={6}>\n            <Jumbotron style={{padding: \"10px\"}}>\n                    <Container>\n                        <Row>   \n                            <Image src={logo} style={{width: \"50px\"}}></Image>\n                            <h3>Home Expenses</h3>\n                            <SingleExpense />\n                            <Button variant=\"secondary\" className=\"ml-3\" onClick={leave}>\n                                Leave Group\n                            </Button>\n                        </Row>\n                        <Row>\n                            <h6>{monthNames[new Date().getMonth()]} {new Date().getFullYear()}</h6>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            <Row>\n                {expenseList}\n            </Row>\n        </Col>\n        <Col sm={3}>\n            <h4>GROUP BALANCES</h4>\n            <Balance id={props.expense[0].G_ID}/>\n            <a href=\"#\">View details ...</a>\n        </Col>\n        </>\n    )\n}\n\nexport default Expenses","/Users/ruichunchen/splitwise-app/frontend/src/components/export.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/Footer.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/Picture.js",["244","245","246","247"],"import { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../images/signup.png'\n\nconst React = require('react')\n\nclass Picture extends React.Component {\n  constructor(props){\n    super(props)\n    if(props.old){\n        this.state = {\n            file: props.old\n        }\n    }else{\n        this.state = {\n            file: logo\n        }\n    }\n    \n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event) {\n    this.setState({\n      file: URL.createObjectURL(event.target.files[0])\n    })\n    this.props.createItem({\n        image: event.target.files[0]\n    });\n  }\n  render() {\n    return (\n      <>\n        <img src={this.state.file} style={{width: \"50%\", height: \"50%\"}}/>\n        <p></p>\n        <div className=\"mb-3\">\n            <Form.File id=\"formcheck-api-regular\">\n            <Form.File.Input onChange={this.handleChange}/>\n            </Form.File>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Picture\n","/Users/ruichunchen/splitwise-app/frontend/src/components/CreateInput.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/ActivityInput.js",["248","249","250","251","252"],"import React, {useContext, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png'\nimport category1 from '../images/shopping.png'\nimport category2 from '../images/daliy.png'\nimport category3 from '../images/form.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport { UserContext } from '../contexts/userContext'\n// import { ActivityContext } from '../contexts/activityContext'\n\nfunction ActivityInput(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const {user} = useContext(UserContext)\n    let month\n    let data\n    let currentInfo\n    if(props.value && user){\n        console.log(\"props.value\", props.value);\n        month = monthNames[parseInt(props.value.date.substring(5, 7))-1].substring(0,3)\n        data = props.value.date.substring(8, 10)\n        if(props.value.role===1){\n            currentInfo = <h6>You get back USD ${-Number(props.value.amount).toFixed(2)}</h6>\n        }else{\n            currentInfo = <h6 style={{color:\"red\"}}>You owes USD ${Number(props.value.amount).toFixed(2)}</h6>\n        }\n    }\n    return (\n        <>\n            {/* {date}  */}\n        <Col>\n            <Row>\n                <Col sm={1}>\n                    <Image src={category1} style={{width: \"50px\"}} rounded />\n                </Col>\n                <Col sm={9}>\n                    <h4 style={{paddingTop: \"6px\", marginLeft: \"10px\"}}>{props.value.username===localStorage.getItem('authUser') ? \"You\" : props.value.username} update {props.value.description}<FontAwesomeIcon icon={faCamera} /></h4>\n                    {currentInfo}\n                </Col>\n                <Col>\n                <p>{month} {data}</p>\n                </Col>\n            </Row>\n        </Col>\n        <p style={{border: \"1px solid black\", width: \"100%\"}}></p>\n        </>\n    )\n}\n\nexport default ActivityInput","/Users/ruichunchen/splitwise-app/frontend/src/components/ExpenseInput.js",["253","254","255","256","257"],"import React, {useContext, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png'\nimport category1 from '../images/shopping.png'\nimport category2 from '../images/daliy.png'\nimport category3 from '../images/form.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport { UserContext } from '../contexts/userContext'\nimport { ActivityContext } from '../contexts/activityContext'\n\nfunction ExpenseInput(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const {user} = useContext(UserContext)\n    const {activities} = useContext(ActivityContext)\n\n    // console.log(\"inside expenseInput: \", props.value);\n    let currentUser\n    let month\n    let data\n    let desc\n    let userInfo\n    let paid\n    if(props.value && user){\n        let u1 = user.filter(u => u.ID === parseInt(props.value.user))\n        if(props.value.amount > 0){\n            month = monthNames[parseInt(props.value.date.substring(5, 7))-1].substring(0,3)\n            data = props.value.date.substring(8, 10)\n            userInfo = <h6>{u1[0].username}</h6>\n            paid = <h4>USD${props.value.amount}</h4>\n        }else{\n            // console.log(\"all activity\", activities)\n            let filterData = activities.filter(a => a.E_ID === props.value.E_ID)\n            console.log(\"filterData\", filterData);\n            month = monthNames[parseInt(filterData[0].date.substring(5, 7))-1].substring(0,3)\n            data = filterData[0].date.substring(8, 10)\n            userInfo = <h6 style={{color: \"red\"}}>{u1[0].username} Paid</h6>\n            paid = <h4 style={{color: \"red\"}}>USD${filterData[0].action}</h4>\n        }\n        desc = props.value.description\n        currentUser = u1[0] ? \n        <>\n        {userInfo}\n        {paid}\n        </> : null;\n    }\n\n    // Object.assign(props.createItem, props.value.date)\n\n    return (\n        <>\n          <Col md={1}>\n            <h6>{month}</h6>\n            <h4>{data}</h4>\n        </Col>\n        <Col md={7}>\n            <Row>\n                <Image src={category1} style={{width: \"50px\"}} rounded />\n                <h4 style={{paddingTop: \"6px\", marginLeft: \"10px\"}}>{desc}<FontAwesomeIcon icon={faCamera} /></h4>\n            </Row>\n        </Col>\n        <Col md={4}>\n            {currentUser}\n        </Col>\n        <p style={{border: \"1px solid black\", width: \"100%\"}}></p>\n        </>\n    )\n}\n\nexport default ExpenseInput","/Users/ruichunchen/splitwise-app/frontend/src/pages/SingleExpense.js",["258","259","260","261","262","263"],"import React, { useState, useEffect } from 'react'\nimport { Modal, Button, Image, Row, Col, InputGroup, FormControl, Form} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport category1 from '../images/form.png'\nimport {DB} from '../constants/DB'\n\nfunction SingleExpense() {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const group_URL = `${DB}/getGroup`\n    const addExpenses_URL = `${DB}/addExpenses`\n    const [groups,setGroups] = useState();\n    const [input, setInput] = useState();\n    const [description, setDescription] = useState()\n    const [money, setMoney] = useState();\n    const [currentGroup, setCurrentGroup] = useState()\n    const [others, setOthers] = useState()\n\n    useEffect( ()=>{\n        try{\n            fetch(group_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                setGroups(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    function handleSubmit() {\n        try{\n            fetch(addExpenses_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: document.getElementById(\"groupName\").innerHTML,\n                    host: localStorage.getItem('authID'),\n                    date: new Date().toISOString().slice(0, 19).replace('T', ' '),\n                    description: description,\n                    expense: money\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n        handleClose();\n    }\n\n    let searchGroup = ''\n    let newG\n    \n    function cancel(){\n        console.log(\"click\");\n        searchGroup = <Row style={{borderBottom: \"1px solid black\"}}>\n            With you and: <Form.Control type=\"text\" placeholder=\"Enter group name\" onChange={({ target }) => setInput(target.value)}  value={input} name=\"group\" style={{width: \"70%\", marginLeft: \"20px\"}}/>\n        </Row>\n        setInput('')\n    }\n\n    if(groups){\n        console.log(groups);\n        newG = groups.filter((g) => (g.name === input && g.invitation===1))\n        searchGroup = newG[0] ? \n        <>\n        <Row>\n            Group name: \n            <Col sm={2}>\n                <Image src={newG[0].picture} roundedCircle style={{width: \"30px\", height: \"30px\"}}/>\n            </Col>\n            <div style={{width: \"100px\"}} id=\"groupName\">{newG[0].name}</div>\n            <FontAwesomeIcon icon={faTimes} onClick={cancel}/>\n        </Row>\n        </> \n        : \n        <Row style={{borderBottom: \"1px solid black\"}}>\n            With you and: <Form.Control type=\"text\" placeholder=\"Enter group name\" onChange={({ target }) => setInput(target.value)}  value={input} name=\"group\" style={{width: \"70%\", marginLeft: \"20px\"}}/>\n        </Row>\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow} className=\"ml-3\">\n                Add Expense\n            </Button>\n\n            <Modal show={show} onHide={handleClose} >\n                <Modal.Header closeButton>\n                <Modal.Title>Add an expense</Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{ height: \"300px\" }}>\n                    {searchGroup}\n                    <p></p>\n                    <Row>\n                        <Col md={3}>\n                            <Image src={category1} style={{width: \"100px\"}} rounded />\n                        </Col>\n                        <Col md={7}>\n                            <InputGroup className=\"mb-3\">\n                                <Form.Control type=\"text\" placeholder=\"Enter Description\" value={description} onChange={({ target }) => setDescription(target.value)} required/>\n                            </InputGroup>\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                <InputGroup.Text>$</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control type=\"number\" placeholder=\"Amount (to the nearest dollar)\" value={money} onChange={({ target }) => setMoney(target.value)} required/>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={handleSubmit}>\n                    Save\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default SingleExpense;","/Users/ruichunchen/splitwise-app/frontend/src/components/Balance.js",["264","265","266"],"import React, {useState, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/form.png'\nimport {DB} from '../constants/DB'\n\nfunction Balance(props) {\n    console.log(\"balance\", props.id);\n    const [userInfo, setUserInfo] = useState()\n\n    const calculate_URL = `${DB}/calculate`\n\n    useEffect( ()=>{\n        try{\n            fetch(calculate_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: props.id\n                })\n            }).then(res => res.json()).then(result=>{\n                // setUser(result.dataset)\n                setUserInfo(result.dataset)\n                console.log(\"calculate: \",result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[props.id])\n\n    let userTotal;\n    if(userInfo)\n        userTotal = userInfo.map(info => <>\n        <Row>\n            <Col md={3}>\n            <Image src={info.picture} roundedCircle style={{width: \"40px\", height: \"40px\"}}/>\n            </Col>\n            <Col>\n                <Row>\n                    <h5>{info.username}</h5>\n                </Row>\n                <Row>\n                    {\n                    info.total > 0 ?\n                    <h6><span>owes</span> USD ${Number(info.total).toFixed(2)}</h6> : <h6><span>gets back</span> USD ${Number(-info.total).toFixed(2)}</h6>\n                    }\n                </Row>\n            </Col>\n        </Row>\n        </>)\n    return (\n        <>    \n        {userTotal}\n        </>\n    )\n}\n\nexport default Balance","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard/dashNav.js",["267","268","269","270","271","272","273","274","275","276"],"import { Modal, Button, Form, InputGroup, FormControl,Row } from 'react-bootstrap';\nimport { faFlag, faList, faTag, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios';\nimport logo from '../../images/signup.png'\nimport Create from '../Create'\nimport {DB} from '../../constants/DB'\nimport {Application} from '../../components/export'\n\nconst React = require('react')\n\nclass DashNav extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            groups: '',\n            currentGroup: '',\n            show: false,\n            item: '',\n            found: '',\n            allGroups: ''\n        }\n        this.getGroup = this.getGroup.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleAccept = this.handleAccept.bind(this)\n        this.handlReject = this.handlReject.bind(this)\n        this.search = this.search.bind(this)\n        this.recent = this.recent.bind(this)\n    }\n    \n    componentDidMount(){\n        let group_URL = `${DB}/getGroup`\n        const expense = '/expense'\n        fetch(group_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: localStorage.getItem('authID')\n            })\n        }).then(res => res.json()).then(result=>{\n            console.log(\"result.dataset: \", result.dataset);\n            this.setState({\n                allGroups: result.dataset,\n                groups: result.dataset\n            })\n        })\n    }\n    getGroup(event) {\n        let text = event.target.innerText;\n        let currentGroup = this.state.allGroups.filter((g) => g.name === text)\n        this.props.createItem({\n            ID: currentGroup[0].id,\n            allGroup: this.state.allGroups,\n            recent: ''\n        });\n        console.log(\"inside getGroup\", currentGroup[0].id,);\n    }   \n\n    handleAccept(e){\n        console.log(e.target.id);\n        console.log(\"accpet this invitation\");\n        let accept_URL = `${DB}/accpet`\n        fetch(accept_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: e.target.id,\n                user: parseInt(localStorage.getItem('authID'))\n            })\n        }).then(res => res.json()).then(result=>{\n            // console.log(\"result.dataset: \", result.dataset);\n            if(result.success){\n                alert(\"Accept invitation from \", e.target.id)\n                window.location.reload(false);\n            }\n        })\n        this.setState({show: false})\n    }\n\n    handlReject(e){\n        console.log(e.target.id);\n        console.log(\"reject this invitation\");\n        let accept_URL = `${DB}/reject`\n        fetch(accept_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: e.target.id,\n                user: parseInt(localStorage.getItem('authID'))\n            })\n        }).then(res => res.json()).then(result=>{\n            // console.log(\"result.dataset: \", result.dataset);\n            if(result.success){\n                alert(\"Reject invitation from \", e.target.id)\n                window.location.reload(false);\n            }\n        })\n        this.setState({show: false})\n    }\n\n    handleClose () {\n        this.setState({show:false})\n    }\n\n    search = async(newItem) => {\n        let searchGroup = []\n        searchGroup = this.state.allGroups.filter(g => g.name === newItem.value)\n        console.log(\"searchGroup\", searchGroup);\n        if(searchGroup.length > 0)\n            this.setState({groups: searchGroup, found: 'found'})\n        if(newItem.value===\"\"){\n            this.setState({groups: this.state.allGroups, found: 'found'})\n            console.log(\"here\");\n        }\n        console.log(\"this.state.groups\", this.state.groups);\n    }\n    \n    recent(){\n        this.props.createItem({\n            recent: \"recent\",\n            id: ''\n        });\n    }\n    \n    render(){\n        let displayGroup = this.state.groups ? this.state.groups.map((item, index) => \n        item.invitation === 1 ?\n        <li className=\"list-group-item\" key={index}>\n        <Button variant=\"link\" style={{padding: \"0px\"}} onClick={this.getGroup}><FontAwesomeIcon icon={faTag} /><strong>{item.name}</strong></Button>\n        </li> : null) \n        : \n        null\n        let invitation =[]\n        let itemList = []\n        let count = 0\n        invitation = this.state.groups ? \n            <>\n        <Modal show={this.state.show} onHide={this.handleClose} >\n            <Modal.Header closeButton>\n            <Modal.Title>Invitation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ height: \"300px\" }}>\n                {\n                this.state.groups.forEach((item, index) => {\n                    if(item.invitation!==1 && parseInt(item.rejection)===0){\n                        this.state.show = true\n                        itemList.push(\n                            <>\n                            <Row key={index}>\n                                <h5>Having a invitation from \"{item.name}\"</h5>\n                                <Button variant=\"success\" id={item.name} onClick={this.handleAccept}>accpet</Button >\n                                <Button variant=\"danger\" className=\"ml-3\" id={item.name} onClick={this.handlReject}>reject</Button >\n                            </Row>\n                            <p></p>\n                            </>\n                        )\n                    }else{\n                        count +=1;\n                    }\n                })\n                }\n                {count === this.state.groups.length ? <h5>There are no new invitation</h5> : null}\n                {itemList}\n            </Modal.Body>\n            <Modal.Footer>\n            </Modal.Footer>\n        </Modal>\n            </> : null;\n\n        return (\n        <>\n        <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\"><a href=\"/dashboard\"><img src={logo} style={{width: \"30px\"}}/><strong style={{color: \"green\"}}>Dashboard</strong></a></li>\n            <li className=\"list-group-item\"><Button variant=\"link\" onClick={this.recent}><FontAwesomeIcon icon={faFlag} /><strong> Recent activity</strong></Button></li>\n            <Create search={this.search}/>\n            {displayGroup && displayGroup.length > 0 ? displayGroup : this.state.found}\n            {invitation}\n        </ul>\n        </>\n    );\n  }\n}\n\nexport default DashNav","/Users/ruichunchen/splitwise-app/frontend/src/constants/DB.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/application/applicaiton.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/application/styles/style.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js",["277","278"],"import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst UserContext = React.createContext()\n\nfunction UserProvider({children}) {\n    const [user, setUser] = useState()\n    const [username,setUsername] = useState()\n    const [email,setEmail] = useState()\n    const [phone, setPhone] = useState()\n    const [picture, setPicture] = useState();\n    const [currency,setCurrency] = useState()\n    const [time,setTime] = useState()\n    const [language,setLanguage] = useState()\n\n    const getAll_URL= `${DB}/searchUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    // console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n                console.log(\"this is a user context\", result.dataset);\n                // if(user){\n                //     setUsername(user[0].username)\n                //     setEmail(user[0].email)\n                //     setPhone(user[0].phone)\n                // }\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[username, email, phone, picture, currency, time, language])\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        if(name === \"username\"){\n            setUsername(value);\n        }\n        if(name === \"email\"){\n            setEmail(value);\n        }\n        if(name === \"phone\"){\n            setPhone(value);\n        }\n        if(name === \"currency\"){\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            setTime(value);\n        }\n        if(name === \"language\"){\n            setLanguage(value);\n        }\n    }\n    function handleUpdate() {\n        fetch(update_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                phone: phone,\n                emailID: emailID\n            })\n        }).then(res => res.json()).then(result=>{\n            setUser(result.dataset)\n        })\n    }\n    return (\n        <>\n        <UserContext.Provider  value={{\n            user, handleChange, handleUpdate, username, email, phone, picture, currency, time, language\n            }}>\n            {children}\n        </UserContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{UserProvider, UserContext}","/Users/ruichunchen/splitwise-app/frontend/src/contexts/groupContext.js",["279","280"],"import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst GroupContext = React.createContext()\n\nfunction GroupProvider({children}) {\n    const [groups, setGroups] = useState()\n\n    const getAll_URL= `${DB}/allGroup`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: localStorage.getItem(\"authID\")\n                })\n            }).then(res => res.json()).then(result=>{\n                setGroups(result.dataset)\n                console.log(\"this is a group context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n\n    // function handleUpdate() {\n    //     fetch(update_URL, {\n    //         method: 'post',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             username: username,\n    //             email: email,\n    //             phone: phone,\n    //             emailID: emailID\n    //         })\n    //     }).then(res => res.json()).then(result=>{\n    //         setUser(result.dataset)\n    //     })\n    // }\n    return (\n        <>\n        <GroupContext.Provider  value={{\n            groups\n            }}>\n            {children}\n        </GroupContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{GroupProvider, GroupContext}","/Users/ruichunchen/splitwise-app/frontend/src/contexts/activityContext.js",["281"],"import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst ActivityContext = React.createContext()\n\nfunction ActivityProvider({children}) {\n    const [activities, setActivities] = useState()\n\n    const getAll_URL= `${DB}/allActivity`\n    // const update_URL= `${DB}/update`\n    // const emailID = localStorage.getItem('authEmail');\n    // console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: localStorage.getItem(\"authID\")\n                })\n            }).then(res => res.json()).then(result=>{\n                setActivities(result.dataset)\n                console.log(\"this is a activity context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    return (\n        <>\n        <ActivityContext.Provider  value={{\n            activities\n            }}>\n            {children}\n        </ActivityContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{ActivityProvider, ActivityContext}","/Users/ruichunchen/splitwise-app/frontend/src/reducers/index.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/reducers/auth.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupPage.js",["282","283","284","285","286"],"import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../../images/signup.png'\nimport {DB} from '../../constants/DB'\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from './SignupForm'\nimport { connect } from 'react-redux'\nimport {userSignupRequest} from '../../actions/signupActions'\nimport PropTypes from 'prop-types'\n\nclass SignupPage extends Component {\n    static propTypes = {\n        userSignupRequest : PropTypes.func.isRequired\n    }\n    \n    render(){\n        // console.log();\n        return (\n            <Row>\n            <Col>\n                <img src={logo} style={{width: \"50%\", margin: \"auto\", display: \"block\", marginTop: \"100px\"}}/>\n            </Col>\n            <Col>\n                <SignupForm userSignupRequest={this.props.userSignupRequest}/>\n            </Col>\n        </Row>\n        )\n    }\n}\n\nexport default connect(null, {userSignupRequest})(SignupPage);","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupForm.js",["287","288"],"/Users/ruichunchen/splitwise-app/frontend/src/actions/signupActions.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginPage.js",["289"],"import React, { Component } from 'react'\nimport LoginForm from './LoginForm'\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\n\nexport default class LoginPage extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            display: 'none'\n        }\n        this.toggleDisplay = this.toggleDisplay.bind(this)\n\n    }\n\n    toggleDisplay(){\n        if(this.state.display === \"none\"){\n            this.setState({display: \"display\"})\n        }else{\n            this.setState({display: \"none\"})\n        }\n    }\n    render() {\n        return (\n            <>\n                <Button variant=\"primary\" onClick={this.toggleDisplay}>Sign In</Button>\n                <Application.Base display = {this.state.display}>\n                    <Application.Close toggleDisplay={this.toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n                    <LoginForm />\n                </Application.Base>\n            </>\n            \n        )\n    }\n}\n","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js",["290","291"],"import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {login} from '../../actions/loginActions.js'\n\nclass LoginForm extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            email: '',\n            psswd: '',\n            errors: {},\n            userInfo: ''\n        }\n    }\n    \n    static propTypes = {\n        login : PropTypes.func.isRequired\n    }\n\n    \n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        this.setState({error: {}})\n        e.preventDefault();\n        this.props.login(this.state).then(\n            // (res) => this.setState({response.data}),\n            (res) => console.log(\"success\"),//window.location.reload(false),\n            // (err) => this.setState({errors: err.response.data.errors})\n        )\n    }\n    render() {\n        const {errors} = this.state\n        if(errors.form){\n            alert(errors.form)\n        }\n        return (\n            <Form onSubmit={this.onSubmit} method=\"POST\">\n                <Form.Group controlId=\"formGridEmailLogin\">\n                    <Form.Label>Email: </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={this.state.email} onChange={this.onChange} required name=\"email\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">\n                We'll never share your info with anyone else.\n                </Form.Text>\n\n                <Form.Group controlId=\"formGridPasswordLogin\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange} required name=\"psswd\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">Haven't have account? \n                    <Button variant=\"link\">\n                            Sign me in!\n                    </Button>\n                </Form.Text>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        )\n    }\n}\nexport default  connect(null, {login})(LoginForm)","/Users/ruichunchen/splitwise-app/frontend/src/actions/loginActions.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/constants/constant.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/utils/validations/setAuthorizationToken.js",[],{"ruleId":"292","severity":1,"message":"293","line":11,"column":9,"nodeType":"294","messageId":"295","endLine":11,"endColumn":28},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"292","severity":1,"message":"300","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":24},{"ruleId":"292","severity":1,"message":"301","line":1,"column":26,"nodeType":"294","messageId":"295","endLine":1,"endColumn":35},{"ruleId":"292","severity":1,"message":"302","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":16},{"ruleId":"292","severity":1,"message":"303","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":24},{"ruleId":"304","severity":1,"message":"305","line":9,"column":5,"nodeType":"306","messageId":"307","endLine":11,"endColumn":6},{"ruleId":"292","severity":1,"message":"308","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":22},{"ruleId":"292","severity":1,"message":"309","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":18},{"ruleId":"292","severity":1,"message":"310","line":12,"column":19,"nodeType":"294","messageId":"295","endLine":12,"endColumn":27},{"ruleId":"292","severity":1,"message":"311","line":13,"column":22,"nodeType":"294","messageId":"295","endLine":13,"endColumn":33},{"ruleId":"292","severity":1,"message":"312","line":29,"column":20,"nodeType":"294","messageId":"295","endLine":29,"endColumn":32},{"ruleId":"292","severity":1,"message":"313","line":1,"column":25,"nodeType":"294","messageId":"295","endLine":1,"endColumn":35},{"ruleId":"292","severity":1,"message":"314","line":12,"column":12,"nodeType":"294","messageId":"295","endLine":12,"endColumn":17},{"ruleId":"292","severity":1,"message":"315","line":14,"column":12,"nodeType":"294","messageId":"295","endLine":14,"endColumn":19},{"ruleId":"292","severity":1,"message":"316","line":14,"column":20,"nodeType":"294","messageId":"295","endLine":14,"endColumn":30},{"ruleId":"317","severity":1,"message":"318","line":52,"column":17,"nodeType":"319","endLine":52,"endColumn":111},{"ruleId":"296","replacedBy":"320"},{"ruleId":"298","replacedBy":"321"},{"ruleId":"292","severity":1,"message":"300","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":24},{"ruleId":"292","severity":1,"message":"322","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"323","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":17},{"ruleId":"292","severity":1,"message":"324","line":8,"column":10,"nodeType":"294","messageId":"295","endLine":8,"endColumn":21},{"ruleId":"292","severity":1,"message":"325","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":27,"column":29,"nodeType":"319","endLine":27,"endColumn":68},{"ruleId":"292","severity":1,"message":"308","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":22},{"ruleId":"292","severity":1,"message":"326","line":2,"column":68,"nodeType":"294","messageId":"295","endLine":2,"endColumn":75},{"ruleId":"292","severity":1,"message":"327","line":12,"column":12,"nodeType":"294","messageId":"295","endLine":12,"endColumn":17},{"ruleId":"292","severity":1,"message":"328","line":12,"column":19,"nodeType":"294","messageId":"295","endLine":12,"endColumn":27},{"ruleId":"292","severity":1,"message":"329","line":19,"column":12,"nodeType":"294","messageId":"295","endLine":19,"endColumn":15},{"ruleId":"292","severity":1,"message":"330","line":19,"column":16,"nodeType":"294","messageId":"295","endLine":19,"endColumn":22},{"ruleId":"292","severity":1,"message":"331","line":20,"column":12,"nodeType":"294","messageId":"295","endLine":20,"endColumn":15},{"ruleId":"292","severity":1,"message":"332","line":20,"column":16,"nodeType":"294","messageId":"295","endLine":20,"endColumn":22},{"ruleId":"292","severity":1,"message":"333","line":21,"column":12,"nodeType":"294","messageId":"295","endLine":21,"endColumn":17},{"ruleId":"292","severity":1,"message":"334","line":21,"column":18,"nodeType":"294","messageId":"295","endLine":21,"endColumn":26},{"ruleId":"292","severity":1,"message":"335","line":24,"column":14,"nodeType":"294","messageId":"295","endLine":24,"endColumn":27},{"ruleId":"292","severity":1,"message":"336","line":34,"column":9,"nodeType":"294","messageId":"295","endLine":34,"endColumn":19},{"ruleId":"292","severity":1,"message":"337","line":36,"column":14,"nodeType":"294","messageId":"295","endLine":36,"endColumn":25},{"ruleId":"338","severity":1,"message":"339","line":75,"column":7,"nodeType":"340","endLine":75,"endColumn":9,"suggestions":"341"},{"ruleId":"342","severity":1,"message":"343","line":135,"column":28,"nodeType":"344","messageId":"345","endLine":135,"endColumn":30},{"ruleId":"342","severity":1,"message":"343","line":154,"column":28,"nodeType":"344","messageId":"345","endLine":154,"endColumn":30},{"ruleId":"292","severity":1,"message":"346","line":26,"column":11,"nodeType":"294","messageId":"295","endLine":26,"endColumn":18},{"ruleId":"338","severity":1,"message":"347","line":63,"column":7,"nodeType":"340","endLine":63,"endColumn":16,"suggestions":"348"},{"ruleId":"292","severity":1,"message":"301","line":1,"column":26,"nodeType":"294","messageId":"295","endLine":1,"endColumn":35},{"ruleId":"292","severity":1,"message":"349","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":15},{"ruleId":"292","severity":1,"message":"350","line":18,"column":12,"nodeType":"294","messageId":"295","endLine":18,"endColumn":17},{"ruleId":"292","severity":1,"message":"351","line":18,"column":19,"nodeType":"294","messageId":"295","endLine":18,"endColumn":27},{"ruleId":"292","severity":1,"message":"337","line":49,"column":14,"nodeType":"294","messageId":"295","endLine":49,"endColumn":25},{"ruleId":"292","severity":1,"message":"313","line":1,"column":25,"nodeType":"294","messageId":"295","endLine":1,"endColumn":35},{"ruleId":"292","severity":1,"message":"303","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"352","line":2,"column":28,"nodeType":"294","messageId":"295","endLine":2,"endColumn":33},{"ruleId":"292","severity":1,"message":"353","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":15},{"ruleId":"338","severity":1,"message":"354","line":39,"column":7,"nodeType":"340","endLine":39,"endColumn":9,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":42,"column":33,"nodeType":"358","messageId":"359","endLine":42,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":47,"column":32,"nodeType":"358","messageId":"359","endLine":47,"endColumn":34},{"ruleId":"292","severity":1,"message":"301","line":1,"column":37,"nodeType":"294","messageId":"295","endLine":1,"endColumn":46},{"ruleId":"292","severity":1,"message":"308","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":22},{"ruleId":"292","severity":1,"message":"360","line":2,"column":41,"nodeType":"294","messageId":"295","endLine":2,"endColumn":49},{"ruleId":"292","severity":1,"message":"353","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":15},{"ruleId":"292","severity":1,"message":"361","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":21},{"ruleId":"292","severity":1,"message":"362","line":17,"column":12,"nodeType":"294","messageId":"295","endLine":17,"endColumn":20},{"ruleId":"292","severity":1,"message":"363","line":17,"column":22,"nodeType":"294","messageId":"295","endLine":17,"endColumn":33},{"ruleId":"292","severity":1,"message":"364","line":19,"column":12,"nodeType":"294","messageId":"295","endLine":19,"endColumn":22},{"ruleId":"356","severity":1,"message":"357","line":31,"column":33,"nodeType":"358","messageId":"359","endLine":31,"endColumn":35},{"ruleId":"365","severity":1,"message":"366","line":85,"column":13,"nodeType":"319","endLine":85,"endColumn":25},{"ruleId":"292","severity":1,"message":"303","line":1,"column":10,"nodeType":"294","messageId":"295","endLine":1,"endColumn":16},{"ruleId":"292","severity":1,"message":"367","line":1,"column":24,"nodeType":"294","messageId":"295","endLine":1,"endColumn":27},{"ruleId":"292","severity":1,"message":"368","line":1,"column":29,"nodeType":"294","messageId":"295","endLine":1,"endColumn":32},{"ruleId":"317","severity":1,"message":"318","line":32,"column":9,"nodeType":"319","endLine":32,"endColumn":75},{"ruleId":"292","severity":1,"message":"301","line":1,"column":28,"nodeType":"294","messageId":"295","endLine":1,"endColumn":37},{"ruleId":"292","severity":1,"message":"308","line":2,"column":22,"nodeType":"294","messageId":"295","endLine":2,"endColumn":26},{"ruleId":"292","severity":1,"message":"369","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":12},{"ruleId":"292","severity":1,"message":"370","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":17},{"ruleId":"292","severity":1,"message":"371","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":17},{"ruleId":"292","severity":1,"message":"301","line":1,"column":28,"nodeType":"294","messageId":"295","endLine":1,"endColumn":37},{"ruleId":"292","severity":1,"message":"308","line":2,"column":22,"nodeType":"294","messageId":"295","endLine":2,"endColumn":26},{"ruleId":"292","severity":1,"message":"369","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":12},{"ruleId":"292","severity":1,"message":"370","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":17},{"ruleId":"292","severity":1,"message":"371","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":17},{"ruleId":"292","severity":1,"message":"372","line":2,"column":54,"nodeType":"294","messageId":"295","endLine":2,"endColumn":65},{"ruleId":"292","severity":1,"message":"373","line":19,"column":12,"nodeType":"294","messageId":"295","endLine":19,"endColumn":24},{"ruleId":"292","severity":1,"message":"374","line":19,"column":26,"nodeType":"294","messageId":"295","endLine":19,"endColumn":41},{"ruleId":"292","severity":1,"message":"375","line":20,"column":12,"nodeType":"294","messageId":"295","endLine":20,"endColumn":18},{"ruleId":"292","severity":1,"message":"376","line":20,"column":20,"nodeType":"294","messageId":"295","endLine":20,"endColumn":29},{"ruleId":"338","severity":1,"message":"377","line":39,"column":7,"nodeType":"340","endLine":39,"endColumn":9,"suggestions":"378"},{"ruleId":"292","severity":1,"message":"308","line":2,"column":22,"nodeType":"294","messageId":"295","endLine":2,"endColumn":26},{"ruleId":"292","severity":1,"message":"369","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":12},{"ruleId":"338","severity":1,"message":"379","line":31,"column":7,"nodeType":"340","endLine":31,"endColumn":17,"suggestions":"380"},{"ruleId":"292","severity":1,"message":"308","line":1,"column":25,"nodeType":"294","messageId":"295","endLine":1,"endColumn":29},{"ruleId":"292","severity":1,"message":"381","line":1,"column":31,"nodeType":"294","messageId":"295","endLine":1,"endColumn":41},{"ruleId":"292","severity":1,"message":"372","line":1,"column":43,"nodeType":"294","messageId":"295","endLine":1,"endColumn":54},{"ruleId":"292","severity":1,"message":"382","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":24},{"ruleId":"292","severity":1,"message":"383","line":2,"column":33,"nodeType":"294","messageId":"295","endLine":2,"endColumn":39},{"ruleId":"292","severity":1,"message":"384","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":13},{"ruleId":"292","severity":1,"message":"324","line":8,"column":9,"nodeType":"294","messageId":"295","endLine":8,"endColumn":20},{"ruleId":"292","severity":1,"message":"385","line":33,"column":15,"nodeType":"294","messageId":"295","endLine":33,"endColumn":22},{"ruleId":"386","severity":1,"message":"387","line":155,"column":25,"nodeType":"388","endLine":155,"endColumn":35},{"ruleId":"317","severity":1,"message":"318","line":182,"column":66,"nodeType":"319","endLine":182,"endColumn":107},{"ruleId":"292","severity":1,"message":"389","line":10,"column":21,"nodeType":"294","messageId":"295","endLine":10,"endColumn":31},{"ruleId":"338","severity":1,"message":"347","line":43,"column":7,"nodeType":"340","endLine":43,"endColumn":66,"suggestions":"390"},{"ruleId":"292","severity":1,"message":"336","line":9,"column":11,"nodeType":"294","messageId":"295","endLine":9,"endColumn":21},{"ruleId":"338","severity":1,"message":"391","line":31,"column":7,"nodeType":"340","endLine":31,"endColumn":9,"suggestions":"392"},{"ruleId":"338","severity":1,"message":"391","line":31,"column":7,"nodeType":"340","endLine":31,"endColumn":9,"suggestions":"393"},{"ruleId":"292","severity":1,"message":"303","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"308","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":22},{"ruleId":"292","severity":1,"message":"394","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":11},{"ruleId":"292","severity":1,"message":"395","line":5,"column":10,"nodeType":"294","messageId":"295","endLine":5,"endColumn":20},{"ruleId":"317","severity":1,"message":"318","line":21,"column":17,"nodeType":"319","endLine":21,"endColumn":111},{"ruleId":"292","severity":1,"message":"367","line":2,"column":24,"nodeType":"294","messageId":"295","endLine":2,"endColumn":27},{"ruleId":"292","severity":1,"message":"368","line":2,"column":29,"nodeType":"294","messageId":"295","endLine":2,"endColumn":32},{"ruleId":"292","severity":1,"message":"308","line":3,"column":18,"nodeType":"294","messageId":"295","endLine":3,"endColumn":22},{"ruleId":"292","severity":1,"message":"367","line":2,"column":24,"nodeType":"294","messageId":"295","endLine":2,"endColumn":27},{"ruleId":"292","severity":1,"message":"368","line":2,"column":29,"nodeType":"294","messageId":"295","endLine":2,"endColumn":32},"no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar","no-native-reassign",["396"],"no-negated-in-lhs",["397"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'LoginNav' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","'jwt_decode' is defined but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleSignin' is defined but never used.","'useContext' is defined but never used.","'error' is assigned a value but never used.","'disable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["396"],["397"],"'Navbar' is defined but never used.","'faTimes' is defined but never used.","'Application' is defined but never used.","'Signin' is defined but never used.","'Tooltip' is defined but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'one' is assigned a value but never used.","'setOne' is assigned a value but never used.","'two' is assigned a value but never used.","'setTwo' is assigned a value but never used.","'three' is assigned a value but never used.","'setThree' is assigned a value but never used.","'toggleDisplay' is defined but never used.","'update_URL' is assigned a value but never used.","'refreshPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userOwe', 'userOwe_URL', and 'user_URL'. Either include them or remove the dependency array.","ArrayExpression",["398"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'emailID' and 'getAll_URL'. Either include them or remove the dependency array.",["399"],"'faPen' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'Image' is defined but never used.","'DashNav' is defined but never used.","React Hook useEffect has a missing dependency: 'recent_URL'. Either include it or remove the dependency array.",["400"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Dropdown' is defined but never used.","'ActivityInput' is defined but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'activities' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Col' is defined but never used.","'Row' is defined but never used.","'logo' is defined but never used.","'category2' is defined but never used.","'category3' is defined but never used.","'FormControl' is defined but never used.","'currentGroup' is assigned a value but never used.","'setCurrentGroup' is assigned a value but never used.","'others' is assigned a value but never used.","'setOthers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'group_URL'. Either include it or remove the dependency array.",["401"],"React Hook useEffect has a missing dependency: 'calculate_URL'. Either include it or remove the dependency array.",["402"],"'InputGroup' is defined but never used.","'faList' is defined but never used.","'faUser' is defined but never used.","'axios' is defined but never used.","'expense' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'setPicture' is assigned a value but never used.",["403"],"React Hook useEffect has a missing dependency: 'getAll_URL'. Either include it or remove the dependency array.",["404"],["405"],"'DB' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"418","fix":"420"},"Update the dependencies array to be: [userOwe, userOwe_URL, user_URL]",{"range":"421","text":"422"},"Update the dependencies array to be: [emailID, getAll_URL, picture]",{"range":"423","text":"424"},"Update the dependencies array to be: [recent_URL]",{"range":"425","text":"426"},"Update the dependencies array to be: [group_URL]",{"range":"427","text":"428"},"Update the dependencies array to be: [calculate_URL, props.id]",{"range":"429","text":"430"},"Update the dependencies array to be: [username, email, phone, picture, currency, time, language, getAll_URL, emailID]",{"range":"431","text":"432"},"Update the dependencies array to be: [getAll_URL]",{"range":"433","text":"434"},{"range":"435","text":"434"},[2584,2586],"[userOwe, userOwe_URL, user_URL]",[2018,2027],"[emailID, getAll_URL, picture]",[1404,1406],"[recent_URL]",[1414,1416],"[group_URL]",[958,968],"[calculate_URL, props.id]",[1470,1529],"[username, email, phone, picture, currency, time, language, getAll_URL, emailID]",[994,996],"[getAll_URL]",[1029,1031]]