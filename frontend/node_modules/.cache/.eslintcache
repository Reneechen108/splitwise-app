[{"/Users/ruichunchen/splitwise-app/frontend/src/index.js":"1","/Users/ruichunchen/splitwise-app/frontend/src/App.js":"2","/Users/ruichunchen/splitwise-app/frontend/src/components/Header.js":"3","/Users/ruichunchen/splitwise-app/frontend/src/Routers/Routers.js":"4","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginNav.js":"5","/Users/ruichunchen/splitwise-app/frontend/src/pages/Home.js":"6","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard.js":"7","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js":"8","/Users/ruichunchen/splitwise-app/frontend/src/pages/Create.js":"9","/Users/ruichunchen/splitwise-app/frontend/src/pages/Activity.js":"10","/Users/ruichunchen/splitwise-app/frontend/src/pages/Expenses.js":"11","/Users/ruichunchen/splitwise-app/frontend/src/components/export.js":"12","/Users/ruichunchen/splitwise-app/frontend/src/components/Footer.js":"13","/Users/ruichunchen/splitwise-app/frontend/src/components/Picture.js":"14","/Users/ruichunchen/splitwise-app/frontend/src/components/CreateInput.js":"15","/Users/ruichunchen/splitwise-app/frontend/src/components/ActivityInput.js":"16","/Users/ruichunchen/splitwise-app/frontend/src/components/ExpenseInput.js":"17","/Users/ruichunchen/splitwise-app/frontend/src/pages/SingleExpense.js":"18","/Users/ruichunchen/splitwise-app/frontend/src/components/Balance.js":"19","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard/dashNav.js":"20","/Users/ruichunchen/splitwise-app/frontend/src/constants/DB.js":"21","/Users/ruichunchen/splitwise-app/frontend/src/components/application/applicaiton.js":"22","/Users/ruichunchen/splitwise-app/frontend/src/components/application/styles/style.js":"23","/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js":"24","/Users/ruichunchen/splitwise-app/frontend/src/contexts/groupContext.js":"25","/Users/ruichunchen/splitwise-app/frontend/src/contexts/activityContext.js":"26","/Users/ruichunchen/splitwise-app/frontend/src/reducers/index.js":"27","/Users/ruichunchen/splitwise-app/frontend/src/reducers/auth.js":"28","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupPage.js":"29","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupForm.js":"30","/Users/ruichunchen/splitwise-app/frontend/src/actions/signupActions.js":"31","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginPage.js":"32","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js":"33","/Users/ruichunchen/splitwise-app/frontend/src/actions/loginActions.js":"34","/Users/ruichunchen/splitwise-app/frontend/src/constants/constant.js":"35","/Users/ruichunchen/splitwise-app/frontend/src/utils/validations/setAuthorizationToken.js":"36"},{"size":1339,"mtime":1614763977615,"results":"37","hashOfConfig":"38"},{"size":1268,"mtime":1616040205190,"results":"39","hashOfConfig":"38"},{"size":1484,"mtime":1614839729926,"results":"40","hashOfConfig":"38"},{"size":1094,"mtime":1614841170047,"results":"41","hashOfConfig":"38"},{"size":1957,"mtime":1615177909215,"results":"42","hashOfConfig":"38"},{"size":1350,"mtime":1615013179614,"results":"43","hashOfConfig":"38"},{"size":7581,"mtime":1615908348839,"results":"44","hashOfConfig":"38"},{"size":8732,"mtime":1615295558549,"results":"45","hashOfConfig":"38"},{"size":4398,"mtime":1615962781379,"results":"46","hashOfConfig":"38"},{"size":1360,"mtime":1615187525303,"results":"47","hashOfConfig":"38"},{"size":6223,"mtime":1615906204747,"results":"48","hashOfConfig":"38"},{"size":65,"mtime":1613654470195,"results":"49","hashOfConfig":"38"},{"size":1493,"mtime":1614841009666,"results":"50","hashOfConfig":"38"},{"size":963,"mtime":1614147338676,"results":"51","hashOfConfig":"38"},{"size":2815,"mtime":1615905160452,"results":"52","hashOfConfig":"38"},{"size":2758,"mtime":1615186057862,"results":"53","hashOfConfig":"38"},{"size":2737,"mtime":1615174181926,"results":"54","hashOfConfig":"38"},{"size":5441,"mtime":1615259657783,"results":"55","hashOfConfig":"38"},{"size":1933,"mtime":1615345821471,"results":"56","hashOfConfig":"38"},{"size":6971,"mtime":1615962181811,"results":"57","hashOfConfig":"38"},{"size":98,"mtime":1615967307151,"results":"58","hashOfConfig":"38"},{"size":2522,"mtime":1614135919746,"results":"59","hashOfConfig":"38"},{"size":4316,"mtime":1614135892460,"results":"60","hashOfConfig":"38"},{"size":2719,"mtime":1615197390892,"results":"61","hashOfConfig":"38"},{"size":1217,"mtime":1615186646171,"results":"62","hashOfConfig":"38"},{"size":1262,"mtime":1615173164965,"results":"63","hashOfConfig":"38"},{"size":111,"mtime":1614739332300,"results":"64","hashOfConfig":"38"},{"size":825,"mtime":1614838604609,"results":"65","hashOfConfig":"38"},{"size":963,"mtime":1614744868678,"results":"66","hashOfConfig":"38"},{"size":3688,"mtime":1615961886311,"results":"67","hashOfConfig":"38"},{"size":661,"mtime":1614829820166,"results":"68","hashOfConfig":"38"},{"size":1163,"mtime":1614753730963,"results":"69","hashOfConfig":"38"},{"size":2409,"mtime":1615263800678,"results":"70","hashOfConfig":"38"},{"size":1181,"mtime":1615290018502,"results":"71","hashOfConfig":"38"},{"size":143,"mtime":1614829809449,"results":"72","hashOfConfig":"38"},{"size":281,"mtime":1614763957504,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"1tstxf3",{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"77"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"77"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"/Users/ruichunchen/splitwise-app/frontend/src/index.js",["167"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducers'\nimport logger from 'redux-logger'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport setAuthorizationToken from './utils/validations/setAuthorizationToken'\nimport jwtDecode from 'jwt-decode';\nimport {setCurrentUser} from './actions/loginActions'\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(thunk, logger))\n);\n\nif(localStorage.jwtToken){\n  setAuthorizationToken(localStorage.jwtToken)\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)))\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  \n  ,\n  document.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["168","169"],"/Users/ruichunchen/splitwise-app/frontend/src/App.js",["170","171","172"],"/Users/ruichunchen/splitwise-app/frontend/src/components/Header.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/Routers/Routers.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginNav.js",["173","174","175"],"import React, {Component} from 'react'\nimport { Navbar, Button, Nav, NavDropdown } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport {logout} from '../../actions/loginActions'\n\nclass LoginNav extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        logout: PropTypes.func.isRequired\n    }\n\n    logout = (e) => {\n        e.preventDefault()\n        this.props.logout()\n        window.location.replace(\"/home\");\n    }\n\n    profile = (e) => {\n        window.location.replace(\"/profile\");\n    }\n\n    render() {\n        console.log(\"this.props.auth\", this.props.auth);\n        return (\n        <>\n        <Navbar>\n            <Navbar.Brand href=\"/home\" style={{color: \"black\"}} className=\"col-md-9 col-sm-6\">\n            <img\n                alt=\"\"\n                src=\"../logo192.png\"\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n            />{' '}\n            Splitwise\n            {' '}\n            </Navbar.Brand>\n            <Nav className=\"justify-content-end\" activeKey=\"/home\">\n                <Nav.Item>\n                <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                </Nav.Item>\n                <NavDropdown title={this.props.auth.user.username} id=\"nav-dropdown\">\n                    <NavDropdown.Item eventKey=\"4.1\" onClick={this.profile}>Profile</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item eventKey=\"4.4\" onClick={this.logout}>Logout</NavDropdown.Item>\n                </NavDropdown>\n            </Nav>\n        </Navbar>\n        </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"state\", state);\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, {logout})(LoginNav)","/Users/ruichunchen/splitwise-app/frontend/src/pages/Home.js",["176","177","178"],"import React, {Component} from 'react'\nimport { Navbar, Jumbotron, Button, Row, Col } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport img from '../images/home.png'\nimport Footer from '../components/Footer'\nclass Home extends Component {\n\n    render(){\n        return (\n        <>\n        <Jumbotron style={{minHeight: \"450px\"}}>\n            <Row>\n                <Col sm={4}>\n                    <h1>Less stress when sharing expenses</h1>\n                    <p style={{paddingTop: \"4rem\", paddingBottom: \"4rem\"}}>\n                        Keep track of your shared expenses and balances with housemates, trips, groups, friends, and family.\n                    </p>\n                    <Button variant=\"primary\"><a href=\"/signup\" style={{textDecoration: \"none\", color: \"white\"}}>Sign Up</a></Button>\n                    <p></p>\n                    <h6>Free for iPhone <FontAwesomeIcon icon={faApple} />,Android <FontAwesomeIcon icon={faAndroid} />, and web.</h6>\n                </Col>\n                <Col sm={8}><img src={img} style={{width: \"100%\"}}></img></Col>\n            </Row>\n        </Jumbotron>\n        <Footer />\n        </>\n    )\n    }\n}\n\nexport default Home","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard.js",["179","180","181","182","183","184","185","186","187","188","189","190"],"import React, {useState,useEffect,useContext}from 'react'\nimport { Button, Form, Col, Row, Jumbotron, Container, Pagination, Tooltip, OverlayTrigger, Popover } from 'react-bootstrap';\nimport DashNav from '../pages/Dashboard/dashNav'\nimport {DB} from '../constants/DB'\nimport Expenses from './Expenses'\nimport {UserContext} from '../contexts/userContext'\nimport {GroupContext} from '../contexts/groupContext'\nimport Activity from '../pages/Activity'\nimport axios from 'axios'\nimport {ActivityContext} from '../contexts/activityContext'\n\nfunction Dashboard() {\n    let title = [\"total balance\", \"you owe\", \"you are owed\"]\n    const [group, setGroup] = useState()\n    const [expense, setExpense] = useState()\n    const [userOwed, setUserOwed] = useState()\n    const [userOwe, setUserOwe] = useState()\n    const {user} = useContext(UserContext);\n    const {groups} = useContext(GroupContext);\n    const [name,setName] = useState()\n    const [recentActivity,setRecentActivity] = useState()\n    const [picID,setPicID] = useState()\n    const [three,setThree] = useState(0)\n    const [display,setDisplay] = useState(\"display\")\n\n    const {activities} = useContext(ActivityContext)\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n\n    let user_URL = `${DB}/getInfo`\n    let userOwe_URL = `${DB}/getOweInfo`\n    let update_URL = `${DB}/updateExpenses`\n    \n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n    useEffect( ()=>{\n        let data = {ID: localStorage.getItem('authID')}\n        axios.post(user_URL,data)\n            .then(response => {\n                console.log(response);\n                if(response.status === 200){\n                    console.log(\"user owe: \", response.data.dataset);\n                    setUserOwed(response.data.dataset)\n                }\n            });  \n        axios.post(userOwe_URL,data)\n            .then(response => {\n                console.log(response);\n                if(response.status === 200){\n                    console.log(\"user owe: \", response.data.dataset);\n                    setUserOwe(response.data.dataset)\n                }\n            });   \n    },[])\n\n    const createItem= async(newItem) => {\n        console.log(\"!!!!!newItem\", newItem);\n        if(newItem.recent===\"recent\"){\n            setRecentActivity(true)\n        }else{\n            if(activities){\n                let expense = activities.filter(a => a.G_ID === newItem.ID)\n                console.log(\"expense!!!\", expense);\n                setExpense(expense)\n                setName(newItem.name)\n                // console.log(\"group name\", newItem.name);\n                setPicID(newItem.ID)\n                setRecentActivity(false)\n            }\n        }\n        setDisplay(\"none\")\n        // console.log(\"group name\", name);\n    }\n\n    function settleUp(){\n        console.log(\"click\");\n        let dateWithdate = {\n            ID: localStorage.getItem('authID'),\n            date: new Date().toISOString().slice(0, 19).replace('T', ' ')\n        }\n        axios.post(update_URL,dateWithdate)\n            .then(response => {\n                console.log(response);\n                if(response.status === 200){\n                    console.log(\"updated!\");\n                }\n                refreshPage();\n            });  \n    }\n\n    let groupInfoTwo = []\n    let groupInfoThree = []\n    let twoGroup = []\n    let threeGroup = []\n    let totalOwed = []\n\n    if(userOwed&&user&&groups&&userOwe){\n        console.log(\"userOwed\", userOwed);\n        console.log(\"userOwe\", userOwe);\n\n        let two = 0\n        let three = 0\n        userOwed.map((item, index) => {\n            threeGroup.push(\n                <>\n                <div key={index}>\n                    <img src={item.picture} alt=\"\" style={{width:\"30px\", height: \"30px\"}}/>    \n                    {item.username} owes you ${item.amount} for \"{item.description}\"\n                </div>\n                <p style={{borderBottom: \"1px solid black\", padding: \"3px\"}}/>\n                </>\n            )\n            three += item.amount;\n        })\n        console.log(\"inside\", userOwe);\n        userOwe.map((item, index) => {\n            twoGroup.push(\n                <>\n                <div key={index}>\n                    <img src={item.picture} alt=\"\" style={{width:\"30px\", height: \"30px\"}}/>    \n                    You owe {item.username} ${item.owe} for \"{item.description}\"\n                </div>\n                <p style={{borderBottom: \"1px solid black\", padding: \"3px\"}}/>\n                </>\n            )\n            two += item.owe;\n        })\n        groupInfoTwo.push(twoGroup)\n        groupInfoThree.push(threeGroup);\n        totalOwed.push(\n            <>\n                <Pagination.Item key={Math.random()} style={{width: \"250px\"}}>\n                    {title[0]}<br />$ {Number(three-two).toFixed(2)}\n                </Pagination.Item>\n                <Pagination.Item key={Math.random()} style={{width: \"250px\"}}>\n                    {title[1]}<br />$ {Number(two).toFixed(2)}\n                </Pagination.Item>\n                <Pagination.Item key={Math.random()} style={{width: \"250px\"}}>\n                    {title[2]}<br />$ {three}\n                </Pagination.Item>\n            </>\n        )\n    }\n\n    console.log(\"expense\",expense);\n    \n    let dashContent = recentActivity ? <Activity /> : (expense && expense.length>0 ? <Expenses id={expense[0].G_ID} name={name} key={Math.random()}/> : <Expenses no={\"No recent activity to show\"} id={picID} name={name} key={Math.random()}/> )\n\n    let content = display===\"display\" ? <>\n        <Col sm={9} style={{display:display}}>\n            <Row style={{height: \"194px\"}}>\n                <Jumbotron style={{padding: \"10px\", width: \"100%\"}}>\n                    <Container>\n                        <Row>   \n                            <Col sm={8} key=\"1\">\n                                <h1>Dashboard</h1>\n                            </Col>\n                            <Col key=\"2\">\n                                <Button variant=\"danger\" onClick={settleUp}>Settle up</Button>\n                            </Col>\n                            <Pagination size=\"lg\" style={{margin: \"0 auto\"}}>\n                                {totalOwed}\n                            </Pagination>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            </Row>\n            <Row style={{margin: \"0 auto\"}} className=\"justify-content-md-center\">\n                <h3 style={{width: \"300px\"}}>You owe</h3>\n                <h3>You are owed</h3>\n            </Row>\n            <Row className=\"justify-content-md-center\" style={{height: \"100%\"}}>\n                <Col style={{borderRight: \"1px solid black\", padding: 0}}>\n                    {twoGroup.length > 0 ? groupInfoTwo : \n                    <div style={{textAlign:\"center\"}}>\n                        No recent activity to show\n                    </div>}\n                </Col>\n                <Col className=\"ml-3\">\n                    {threeGroup.length > 0 ? groupInfoThree : \n                    <div style={{textAlign:\"center\"}}>\n                        No recent activity to show\n                    </div>}\n                </Col>\n            </Row>\n        </Col>\n    </> : dashContent\n    return (\n        <>\n        <Row>\n            <Col sm={3}>\n                <DashNav createItem={createItem} />\n            </Col>\n            {content}\n        </Row>\n         \n        </>\n    )\n}\n\nexport default Dashboard","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/Profile.js",["191","192"],"import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../../components/Picture'\nimport {DB} from '../../constants/DB'\nimport Application from '../../components/application/applicaiton'\nimport axios from 'axios';\nimport { useHistory} from 'react-router-dom';\n\nfunction Profile() {\n    const [user, setUser] = useState();\n\n    const [username, setUsername] = useState();\n    const [email, setEmail] = useState();\n    const [phone, setPhone] = useState();\n    const [picture, setPicture] = useState();\n    const [currency, setCurrency] = useState('USD');\n    const [time, setTime] = useState('GMT-1');\n    const [language, setLanguage] = useState('English');\n    const [display,setDisplay] = useState(\"none\")\n\n    const getAll_URL= `${DB}/getUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    const history = useHistory();\n\n    function setup() {\n        setUsername(user[0].username)\n        // localStorage.setItem('authUser', user[0].username);\n        setEmail(user[0].email)\n        setPhone(user[0].phone)\n    }\n\n    function toggleDisplay(){\n        if(display === \"none\"){\n            setDisplay(\"display\")\n            setup()\n        }\n        else\n            setDisplay(\"none\")\n    }\n\n    \n    useEffect( ()=>{\n        async function load(){\n            await fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(\"!!!!!!\",result.dataset);\n                setUser(result.dataset)\n            })\n        }\n        load()\n    },[picture])\n\n    function handleUpdate(){\n        toggleDisplay();\n        // console.log(username, email, phone);\n        let newInfo = {\n            username: username,\n            email: email,\n            phone: phone\n        }\n        // console.log(\"user[0]\", user[0]);\n        // console.log(\"newInfo\", newInfo);\n        Object.assign(user[0], newInfo)\n    }\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        // console.log(value, name);\n        setup()\n        if(name === \"currency\"){\n            user[0].currency = value\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            user[0].time = value\n            setTime(value);\n        }\n        if(name === \"language\"){\n            user[0].language = value\n            setLanguage(value);\n        }\n    }\n    async function updateAll(){\n        // console.log(\"ALL INFO: \", username, email, picture, phone, currency, time, language);\n        const formData = new FormData();\n        formData.append('username', username);\n        formData.append('email', email);\n        formData.append('picture', picture);\n        formData.append('phone', phone);\n        formData.append('currency', currency);\n        formData.append('time', time);\n        formData.append('language', language);\n        formData.append('emailID', emailID);\n        formData.append('upload','user');\n        axios({\n            method: \"POST\",\n            url: update_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        setTimeout(refreshPage, 1000);\n    }\n        \n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    let title = [\"username\", \"email\", \"phone\"]\n    let items = [];\n    if(user){\n        for (let number = 0; number < 3; number++) {\n            items.push(\n                <>\n                <Form.Label key={Math.random()}>\n                    {'Your ' +title[number]}\n                    <Button variant=\"link\" onClick={toggleDisplay} key={Math.random()}><FontAwesomeIcon icon={faPen} />Edit</Button><br />\n                    <div data-testid=\"name-input-box\">{user[0][title[number]]}</div>\n                </Form.Label>\n                <br />\n                </>\n            );\n        }\n    }\n    \n\n    let currencies = []\n    let times = []\n    let languages= []\n    currencies = ['USD', 'CNY', 'KWD', 'BHD', 'GBP', 'EUR', 'CAD'];\n    currencies = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    times = [\"(GMT-08:00) Pacific Time (US & Canada)\", \"(GMT-09:00) Alaska\", \"(GMT-10:00) Hawaii\", '(GMT-11:00) Midway Island, Samoa', '(GMT-12:00) International Date Line West'];\n    times = times.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n    languages = ['English', 'Chinese', 'Cambodian', 'Basque', 'French' ];\n    languages = languages.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        setEmail(emailID)\n        setup()\n        console.log(newItem.image);\n        // console.log(\"inside createItem\");\n    }\n    \n    if(user){\n        // console.log(\"user[0].picture\",user[0].picture);\n        const Oldpicture = user[0].picture ? <Picture createItem={createItem} old={user[0].picture}/> : <Picture createItem={createItem} />\n        localStorage.setItem('authUser', user[0].username);\n        return (\n        <>\n        <Row className=\"justify-content-md-center\">\n            <Col sm={2}>\n                {Oldpicture}\n            </Col>\n            <Col sm={2}>\n                <Form.Group>\n                    {items}\n                </Form.Group>\n            </Col>\n            <Col sm={2}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\" key=\"currency\">\n                    <label htmlFor=\"currency\">Your default currency</label>\n                    <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        value={user[0].currency}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {currencies}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect2\" key=\"time\">\n                    <label htmlFor=\"time\">Your time zone</label>\n                    <select\n                        name=\"time\"\n                        id=\"time\"\n                        value={user[0].time}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {times}\n                    </select>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect3\" key=\"language\">\n                    <label htmlFor=\"language\">Language</label>\n                    <select\n                        name=\"language\"\n                        id=\"language\"\n                        value={user[0].language}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {languages}\n                    </select>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Button variant=\"danger\" style={{float:\"right\"}} onClick={updateAll}>Save</Button>\n\n        <Application.Base display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Form key=\"form\">\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={email} onChange={({ target }) => setEmail(target.value)}/>\n                </Form.Group>\n\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control type=\"tel\" value={phone} onChange={({ target }) => setPhone(target.value)}/>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Form>\n        </Application.Base> \n        </>\n    )\n    }else{\n        return <div>Loading...</div>\n    }\n    \n}\n\nexport default Profile","/Users/ruichunchen/splitwise-app/frontend/src/pages/Create.js",["193","194","195","196"],"import React, {useState, useContext} from 'react'\nimport { Button, Form, Col, Row, InputGroup, FormControl } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Picture from '../components/Picture'\nimport CreateInput from '../components/CreateInput'\nimport { Application } from '../components/export';\nimport {DB} from '../constants/DB'\nimport axios from 'axios';\n\nfunction Create(props) {\n   \n    const [display,setDisplay] = useState(\"none\")\n    const [picture,setPicture] = useState()\n    const [group, setGroup] = useState()\n    const [number, setNumber] = useState(0)\n    const [users, setUsers] = useState()\n    const [input, setInput] = useState()\n\n    const create_URL = `${DB}/update`\n    let items = []\n    let userList = []\n\n    const handleSearch = (newItem) => {\n        console.log(\"newItem\", newItem);\n        userList.push(newItem)\n    }\n\n    for (let i = 0; i < number; i++) {\n        items.push(\n            <>\n            <div style={{display: \"flex\"}} key={i}>\n                <CreateInput createItem={handleSearch}/>\n                <FontAwesomeIcon icon={faTimes} onClick={() => setNumber(number-1)}></FontAwesomeIcon>\n            </div>\n            </>\n        );\n    }\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        console.log(\"inside createItem\");\n    }\n\n    async function allUser(){\n        let current = localStorage.getItem('authID')\n        let members = []\n        userList.map(u => members.push(u.ID))\n        members.push(parseInt(current))\n        setUsers(members)\n        console.log(picture, group, members);\n        const formData = new FormData();\n        formData.append('name', group);\n        formData.append('users', members);\n        formData.append('upload','group');\n        formData.append('picture', picture);\n        axios({\n            method: \"POST\",\n            url: create_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n        .then(response => {\n            if(response.data.success)\n                setTimeout(refreshPage, 1000);\n        })\n        .catch(err => {\n            alert(err.response.data.error);\n        })\n    //    setTimeout(refreshPage, 1000);\n    }\n        \n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    function search(e){\n        setInput(e.target.value)\n        props.search({value: e.target.value})\n    }\n\n    return (\n        <>\n        <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Search for group\"\n                aria-label=\"groups\"\n                aria-describedby=\"basic-addon2\"\n                onChange={search}\n                value={input}\n                data-testid=\"name-input-box\"\n                />\n                <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={toggleDisplay}>+ add</Button>\n                </InputGroup.Append>\n        </InputGroup>\n        <Application.Group display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Row className=\"justify-content-md-center\">\n                <Col sm={4}>\n                    <Picture createItem={createItem}/>\n                </Col>\n                <Col sm={8}>\n                    <h4>START A NEW GROUP</h4>\n                    <h6>My group shall be called...</h6>\n                    <Form.Control type=\"text\" placeholder=\"Enter group name\" onChange={({target}) => setGroup(target.value)} />\n                    <h4>GROUP MEMBERS</h4>\n                    {items}\n                    {/* {console.log(\"here\", items)} */}\n                    <Button variant=\"link\" onClick={() => setNumber(number+1)}>+ Add a person</Button>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Button variant=\"danger\" onClick={allUser}>Save</Button>\n            </Row>\n        </Application.Group>  \n        </>\n    )\n}\n\nexport default Create","/Users/ruichunchen/splitwise-app/frontend/src/pages/Activity.js",["197","198","199","200","201"],"import React, {useState,useContext,useEffect}from 'react'\nimport { Button, Col, Row, Image, Jumbotron, Container } from 'react-bootstrap';\nimport ActivityInput from '../components/ActivityInput'\nimport {ActivityContext} from '../contexts/activityContext'\n\nfunction Activity() {\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    \n    let expenseList = [];\n    const {activities} = useContext(ActivityContext)\n\n    if(activities){\n        activities.map((item, index) => {\n            expenseList.push(<ActivityInput value={item} key={index} />)\n        });\n    }\n\n    console.log(\"expenseList\", expenseList);\n    expenseList.sort((a, b) => (a.props.value.date > b.props.value.date) ? -1 : 1)\n\n    return (\n        <>\n        <Col sm={6}>\n            <Jumbotron style={{padding: \"10px\"}}>\n                <Container>\n                    <Row>   \n                        <h3>Recent Activity</h3>\n                    </Row>\n                    <Row>\n                        <h6>{monthNames[new Date().getMonth()]} {new Date().getFullYear()}</h6>\n                    </Row>\n                </Container>\n            </Jumbotron>\n            <Row>\n                {expenseList}\n            </Row>\n        </Col>\n        </>\n    )\n}\n\nexport default Activity","/Users/ruichunchen/splitwise-app/frontend/src/pages/Expenses.js",["202","203","204","205","206","207","208","209"],"import React, {useState,useContext, useEffect}from 'react'\nimport { Button, Form, Col, Row, Image, Dropdown, Jumbotron, Container } from 'react-bootstrap';\nimport ActivityInput from '../components/ActivityInput'\nimport Balance from '../components/Balance'\nimport SingleExpense from '../pages/SingleExpense'\nimport logo from '../images/signup.png'\nimport {DB, DB_PIC} from '../constants/DB'\nimport {ActivityContext} from '../contexts/activityContext'\nimport {GroupContext} from '../contexts/groupContext'\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Application } from '../components/export';\nimport Picture from '../components/Picture'\nimport axios from 'axios';\n\nfunction Expenses(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n\n    const [display,setDisplay] = useState(\"none\")\n    const [picture,setPicture] = useState()\n    const [name,setName] = useState()\n    const [change,setChange] = useState()\n    const [userInfo, setUserInfo] = useState()\n\n    const {activities} = useContext(ActivityContext)\n    const {groups} = useContext(GroupContext)\n    \n    const leave_URL = `${DB}/reject`\n    const update_URL= `${DB}/update`\n    \n    let pic = `${DB_PIC}/${props.id}/profile.png`\n    let expenseList = [];\n    \n    if(activities && groups){\n        if(props.no){\n            expenseList.push(<div>{props.no}</div>)\n        }else{\n            let activity = activities.filter(a=> a.G_ID === props.id)\n            activity.map((item, index) => {\n                expenseList.push(<ActivityInput value={item} key={index} />)\n            });\n        }\n    }\n\n    expenseList.sort((a, b) => (a.props.value.date > b.props.value.date) ? -1 : 1)\n    \n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    function leave(){\n        const calculate_URL = `${DB}/calculate`\n        fetch(calculate_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: props.id\n            })\n        }).then(res => res.json()).then(result=>{\n            let user = result.dataset.filter(u=> u.user === localStorage.getItem('authID'))\n            if(user[0].total === 0){\n                console.log(\"leave\");\n                fetch(leave_URL, {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        name: props.name,\n                        member: localStorage.getItem('authID')\n                    })\n                }).then(res => res.json()).then(result=>{\n                    console.log(result.dataset);\n                    setTimeout(refreshPage, 1000)\n                })\n            }else{\n                alert(\"You should pay off all/get pack all the expenses before you leave the group!\")\n            }\n        })\n    }\n\n    function toggleDisplay(){\n        if(display === \"none\")\n            setDisplay(\"display\")\n        else\n            setDisplay(\"none\")\n    }\n\n    const createItem= async(newItem) => {\n        setPicture(newItem.image)\n        console.log(\"inside createItem\");\n    }\n\n    async function update(){\n        const formData = new FormData();\n        formData.append('name', change);\n        formData.append('id', props.id);\n        formData.append('update', 'update');\n        formData.append('upload','group');\n        formData.append('picture', picture);\n        axios({\n            method: \"POST\",\n            url: update_URL,\n            data: formData,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        }).then(response => {\n            console.log(\"response\", response);\n            setTimeout(refreshPage, 1000);\n        });\n    }\n\n    console.log(\"props name\", props.name);\n    return (\n        <>\n        <Col sm={6}>\n            <Jumbotron style={{padding: \"10px\"}}>\n                    <Container>\n                        <Row>   \n                            {console.log(\"picture\", pic)}\n                            <Image src={pic ? pic : logo} style={{width: \"50px\",height: \"50px\"}} />\n                            <h3>{props.name} Expenses</h3>\n                            <SingleExpense />\n                            <Button variant=\"secondary\" className=\"ml-3\" onClick={leave}>\n                                Leave Group\n                            </Button>\n                        </Row>\n                        <Row>\n                            <h6>{monthNames[new Date().getMonth()]} {new Date().getFullYear()}</h6>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            <Row>\n                {expenseList}\n            </Row>\n        </Col>\n        <Col sm={3}>\n            <h4>GROUP BALANCES</h4>\n            <Balance id={props.id} key={Math.random()}/>\n            <Button variant=\"link\" className=\"ml-3\" onClick={toggleDisplay}>\n                Edit...\n            </Button>\n        </Col>\n        <Application.Group display = {display}>\n            <Application.Close toggleDisplay={toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n            <Row className=\"justify-content-md-center\">\n                <Col sm={4}>\n                    <Picture createItem={createItem} old={pic}/>\n                </Col>\n                <Col sm={8}>\n                    <h4>Change Group Information</h4>\n                    <h6>My new group name shall be called...</h6>\n                    <Form.Control type=\"text\" placeholder={props.name} onChange={({target}) => setChange(target.value)}/>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Button variant=\"danger\" onClick={update}>Save</Button>\n            </Row>\n        </Application.Group>  \n        </>\n    )\n}\n\nexport default Expenses","/Users/ruichunchen/splitwise-app/frontend/src/components/export.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/Footer.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/Picture.js",["210","211","212","213"],"import { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../images/signup.png'\n\nconst React = require('react')\n\nclass Picture extends React.Component {\n  constructor(props){\n    super(props)\n    if(props.old){\n        this.state = {\n            file: props.old\n        }\n    }else{\n        this.state = {\n            file: logo\n        }\n    }\n    \n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event) {\n    this.setState({\n      file: URL.createObjectURL(event.target.files[0])\n    })\n    this.props.createItem({\n        image: event.target.files[0]\n    });\n  }\n  render() {\n    return (\n      <>\n        <img src={this.state.file} style={{width: \"50%\", height: \"50%\"}}/>\n        <p></p>\n        <div className=\"mb-3\">\n            <Form.File id=\"formcheck-api-regular\">\n            <Form.File.Input onChange={this.handleChange}/>\n            </Form.File>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Picture\n","/Users/ruichunchen/splitwise-app/frontend/src/components/CreateInput.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/ActivityInput.js",["214","215","216","217","218"],"import React, {useContext, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/signup.png'\nimport category1 from '../images/shopping.png'\nimport category2 from '../images/daliy.png'\nimport category3 from '../images/form.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport { UserContext } from '../contexts/userContext'\nimport { GroupContext } from '../contexts/groupContext'\n\nfunction ActivityInput(props) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const {user} = useContext(UserContext)\n    const {groups} = useContext(GroupContext)\n    let month\n    let data\n    let currentInfo\n    let groupName\n    if(props.value && user){\n        console.log(\"props.value\", props.value);\n        month = monthNames[parseInt(props.value.date.substring(5, 7))-1].substring(0,3)\n        data = props.value.date.substring(8, 10)\n        if(props.value.action === \"paid\"){\n            currentInfo = <h6>{props.value.hostname} get back USD ${Number(props.value.amount).toFixed(2)}</h6>\n        }else{\n            let name = props.value.username === localStorage.getItem('authUser') ? \"You\" : \n            props.value.username;\n            currentInfo = <h6 style={{color:\"red\"}}>{name} owes USD ${Number(props.value.amount).toFixed(2)}</h6>\n        }\n        groupName = groups.filter(g => g.G_ID===props.value.G_ID)\n    }\n    return (\n        <>\n            {/* {date}  */}\n        <Col>\n            <Row>\n                <Col sm={1}>\n                    <Image src={category1} style={{width: \"50px\"}} rounded />\n                    <Image src={props.value.action === \"create\" ? props.value.hostpic : props.value.userpic} style={{width: \"30px\", height: \"30px\", position: \"absolute\", top: \"1.5em\", left: \"3em\"}} roundedCircle/>\n                </Col>\n                <Col sm={9}>\n                    <h4 style={{paddingTop: \"6px\", marginLeft: \"10px\"}}> {props.value.action === \"create\" ? (props.value.hostname===localStorage.getItem('authUser') ? \"You add\" : props.value.hostname + \" add\" ) : (props.value.username===localStorage.getItem('authUser') ? \"You update\" : props.value.username + \" update\")} \"{props.value.description}\" in \"{groupName.length>0 ? groupName[0].name : null}\"<FontAwesomeIcon icon={faCamera} /></h4>\n                    {currentInfo}\n                </Col>\n                <Col>\n                <p>{month} {data}</p>\n                </Col>\n            </Row>\n        </Col>\n        <p style={{border: \"1px solid black\", width: \"100%\"}}></p>\n        </>\n    )\n}\n\nexport default ActivityInput","/Users/ruichunchen/splitwise-app/frontend/src/components/ExpenseInput.js",["219","220","221","222","223"],"/Users/ruichunchen/splitwise-app/frontend/src/pages/SingleExpense.js",["224","225","226","227","228","229"],"import React, { useState, useEffect } from 'react'\nimport { Modal, Button, Image, Row, Col, InputGroup, FormControl, Form} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport category1 from '../images/form.png'\nimport {DB} from '../constants/DB'\n\nfunction SingleExpense() {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const group_URL = `${DB}/getGroup`\n    const addExpenses_URL = `${DB}/addExpenses`\n    const [groups,setGroups] = useState();\n    const [input, setInput] = useState();\n    const [description, setDescription] = useState()\n    const [money, setMoney] = useState();\n    const [currentGroup, setCurrentGroup] = useState()\n    const [others, setOthers] = useState()\n\n    useEffect( ()=>{\n        try{\n            fetch(group_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: localStorage.getItem('authID')\n                })\n            }).then(res => res.json()).then(result=>{\n                setGroups(result.dataset)\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    function handleSubmit() {\n        try{\n            fetch(addExpenses_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: document.getElementById(\"groupName\").innerHTML,\n                    host: localStorage.getItem('authID'),\n                    date: new Date().toISOString().slice(0, 19).replace('T', ' '),\n                    description: description,\n                    expense: money\n                })\n            }).then(res => res.json()).then(result=>{\n                console.log(result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n        handleClose();\n        setTimeout(refreshPage, 1000);\n    }\n        \n    function refreshPage() {\n        window.location.reload(false);\n    }\n    \n    let searchGroup = ''\n    let newG\n    \n    function cancel(){\n        console.log(\"click\");\n        searchGroup = <Row style={{borderBottom: \"1px solid black\"}}>\n            With you and: <Form.Control type=\"text\" placeholder=\"Enter group name\" onChange={({ target }) => setInput(target.value)}  value={input} name=\"group\" style={{width: \"70%\", marginLeft: \"20px\"}}/>\n        </Row>\n        setInput('')\n    }\n\n    if(groups){\n        console.log(groups);\n        newG = groups.filter((g) => (g.name === input && g.invitation===1))\n        searchGroup = newG[0] ? \n        <>\n        <Row>\n            Group name: \n            <Col sm={2}>\n                <Image src={newG[0].picture} roundedCircle style={{width: \"30px\", height: \"30px\"}}/>\n            </Col>\n            <div style={{width: \"100px\"}} id=\"groupName\">{newG[0].name}</div>\n            <FontAwesomeIcon icon={faTimes} onClick={cancel}/>\n        </Row>\n        </> \n        : \n        <Row style={{borderBottom: \"1px solid black\"}}>\n            With you and: <Form.Control type=\"text\" placeholder=\"Enter group name\" onChange={({ target }) => setInput(target.value)}  value={input} name=\"group\" style={{width: \"70%\", marginLeft: \"20px\"}}/>\n        </Row>\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow} className=\"ml-3\">\n                Add Expense\n            </Button>\n\n            <Modal show={show} onHide={handleClose} >\n                <Modal.Header closeButton>\n                <Modal.Title>Add an expense</Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{ height: \"300px\" }}>\n                    {searchGroup}\n                    <p></p>\n                    <Row>\n                        <Col md={3}>\n                            <Image src={category1} style={{width: \"100px\"}} rounded />\n                        </Col>\n                        <Col md={7}>\n                            <InputGroup className=\"mb-3\">\n                                <Form.Control type=\"text\" placeholder=\"Enter Description\" value={description} onChange={({ target }) => setDescription(target.value)} required/>\n                            </InputGroup>\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                <InputGroup.Text>$</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control type=\"number\" placeholder=\"Amount (to the nearest dollar)\" value={money} onChange={({ target }) => setMoney(target.value)} required/>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={handleSubmit}>\n                    Save\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default SingleExpense;","/Users/ruichunchen/splitwise-app/frontend/src/components/Balance.js",["230","231","232"],"import React, {useState, useEffect} from 'react'\nimport { Row, Image, Form, Col } from 'react-bootstrap';\nimport logo from '../images/form.png'\nimport {DB} from '../constants/DB'\n\nfunction Balance(props) {\n    console.log(\"balance\", props.id);\n    const [userInfo, setUserInfo] = useState()\n\n    const calculate_URL = `${DB}/calculate`\n    useEffect( ()=>{\n        try{\n            fetch(calculate_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: props.id\n                })\n            }).then(res => res.json()).then(result=>{\n                // setUser(result.dataset)\n                setUserInfo(result.dataset)\n                console.log(\"calculate: \",result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[props.id])\n\n    let userTotal;\n    if(userInfo){\n        userTotal = userInfo.map((info, index) => <>\n        <Row key={Math.random()}>\n            <Col md={3} key={Math.random()}>\n            <Image src={info.picture} roundedCircle style={{width: \"40px\", height: \"40px\"}}/>\n            </Col>\n            <Col key={Math.random()}>\n                <Row key={Math.random()}>\n                    <h5>{info.username}</h5>\n                </Row>\n                <Row key={Math.random()}>\n                    {\n                    info.total > 0 ?\n                    <h6><span>owes</span> USD ${Number(info.total).toFixed(2)}</h6> : <h6><span>gets back</span> USD ${Number(-info.total).toFixed(2)}</h6>\n                    }\n                </Row>\n            </Col>\n        </Row>\n        </>)\n        return (\n        <>    \n        {userTotal}\n        </>\n        )\n    }else{\n        return(<div>Waiting for calculation...</div>)\n    }\n        \n    \n}\n\nexport default Balance","/Users/ruichunchen/splitwise-app/frontend/src/pages/Dashboard/dashNav.js",["233","234","235","236","237","238","239","240","241"],"import { Modal, Button, Form, InputGroup, FormControl,Row } from 'react-bootstrap';\nimport { faFlag, faList, faTag, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios';\nimport logo from '../../images/signup.png'\nimport Create from '../Create'\nimport {DB} from '../../constants/DB'\nimport {Application} from '../../components/export'\n\nconst React = require('react')\n\nclass DashNav extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            groups: '',\n            currentGroup: '',\n            show: false,\n            item: '',\n            found: '',\n            allGroups: ''\n        }\n        this.getGroup = this.getGroup.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleAccept = this.handleAccept.bind(this)\n        this.handlReject = this.handlReject.bind(this)\n        this.search = this.search.bind(this)\n        this.recent = this.recent.bind(this)\n    }\n    \n    componentDidMount(){\n        let group_URL = `${DB}/getGroup`\n        // const expense = '/expense'\n        fetch(group_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: localStorage.getItem('authID')\n            })\n        }).then(res => res.json()).then(result=>{\n            console.log(\"result.dataset: \", result.dataset);\n            this.setState({\n                allGroups: result.dataset,\n                groups: result.dataset\n            })\n        })\n    }\n    getGroup(event) {\n        let text = event.target.innerText;\n        let currentGroup = this.state.allGroups.filter((g) => g.name === text)\n        this.props.createItem({\n            ID: currentGroup[0].id,\n            allGroup: this.state.allGroups,\n            name: currentGroup[0].name,\n            recent: ''\n        });\n        console.log(\"inside getGroup\", currentGroup[0].id);\n    }   \n\n    handleAccept(e){\n        console.log(e.target.id);\n        console.log(\"accpet this invitation\");\n        let accept_URL = `${DB}/accpet`\n        fetch(accept_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: e.target.id,\n                user: parseInt(localStorage.getItem('authID'))\n            })\n        }).then(res => res.json()).then(result=>{\n            // console.log(\"result.dataset: \", result.dataset);\n            if(result.success){\n                alert(\"Accept invitation from \", e.target.id)\n                window.location.reload(false);\n            }\n        })\n        this.setState({show: false})\n    }\n\n    handlReject(e){\n        console.log(e.target.id);\n        console.log(\"reject this invitation\");\n        let accept_URL = `${DB}/reject`\n        fetch(accept_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: e.target.id,\n                member: parseInt(localStorage.getItem('authID'))\n            })\n        }).then(res => res.json()).then(result=>{\n            // console.log(\"result.dataset: \", result.dataset);\n            if(result.success){\n                alert(\"Reject invitation from \", e.target.id)\n                window.location.reload(false);\n            }\n        })\n        this.setState({show: false})\n    }\n\n    handleClose () {\n        this.setState({show:false})\n    }\n\n    search = async(newItem) => {\n        let searchGroup = []\n        searchGroup = this.state.allGroups.filter(g => g.name === newItem.value)\n        console.log(\"searchGroup\", searchGroup);\n        if(searchGroup.length > 0)\n            this.setState({groups: searchGroup, found: 'found'})\n        if(newItem.value===\"\"){\n            this.setState({groups: this.state.allGroups, found: 'found'})\n            console.log(\"here\");\n        }\n        console.log(\"this.state.groups\", this.state.groups);\n    }\n    \n    recent(){\n        this.props.createItem({\n            recent: \"recent\",\n            id: ''\n        });\n    }\n    \n    render(){\n        let displayGroup = this.state.groups ? this.state.groups.map((item, index) => \n        item.invitation === 1 ?\n        <li className=\"list-group-item\" key={index}>\n        <Button variant=\"link\" style={{padding: \"0px\"}} onClick={this.getGroup}><FontAwesomeIcon icon={faTag} /><strong>{item.name}</strong></Button>\n        </li> : null) \n        : \n        null\n        let invitation =[]\n        let itemList = []\n        let count = 0\n        invitation = this.state.groups ? \n            <>\n        <Modal show={this.state.show} onHide={this.handleClose} >\n            <Modal.Header closeButton>\n            <Modal.Title>Invitation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ height: \"300px\" }}>\n                {\n                this.state.groups.forEach((item, index) => {\n                    if(item.invitation!==1 && parseInt(item.rejection)===0){\n                        this.state.show = true\n                        itemList.push(\n                            <>\n                            <Row key={index}>\n                                <h5>Having a invitation from \"{item.name}\"</h5>\n                                <Button variant=\"success\" id={item.name} onClick={this.handleAccept}>accpet</Button >\n                                <Button variant=\"danger\" className=\"ml-3\" id={item.name} onClick={this.handlReject}>reject</Button >\n                            </Row>\n                            <p></p>\n                            </>\n                        )\n                    }else{\n                        count +=1;\n                    }\n                })\n                }\n                {count === this.state.groups.length ? <h5>There are no new invitation</h5> : null}\n                {itemList}\n            </Modal.Body>\n            <Modal.Footer>\n            </Modal.Footer>\n        </Modal>\n            </> : null;\n\n        return (\n        <>\n        <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\" key={Math.random()}><a href=\"/dashboard\"><img src={logo} style={{width: \"30px\"}}/><strong style={{color: \"green\"}}>Dashboard</strong></a></li>\n            <li className=\"list-group-item\" key={Math.random()}><Button variant=\"link\" onClick={this.recent}><FontAwesomeIcon icon={faFlag} /><strong> Recent activity</strong></Button></li>\n            <Create search={this.search}/>\n            {displayGroup && displayGroup.length > 0 ? displayGroup : this.state.found}\n            {invitation}\n        </ul>\n        </>\n    );\n  }\n}\n\nexport default DashNav","/Users/ruichunchen/splitwise-app/frontend/src/constants/DB.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/application/applicaiton.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/components/application/styles/style.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/contexts/userContext.js",["242","243"],"import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst UserContext = React.createContext()\n\nfunction UserProvider({children}) {\n    const [user, setUser] = useState()\n    const [username,setUsername] = useState()\n    const [email,setEmail] = useState()\n    const [phone, setPhone] = useState()\n    const [picture, setPicture] = useState();\n    const [currency,setCurrency] = useState()\n    const [time,setTime] = useState()\n    const [language,setLanguage] = useState()\n\n    const getAll_URL= `${DB}/searchUser`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    // console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    email: emailID\n                })\n            }).then(res => res.json()).then(result=>{\n                setUser(result.dataset)\n                console.log(\"this is a user context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[username, email, phone, picture, currency, time, language])\n\n    function handleChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.log(value, name);\n        if(name === \"username\"){\n            setUsername(value);\n        }\n        if(name === \"email\"){\n            setEmail(value);\n        }\n        if(name === \"phone\"){\n            setPhone(value);\n        }\n        if(name === \"currency\"){\n            setCurrency(value);\n        }\n        if(name === \"time\"){\n            setTime(value);\n        }\n        if(name === \"language\"){\n            setLanguage(value);\n        }\n    }\n    function handleUpdate() {\n        fetch(update_URL, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                phone: phone,\n                emailID: emailID\n            })\n        }).then(res => res.json()).then(result=>{\n            setUser(result.dataset)\n        })\n    }\n    return (\n        <>\n        <UserContext.Provider  value={{\n            user, handleChange, handleUpdate, username, email, phone, picture, currency, time, language\n            }}>\n            {children}\n        </UserContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{UserProvider, UserContext}","/Users/ruichunchen/splitwise-app/frontend/src/contexts/groupContext.js",["244","245"],"import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst GroupContext = React.createContext()\n\nfunction GroupProvider({children}) {\n    const [groups, setGroups] = useState()\n\n    const getAll_URL= `${DB}/allGroup`\n    const update_URL= `${DB}/update`\n    const emailID = localStorage.getItem('authEmail');\n    console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id: localStorage.getItem(\"authID\")\n                })\n            }).then(res => res.json()).then(result=>{\n                setGroups(result.dataset)\n                console.log(\"this is a group context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n    \n    return (\n        <>\n        <GroupContext.Provider  value={{\n            groups\n            }}>\n            {children}\n        </GroupContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{GroupProvider, GroupContext}","/Users/ruichunchen/splitwise-app/frontend/src/contexts/activityContext.js",["246"],"import React, {useState, useEffect } from 'react';\nimport {DB} from '../constants/DB'\nconst ActivityContext = React.createContext()\n\nfunction ActivityProvider({children}) {\n    const [activities, setActivities] = useState()\n\n    const getAll_URL= `${DB}/allActivity`\n    // const update_URL= `${DB}/update`\n    // const emailID = localStorage.getItem('authEmail');\n    // console.log(\"this is email\", emailID);\n\n    useEffect( ()=>{\n        try{\n            fetch(getAll_URL, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ID: localStorage.getItem(\"authID\")\n                })\n            }).then(res => res.json()).then(result=>{\n                setActivities(result.dataset)\n                console.log(\"this is a activity context\", result.dataset);\n            })\n        }catch(e){\n            console.log(e);\n        }\n    },[])\n\n    return (\n        <>\n        <ActivityContext.Provider  value={{\n            activities\n            }}>\n            {children}\n        </ActivityContext.Provider>\n        </>\n    )\n}\n\n\n\nexport{ActivityProvider, ActivityContext}","/Users/ruichunchen/splitwise-app/frontend/src/reducers/index.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/reducers/auth.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupPage.js",["247","248","249","250","251"],"import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport logo from '../../images/signup.png'\nimport {DB} from '../../constants/DB'\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from './SignupForm'\nimport { connect } from 'react-redux'\nimport {userSignupRequest} from '../../actions/signupActions'\nimport PropTypes from 'prop-types'\n\nclass SignupPage extends Component {\n    static propTypes = {\n        userSignupRequest : PropTypes.func.isRequired\n    }\n    \n    render(){\n        // console.log();\n        return (\n            <Row>\n            <Col>\n                <img src={logo} style={{width: \"50%\", margin: \"auto\", display: \"block\", marginTop: \"100px\"}}/>\n            </Col>\n            <Col>\n                <SignupForm userSignupRequest={this.props.userSignupRequest}/>\n            </Col>\n        </Row>\n        )\n    }\n}\n\nexport default connect(null, {userSignupRequest})(SignupPage);","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/SignupForm.js",["252","253"],"import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {userSignupRequest} from '../../actions/signupActions'\n\nclass SignupForm extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            username: '',\n            psswd: '',\n            email: '',\n            phone: '',\n            errors: ''\n        }\n    }\n\n    static propTypes = {\n        userSignupRequest : PropTypes.func.isRequired\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    refreshPage = (e) => {\n        window.location.replace(\"/home\");\n    }\n\n    onSubmit = (e) => {\n        this.setState({error: ''})\n        e.preventDefault();\n        this.props.userSignupRequest(this.state).then(\n            (res)=>{\n                if(this.props.msg && this.props.msg.msg)\n                    this.setState({errors: this.props.msg})\n                console.log(\"this.props.msg\",this.props.msg);\n                if(this.props.msg && this.props.msg.success){\n                    console.log(\"this.props.msg\",this.props.msg);\n                    console.log(\"this.props.msg.success\",this.props.msg.success);\n                    setTimeout(this.refreshPage, 1000);\n                }\n            },\n            ({response}) => {\n                console.log(\"fail\");\n            }\n        )\n    }\n\n    render(){\n        if(this.state.errors){\n            alert(this.state.errors.msg)\n            this.setState({errors:''})\n        }\n        return (\n        <Form style={{width: \"50vw\", padding: \"4rem\"}} onSubmit={this.onSubmit} method=\"POST\">\n\n            <Form.Group controlId=\"formGridUsername\">\n                <Form.Label>Hi there! My name is</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.onChange} required name=\"username\"/>\n                {/* {errors.username && <span>{errors.username}</span>} */}\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridPassword\">\n                <Form.Label>Here’s my password: </Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange} required name=\"psswd\"/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridEmail\">\n                <Form.Label>Here’s my email address: </Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={this.state.email} onChange={this.onChange} required name=\"email\"/>\n                {/* {errors.email && <span>{errors.email}</span>} */}\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridPhone\">\n                <Form.Label>And here’s my phone number: </Form.Label>\n                <Form.Control type=\"tel\" placeholder=\"123-456-7890\" value={this.state.phone} onChange={this.onChange} pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required name=\"phone\"/>\n            </Form.Group>\n\n\n            <Form.Text className=\"text-muted\">Already had account? <Button variant=\"link\">\n                    Sign me in!\n            </Button></Form.Text>\n\n            <Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form.Group>\n            <h6>By signing up, you accept the Splitwise Terms of Service.</h6>\n        </Form>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(\"state\", state);\n    return {\n        msg: state.auth.msg\n    }\n}\n\nexport default connect(mapStateToProps, {userSignupRequest})(SignupForm)\n\n","/Users/ruichunchen/splitwise-app/frontend/src/actions/signupActions.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginPage.js",["254"],"import React, { Component } from 'react'\nimport LoginForm from './LoginForm'\nimport { Button, Form } from 'react-bootstrap';\nimport { Application } from '../../components/export';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\n\nexport default class LoginPage extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            display: 'none'\n        }\n        this.toggleDisplay = this.toggleDisplay.bind(this)\n\n    }\n\n    toggleDisplay(){\n        if(this.state.display === \"none\"){\n            this.setState({display: \"display\"})\n        }else{\n            this.setState({display: \"none\"})\n        }\n    }\n    render() {\n        return (\n            <>\n                <Button variant=\"primary\" onClick={this.toggleDisplay}>Sign In</Button>\n                <Application.Base display = {this.state.display}>\n                    <Application.Close toggleDisplay={this.toggleDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n                    <LoginForm />\n                </Application.Base>\n            </>\n            \n        )\n    }\n}\n","/Users/ruichunchen/splitwise-app/frontend/src/pages/userauth/LoginForm.js",["255","256"],"import React, { Component } from 'react'\nimport { Button, Form, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {login} from '../../actions/loginActions.js'\n\nclass LoginForm extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            email: '',\n            psswd: '',\n            errors: {},\n            userInfo: ''\n        }\n    }\n    \n    static propTypes = {\n        login : PropTypes.func.isRequired\n    }\n\n    \n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        this.setState({error: {}})\n        e.preventDefault();\n        this.props.login(this.state).then(\n            (res) => setTimeout(window.location.reload(false), 5000),\n            ({response}) => {\n                if(response.status===401)\n                    alert(response.data.errors.form)\n                if(response.status===200)\n                    window.location.replace(\"/dashboard\");\n            }\n        )\n    }\n    render() {\n        const {errors} = this.state\n        if(errors.form){\n            alert(errors.form)\n        }\n        return (\n            <Form onSubmit={this.onSubmit} method=\"POST\">\n                <Form.Group controlId=\"formGridEmailLogin\">\n                    <Form.Label>Email: </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Email 123@gmail.com\" value={this.state.email} onChange={this.onChange} required name=\"email\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">\n                We'll never share your info with anyone else.\n                </Form.Text>\n\n                <Form.Group controlId=\"formGridPasswordLogin\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange} required name=\"psswd\"/>\n                </Form.Group>\n                <Form.Text className=\"text-muted\">Haven't have account? \n                    <Button variant=\"link\">\n                            Sign me in!\n                    </Button>\n                </Form.Text>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        )\n    }\n}\nexport default  connect(null, {login})(LoginForm)","/Users/ruichunchen/splitwise-app/frontend/src/actions/loginActions.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/constants/constant.js",[],"/Users/ruichunchen/splitwise-app/frontend/src/utils/validations/setAuthorizationToken.js",[],{"ruleId":"257","severity":1,"message":"258","line":11,"column":9,"nodeType":"259","messageId":"260","endLine":11,"endColumn":28},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"257","severity":1,"message":"265","line":1,"column":16,"nodeType":"259","messageId":"260","endLine":1,"endColumn":24},{"ruleId":"257","severity":1,"message":"266","line":1,"column":26,"nodeType":"259","messageId":"260","endLine":1,"endColumn":35},{"ruleId":"257","severity":1,"message":"267","line":5,"column":8,"nodeType":"259","messageId":"260","endLine":5,"endColumn":14},{"ruleId":"257","severity":1,"message":"268","line":2,"column":18,"nodeType":"259","messageId":"260","endLine":2,"endColumn":24},{"ruleId":"257","severity":1,"message":"269","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":9,"column":5,"nodeType":"272","messageId":"273","endLine":11,"endColumn":6},{"ruleId":"257","severity":1,"message":"274","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"275","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":24,"column":29,"nodeType":"278","endLine":24,"endColumn":68},{"ruleId":"257","severity":1,"message":"279","line":2,"column":18,"nodeType":"259","messageId":"260","endLine":2,"endColumn":22},{"ruleId":"257","severity":1,"message":"280","line":2,"column":68,"nodeType":"259","messageId":"260","endLine":2,"endColumn":75},{"ruleId":"257","severity":1,"message":"281","line":2,"column":77,"nodeType":"259","messageId":"260","endLine":2,"endColumn":91},{"ruleId":"257","severity":1,"message":"282","line":2,"column":93,"nodeType":"259","messageId":"260","endLine":2,"endColumn":100},{"ruleId":"257","severity":1,"message":"283","line":14,"column":12,"nodeType":"259","messageId":"260","endLine":14,"endColumn":17},{"ruleId":"257","severity":1,"message":"284","line":14,"column":19,"nodeType":"259","messageId":"260","endLine":14,"endColumn":27},{"ruleId":"257","severity":1,"message":"285","line":23,"column":12,"nodeType":"259","messageId":"260","endLine":23,"endColumn":17},{"ruleId":"257","severity":1,"message":"286","line":23,"column":18,"nodeType":"259","messageId":"260","endLine":23,"endColumn":26},{"ruleId":"257","severity":1,"message":"287","line":28,"column":14,"nodeType":"259","messageId":"260","endLine":28,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":62,"column":7,"nodeType":"290","endLine":62,"endColumn":9,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":111,"column":36,"nodeType":"294","messageId":"295","endLine":111,"endColumn":38},{"ruleId":"292","severity":1,"message":"293","line":124,"column":35,"nodeType":"294","messageId":"295","endLine":124,"endColumn":37},{"ruleId":"257","severity":1,"message":"296","line":26,"column":11,"nodeType":"259","messageId":"260","endLine":26,"endColumn":18},{"ruleId":"288","severity":1,"message":"297","line":62,"column":7,"nodeType":"290","endLine":62,"endColumn":16,"suggestions":"298"},{"ruleId":"257","severity":1,"message":"299","line":1,"column":26,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"300","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"301","line":17,"column":12,"nodeType":"259","messageId":"260","endLine":17,"endColumn":17},{"ruleId":"302","severity":1,"message":"303","line":86,"column":14,"nodeType":"259","messageId":"304","endLine":86,"endColumn":25},{"ruleId":"257","severity":1,"message":"265","line":1,"column":16,"nodeType":"259","messageId":"260","endLine":1,"endColumn":24},{"ruleId":"257","severity":1,"message":"266","line":1,"column":36,"nodeType":"259","messageId":"260","endLine":1,"endColumn":45},{"ruleId":"257","severity":1,"message":"268","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"305","line":2,"column":28,"nodeType":"259","messageId":"260","endLine":2,"endColumn":33},{"ruleId":"292","severity":1,"message":"293","line":16,"column":38,"nodeType":"294","messageId":"295","endLine":16,"endColumn":40},{"ruleId":"257","severity":1,"message":"266","line":1,"column":37,"nodeType":"259","messageId":"260","endLine":1,"endColumn":46},{"ruleId":"257","severity":1,"message":"306","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":49},{"ruleId":"257","severity":1,"message":"300","line":10,"column":10,"nodeType":"259","messageId":"260","endLine":10,"endColumn":15},{"ruleId":"257","severity":1,"message":"307","line":23,"column":12,"nodeType":"259","messageId":"260","endLine":23,"endColumn":16},{"ruleId":"257","severity":1,"message":"308","line":23,"column":17,"nodeType":"259","messageId":"260","endLine":23,"endColumn":24},{"ruleId":"257","severity":1,"message":"309","line":25,"column":12,"nodeType":"259","messageId":"260","endLine":25,"endColumn":20},{"ruleId":"257","severity":1,"message":"310","line":25,"column":22,"nodeType":"259","messageId":"260","endLine":25,"endColumn":33},{"ruleId":"292","severity":1,"message":"293","line":41,"column":40,"nodeType":"294","messageId":"295","endLine":41,"endColumn":42},{"ruleId":"257","severity":1,"message":"268","line":1,"column":10,"nodeType":"259","messageId":"260","endLine":1,"endColumn":16},{"ruleId":"257","severity":1,"message":"311","line":1,"column":24,"nodeType":"259","messageId":"260","endLine":1,"endColumn":27},{"ruleId":"257","severity":1,"message":"312","line":1,"column":29,"nodeType":"259","messageId":"260","endLine":1,"endColumn":32},{"ruleId":"276","severity":1,"message":"277","line":32,"column":9,"nodeType":"278","endLine":32,"endColumn":75},{"ruleId":"257","severity":1,"message":"266","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"279","line":2,"column":22,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"313","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":12},{"ruleId":"257","severity":1,"message":"314","line":5,"column":8,"nodeType":"259","messageId":"260","endLine":5,"endColumn":17},{"ruleId":"257","severity":1,"message":"315","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":17},{"ruleId":"257","severity":1,"message":"266","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"279","line":2,"column":22,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"313","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":12},{"ruleId":"257","severity":1,"message":"314","line":5,"column":8,"nodeType":"259","messageId":"260","endLine":5,"endColumn":17},{"ruleId":"257","severity":1,"message":"315","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":17},{"ruleId":"257","severity":1,"message":"316","line":2,"column":54,"nodeType":"259","messageId":"260","endLine":2,"endColumn":65},{"ruleId":"257","severity":1,"message":"317","line":19,"column":12,"nodeType":"259","messageId":"260","endLine":19,"endColumn":24},{"ruleId":"257","severity":1,"message":"318","line":19,"column":26,"nodeType":"259","messageId":"260","endLine":19,"endColumn":41},{"ruleId":"257","severity":1,"message":"319","line":20,"column":12,"nodeType":"259","messageId":"260","endLine":20,"endColumn":18},{"ruleId":"257","severity":1,"message":"320","line":20,"column":20,"nodeType":"259","messageId":"260","endLine":20,"endColumn":29},{"ruleId":"288","severity":1,"message":"321","line":39,"column":7,"nodeType":"290","endLine":39,"endColumn":9,"suggestions":"322"},{"ruleId":"257","severity":1,"message":"279","line":2,"column":22,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"313","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":12},{"ruleId":"288","severity":1,"message":"323","line":30,"column":7,"nodeType":"290","endLine":30,"endColumn":17,"suggestions":"324"},{"ruleId":"257","severity":1,"message":"279","line":1,"column":25,"nodeType":"259","messageId":"260","endLine":1,"endColumn":29},{"ruleId":"257","severity":1,"message":"325","line":1,"column":31,"nodeType":"259","messageId":"260","endLine":1,"endColumn":41},{"ruleId":"257","severity":1,"message":"316","line":1,"column":43,"nodeType":"259","messageId":"260","endLine":1,"endColumn":54},{"ruleId":"257","severity":1,"message":"326","line":2,"column":18,"nodeType":"259","messageId":"260","endLine":2,"endColumn":24},{"ruleId":"257","severity":1,"message":"327","line":2,"column":33,"nodeType":"259","messageId":"260","endLine":2,"endColumn":39},{"ruleId":"257","severity":1,"message":"328","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":13},{"ruleId":"257","severity":1,"message":"329","line":8,"column":9,"nodeType":"259","messageId":"260","endLine":8,"endColumn":20},{"ruleId":"330","severity":1,"message":"331","line":156,"column":25,"nodeType":"332","endLine":156,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":183,"column":86,"nodeType":"278","endLine":183,"endColumn":127},{"ruleId":"257","severity":1,"message":"333","line":10,"column":21,"nodeType":"259","messageId":"260","endLine":10,"endColumn":31},{"ruleId":"288","severity":1,"message":"297","line":38,"column":7,"nodeType":"290","endLine":38,"endColumn":66,"suggestions":"334"},{"ruleId":"257","severity":1,"message":"335","line":9,"column":11,"nodeType":"259","messageId":"260","endLine":9,"endColumn":21},{"ruleId":"288","severity":1,"message":"336","line":31,"column":7,"nodeType":"290","endLine":31,"endColumn":9,"suggestions":"337"},{"ruleId":"288","severity":1,"message":"336","line":31,"column":7,"nodeType":"290","endLine":31,"endColumn":9,"suggestions":"338"},{"ruleId":"257","severity":1,"message":"268","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"279","line":2,"column":18,"nodeType":"259","messageId":"260","endLine":2,"endColumn":22},{"ruleId":"257","severity":1,"message":"339","line":4,"column":9,"nodeType":"259","messageId":"260","endLine":4,"endColumn":11},{"ruleId":"257","severity":1,"message":"340","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":20},{"ruleId":"276","severity":1,"message":"277","line":21,"column":17,"nodeType":"278","endLine":21,"endColumn":111},{"ruleId":"257","severity":1,"message":"311","line":2,"column":24,"nodeType":"259","messageId":"260","endLine":2,"endColumn":27},{"ruleId":"257","severity":1,"message":"312","line":2,"column":29,"nodeType":"259","messageId":"260","endLine":2,"endColumn":32},{"ruleId":"257","severity":1,"message":"279","line":3,"column":18,"nodeType":"259","messageId":"260","endLine":3,"endColumn":22},{"ruleId":"257","severity":1,"message":"311","line":2,"column":24,"nodeType":"259","messageId":"260","endLine":2,"endColumn":27},{"ruleId":"257","severity":1,"message":"312","line":2,"column":29,"nodeType":"259","messageId":"260","endLine":2,"endColumn":32},"no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar","no-native-reassign",["341"],"no-negated-in-lhs",["342"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Footer' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Navbar' is defined but never used.","'faTimes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'Tooltip' is defined but never used.","'OverlayTrigger' is defined but never used.","'Popover' is defined but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'three' is assigned a value but never used.","'setThree' is assigned a value but never used.","'toggleDisplay' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userOwe_URL' and 'user_URL'. Either include them or remove the dependency array.","ArrayExpression",["343"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'emailID' and 'getAll_URL'. Either include them or remove the dependency array.",["344"],"'useContext' is defined but never used.","'faPen' is defined but never used.","'users' is assigned a value but never used.","no-redeclare","'refreshPage' is already defined.","redeclared","'Image' is defined but never used.","'Dropdown' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'logo' is defined but never used.","'category2' is defined but never used.","'category3' is defined but never used.","'FormControl' is defined but never used.","'currentGroup' is assigned a value but never used.","'setCurrentGroup' is assigned a value but never used.","'others' is assigned a value but never used.","'setOthers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'group_URL'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'calculate_URL'. Either include it or remove the dependency array.",["346"],"'InputGroup' is defined but never used.","'faList' is defined but never used.","'faUser' is defined but never used.","'axios' is defined but never used.","'Application' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'setPicture' is assigned a value but never used.",["347"],"'update_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAll_URL'. Either include it or remove the dependency array.",["348"],["349"],"'DB' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"360","fix":"362"},"Update the dependencies array to be: [userOwe_URL, user_URL]",{"range":"363","text":"364"},"Update the dependencies array to be: [emailID, getAll_URL, picture]",{"range":"365","text":"366"},"Update the dependencies array to be: [group_URL]",{"range":"367","text":"368"},"Update the dependencies array to be: [calculate_URL, props.id]",{"range":"369","text":"370"},"Update the dependencies array to be: [username, email, phone, picture, currency, time, language, getAll_URL, emailID]",{"range":"371","text":"372"},"Update the dependencies array to be: [getAll_URL]",{"range":"373","text":"374"},{"range":"375","text":"374"},[2229,2231],"[userOwe_URL, user_URL]",[2015,2024],"[emailID, getAll_URL, picture]",[1414,1416],"[group_URL]",[957,967],"[calculate_URL, props.id]",[1273,1332],"[username, email, phone, picture, currency, time, language, getAll_URL, emailID]",[994,996],"[getAll_URL]",[1027,1029]]